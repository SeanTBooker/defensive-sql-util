--------------------------------------------------------
--  File created - Friday-April-18-2014   
--------------------------------------------------------
-- DROP TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" cascade constraints;
--------------------------------------------------------
--  DDL for Table VALIDATION_ERROR_MESSAGE
--------------------------------------------------------
DECLARE
  cnt_v number (2) := 0;
BEGIN
   SELECT  COUNT(*)
     INTO  cnt_v
     FROM  ALL_TABLES
    WHERE ALL_TABLES.OWNER = UPPER('CROWN') and
    TABLE_NAME = UPPER('VALIDATION_ERROR_MESSAGE');
   if (cnt_v = 0) then
          CREATE TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" 
           (  "ERROR_CODE" NUMBER(10,0), 
              "NAME" VARCHAR2(255 BYTE), 
              "LABEL" VARCHAR2(255 BYTE), 
              "ACTIVE" NUMBER(1,0) DEFAULT 1, 
              "SORT_ORDER" NUMBER(5,0), 
              "CATEGORY" NUMBER(5,0), 
              "SUB_CATEGORY" NUMBER(5,0), 
              "IS_WARNING" NUMBER(1,0) DEFAULT 0, 
              "CREATE_TIME" DATE, 
              "UPDATE_TIME" DATE
          ) SEGMENT CREATION IMMEDIATE 
          PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 
         COMPRESS BASIC LOGGING
          STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
          PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
          BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
          TABLESPACE "CROWN_DATA" ;
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."ERROR_CODE" IS 'Unique error code';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."NAME" IS 'Unique name';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."LABEL" IS 'Error message';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."ACTIVE" IS 'Not used';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."SORT_ORDER" IS 'Not used';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."CATEGORY" IS 'Category of message, e.g., patient, clinical';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."SUB_CATEGORY" IS 'Sub-category of message, e.g., treatment, vascular access';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."IS_WARNING" IS 'Type of error message, e.g, error or warning';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."CREATE_TIME" IS 'Creation time of the record';
            COMMENT ON COLUMN "CROWN"."VALIDATION_ERROR_MESSAGE"."UPDATE_TIME" IS 'Time when the record is updated';
            GRANT UPDATE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT INSERT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT DELETE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNREPORT";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNCLINICAL";
          --------------------------------------------------------
          --  DDL for Index VALIDATION_ERROR_MESSAGE_PK
          --------------------------------------------------------
            CREATE UNIQUE INDEX "CROWN"."VALIDATION_ERROR_MESSAGE_PK" ON "CROWN"."VALIDATION_ERROR_MESSAGE" ("ERROR_CODE") 
            PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
            STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
            PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
            BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
            TABLESPACE "CROWN_INDEX" ;
          --------------------------------------------------------
          --  Constraints for Table VALIDATION_ERROR_MESSAGE
          --------------------------------------------------------
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" ADD CONSTRAINT "VALIDATION_ERROR_MESSAGE_PK" PRIMARY KEY ("ERROR_CODE")
            USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
            STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
            PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
            BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
            TABLESPACE "CROWN_INDEX"  ENABLE;
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("CREATE_TIME" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("IS_WARNING" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("SUB_CATEGORY" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("CATEGORY" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("SORT_ORDER" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("ACTIVE" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("LABEL" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("NAME" NOT NULL ENABLE);
            ALTER TABLE "CROWN"."VALIDATION_ERROR_MESSAGE" MODIFY ("ERROR_CODE" NOT NULL ENABLE);
            GRANT UPDATE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT INSERT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT DELETE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNREPORT";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNCLINICAL";
            GRANT UPDATE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT INSERT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT DELETE ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWN_WEBUSER";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNREPORT";
            GRANT SELECT ON "CROWN"."VALIDATION_ERROR_MESSAGE" TO "CROWNCLINICAL";
   end if;
end;
/
-- INSERTING into CROWN.VALIDATION_ERROR_MESSAGE
SET DEFINE OFF;
SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12519;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12519,'CW 4.0','Pre-Dialysis Weight must be greater than zero (0).',1,707,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12519,  
NAME = 'CW 4.0',  
LABEL = 'Pre-Dialysis Weight must be greater than zero (0).',  
ACTIVE = 1,  
SORT_ORDER = 707,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12519;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12520;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12520,'CW 4.0','Pre-Dialysis Weight Unit of Measure is mandatory when Pre-Dialysis Weight is populated.',1,708,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12520,  
NAME = 'CW 4.0',  
LABEL = 'Pre-Dialysis Weight Unit of Measure is mandatory when Pre-Dialysis Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 708,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12520;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12521;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12521,'CW 4.0','Kt/V Date is mandatory when Pre-Dialysis Weight is populated.',1,709,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12521,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Pre-Dialysis Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 709,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12521;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12522;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12522,'CW 4.0','Pre-Dialysis Weight is not in the valid range ({0} lbs or {1} kg).',1,710,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12522,  
NAME = 'CW 4.0',  
LABEL = 'Pre-Dialysis Weight is not in the valid range ({0} lbs or {1} kg).',  
ACTIVE = 1,  
SORT_ORDER = 710,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12522;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12523;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12523,'CW 4.0','Post-Dialysis Weight is mandatory. Select N/A if Post-Dialysis Weight was not recorded for the patient for the clinical month.',1,711,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12523,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight is mandatory. Select N/A if Post-Dialysis Weight was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 711,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12523;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12524;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12524,'CW 4.0','Post-Dialysis Weight must be greater than zero (0).',1,712,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12524,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight must be greater than zero (0).',  
ACTIVE = 1,  
SORT_ORDER = 712,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12524;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12525;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12525,'CW 4.0','Post-Dialysis Weight is more than 5% greater than the Pre-Dialysis Weight.',1,713,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12525,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight is more than 5% greater than the Pre-Dialysis Weight.',  
ACTIVE = 1,  
SORT_ORDER = 713,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12525;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12526;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12526,'CW 4.0','Post-Dialysis Weight Unit of Measure is mandatory when Post-Dialysis Weight is populated.',1,714,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12526,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight Unit of Measure is mandatory when Post-Dialysis Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 714,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12526;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12527;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12527,'CW 4.0','Kt/V Date is mandatory when Post-Dialysis Weight is populated.',1,715,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12527,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Post-Dialysis Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 715,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12527;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12528;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12528,'CW 4.0','Post-Dialysis Weight is not in the valid range ({0} lbs or {1} kg).',1,716,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12528,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight is not in the valid range ({0} lbs or {1} kg).',  
ACTIVE = 1,  
SORT_ORDER = 716,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12528;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12530;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12530,'CW 4.0','Delivered Minutes of BUN Hemodialysis Session is not in the valid range (60 - 600).',1,718,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12530,  
NAME = 'CW 4.0',  
LABEL = 'Delivered Minutes of BUN Hemodialysis Session is not in the valid range (60 - 600).',  
ACTIVE = 1,  
SORT_ORDER = 718,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12530;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12532;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12532,'CW 4.0','Height Unit of Measure is mandatory when Height is populated.',1,719,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12532,  
NAME = 'CW 4.0',  
LABEL = 'Height Unit of Measure is mandatory when Height is populated.',  
ACTIVE = 1,  
SORT_ORDER = 719,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12532;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12533;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12533,'CW 4.0','Height is not in the valid range ({0} in or {1} cm).',1,720,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12533,  
NAME = 'CW 4.0',  
LABEL = 'Height is not in the valid range ({0} in or {1} cm).',  
ACTIVE = 1,  
SORT_ORDER = 720,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12533;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12534;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12534,'CW 4.0','Serum Creatinine is mandatory. Select N/A if Serum Creatinine was not recorded for the patient for the clinical month.',1,721,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12534,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine is mandatory. Select N/A if Serum Creatinine was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 721,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12534;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12535;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12535,'CW 4.0','Serum Creatinine is not in the valid range (2.0 - 25.0).',1,722,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12535,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine is not in the valid range (2.0 - 25.0).',  
ACTIVE = 1,  
SORT_ORDER = 722,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12535;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12537;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12537,'CW 4.0','Serum Creatinine Date is mandatory when Serum Creatinine is populated.',1,723,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12537,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date is mandatory when Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 723,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12537;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12538;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12538,'CW 4.0','Serum Creatinine Date must be in the Clinical Month and Year.',1,724,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12538,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 724,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12538;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12539;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12539,'CW 4.0','Serum Creatinine Date must be on or after 01/01/1973.',1,725,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12539,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 725,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12539;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12540;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12540,'CW 4.0','Serum Creatinine Date cannot be a future date.',1,726,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12540,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 726,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12540;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12541;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12541,'CW 4.0','Serum Creatinine Date cannot be prior to the patient''''s Date of Birth ({0}).',1,727,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12541,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 727,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12541;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12542;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12542,'CW 4.0','Serum Creatinine Date cannot be after the patient''''s Date of Death ({0}).',1,728,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12542,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 728,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12542;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12543;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12543,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Serum Creatinine Date entered.',0,729,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12543,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Serum Creatinine Date entered.',  
ACTIVE = 0,  
SORT_ORDER = 729,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12543;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12544;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12544,'CW 4.0','Height cannot be zero (0).',1,730,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12544,  
NAME = 'CW 4.0',  
LABEL = 'Height cannot be zero (0).',  
ACTIVE = 1,  
SORT_ORDER = 730,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12544;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12601;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12601,'CW 4.0','Kt/V is mandatory. Select N/A if Kt/V was not recorded for the patient for the clinical month.',1,731,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12601,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V is mandatory. Select N/A if Kt/V was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 731,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12601;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12602;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12602,'CW 4.0','Kt/V is not in the valid range ({0}).',1,732,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12602,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V is not in the valid range ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 732,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12602;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12603;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12603,'CW 4.0','Kt/V Date is mandatory when Patient Height is populated.',1,733,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12603,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Patient Height is populated.',  
ACTIVE = 1,  
SORT_ORDER = 733,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12603;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12604;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12604,'CW 4.0','Kt/V Date is mandatory when Kt/V is populated.',1,734,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12604,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Kt/V is populated.',  
ACTIVE = 1,  
SORT_ORDER = 734,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12604;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12605;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12605,'CW 4.0','Kt/V Date must be in the Clinical Month and Year.',1,735,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12605,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 735,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12605;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12606;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12606,'CW 4.0','Kt/V Date must be on or after 01/01/1973.',1,736,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12606,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 736,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12606;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12607;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12607,'CW 4.0','Kt/V Date cannot be a future date.',1,737,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12607,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 737,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12607;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12608;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12608,'CW 4.0','Kt/V Date cannot be prior to the patient''''s Date of Birth ({0}).',1,738,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12608,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 738,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12608;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12609;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12609,'CW 4.0','Kt/V Date cannot be after the patient''''s Date of Death ({0}).',1,739,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12609,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 739,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12609;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12610;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12610,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Kt/V Date entered.',1,740,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12610,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Kt/V Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 740,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12610;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12611;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12611,'CW 4.0','V Method is mandatory when Kt/V is populated.',1,741,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12611,  
NAME = 'CW 4.0',  
LABEL = 'V Method is mandatory when Kt/V is populated.',  
ACTIVE = 1,  
SORT_ORDER = 741,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12611;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12613;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12613,'CW 4.0','Body Surface Area (BSA) Method is mandatory. Select N/A if BSA Method was not recorded for the patient for the clinical month.',1,742,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12613,  
NAME = 'CW 4.0',  
LABEL = 'Body Surface Area (BSA) Method is mandatory. Select N/A if BSA Method was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 742,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12613;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12614;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12614,'CW 4.0','RRF Assessed in Kt/V is mandatory. Select N/A if RRF Assessed in Kt/V was not recorded for the patient for the clinical month.',1,743,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12614,  
NAME = 'CW 4.0',  
LABEL = 'RRF Assessed in Kt/V is mandatory. Select N/A if RRF Assessed in Kt/V was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 743,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12614;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12615;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12615,'CW 4.0','Prescription Change after Adequacy Measurement is mandatory when Weekly Kt/V is populated.',1,744,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12615,  
NAME = 'CW 4.0',  
LABEL = 'Prescription Change after Adequacy Measurement is mandatory when Weekly Kt/V is populated.',  
ACTIVE = 1,  
SORT_ORDER = 744,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12615;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12616;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12616,'CW 4.0','Dialysate Volume is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, Serum BUN, or Serum Creatinine is populated.',1,745,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12616,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Volume is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, Serum BUN, or Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 745,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12616;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12617;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12617,'CW 4.0','Weekly Kt/V Date is mandatory when Dialysate Volume is populated.',1,746,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12617,  
NAME = 'CW 4.0',  
LABEL = 'Weekly Kt/V Date is mandatory when Dialysate Volume is populated.',  
ACTIVE = 1,  
SORT_ORDER = 746,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12617;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12618;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12618,'CW 4.0','Dialysate Volume is not in the valid range ( {0} ).',1,747,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12618,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Volume is not in the valid range ( {0} ).',  
ACTIVE = 1,  
SORT_ORDER = 747,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12618;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12619;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12619,'CW 4.0','Dialysate Urea Nitrogen is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Creatinine, Urine Volume, Serum BUN, or Serum Creatinine is populated.',1,748,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12619,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Urea Nitrogen is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Creatinine, Urine Volume, Serum BUN, or Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 748,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12619;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12620;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12620,'CW 4.0','Dialysate Urea Nitrogen is not in the valid range (10.0 - 500.0).',1,749,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12620,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Urea Nitrogen is not in the valid range (10.0 - 500.0).',  
ACTIVE = 1,  
SORT_ORDER = 749,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12620;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12621;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12621,'CW 4.0','Dialysate Creatinine is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Urea Nitrogen, Urine Volume, Serum BUN, or Serum Creatinine is populated.',1,750,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12621,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Creatinine is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Urea Nitrogen, Urine Volume, Serum BUN, or Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 750,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12621;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12622;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12622,'CW 4.0','Dialysate Creatinine is not in the valid range (2.5 - 20.0).',1,751,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12622,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Creatinine is not in the valid range (2.5 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 751,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12622;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12623;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12623,'CW 4.0','Serum Creatinine is mandatory when Serum Creatinine Collection Date, Dialysate Volume, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, or Serum BUN is populated.',1,752,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12623,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine is mandatory when Serum Creatinine Collection Date, Dialysate Volume, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, or Serum BUN is populated.',  
ACTIVE = 1,  
SORT_ORDER = 752,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12623;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12624;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12624,'CW 4.0','Urine Volume is not in the valid range (10 - 3500).',1,753,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12624,  
NAME = 'CW 4.0',  
LABEL = 'Urine Volume is not in the valid range (10 - 3500).',  
ACTIVE = 1,  
SORT_ORDER = 753,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12624;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12625;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12625,'CW 4.0','Urine Urea Nitrogen is mandatory when Urine Volume is populated.',1,754,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12625,  
NAME = 'CW 4.0',  
LABEL = 'Urine Urea Nitrogen is mandatory when Urine Volume is populated.',  
ACTIVE = 1,  
SORT_ORDER = 754,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12625;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12626;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12626,'CW 4.0','Urine Urea Nitrogen is not in the valid range (10.0 - 950.0).',1,755,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12626,  
NAME = 'CW 4.0',  
LABEL = 'Urine Urea Nitrogen is not in the valid range (10.0 - 950.0).',  
ACTIVE = 1,  
SORT_ORDER = 755,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12626;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12627;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12627,'CW 4.0','Urine Creatinine is mandatory when Urine Volume is populated.',1,756,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12627,  
NAME = 'CW 4.0',  
LABEL = 'Urine Creatinine is mandatory when Urine Volume is populated.',  
ACTIVE = 1,  
SORT_ORDER = 756,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12627;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12628;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12628,'CW 4.0','Urine Creatinine is not in the valid range (1.0 - 400.0).',1,757,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12628,  
NAME = 'CW 4.0',  
LABEL = 'Urine Creatinine is not in the valid range (1.0 - 400.0).',  
ACTIVE = 1,  
SORT_ORDER = 757,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12628;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12629;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12629,'CW 4.0','Serum BUN is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, or Serum Creatinine is populated.',1,758,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12629,  
NAME = 'CW 4.0',  
LABEL = 'Serum BUN is mandatory when Clinic Weight, Creatinine Clearance, Dialysate Volume, Dialysate Urea Nitrogen, Dialysate Creatinine, Urine Volume, or Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 758,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12629;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12630;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12630,'CW 4.0','Serum BUN is not in the valid range (15 - 140).',1,759,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12630,  
NAME = 'CW 4.0',  
LABEL = 'Serum BUN is not in the valid range (15 - 140).',  
ACTIVE = 1,  
SORT_ORDER = 759,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12630;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12631;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12631,'CW 4.0','Clinic Weight is mandatory. Select N/A if Clinic Weight was not recorded for the patient for the clinical month.',1,760,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12631,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight is mandatory. Select N/A if Clinic Weight was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 760,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12631;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12632;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12632,'CW 4.0','Clinic Weight Unit of Measurement is mandatory when Clinic Weight is populated.',1,761,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12632,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight Unit of Measurement is mandatory when Clinic Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 761,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12632;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12633;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12633,'CW 4.0','Kt/V Date is mandatory when Clinic Weight is populated.',1,762,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12633,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Clinic Weight is populated.',  
ACTIVE = 1,  
SORT_ORDER = 762,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12633;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12634;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12634,'CW 4.0','Clinic Weight is not in the valid range ({0} lbs or {1} kg).',1,763,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12634,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight is not in the valid range ({0} lbs or {1} kg).',  
ACTIVE = 1,  
SORT_ORDER = 763,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12634;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12635;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12635,'CW 4.0','Creatinine Clearance is mandatory. Select N/A if Creatinine Clearance was not recorded for the patient for the clinical month.',1,764,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12635,  
NAME = 'CW 4.0',  
LABEL = 'Creatinine Clearance is mandatory. Select N/A if Creatinine Clearance was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 764,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12635;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12636;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12636,'CW 4.0','Creatinine Clearance Unit of Measure is mandatory when Creatinine Clearance is populated.',1,765,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12636,  
NAME = 'CW 4.0',  
LABEL = 'Creatinine Clearance Unit of Measure is mandatory when Creatinine Clearance is populated.',  
ACTIVE = 1,  
SORT_ORDER = 765,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12636;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12637;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12637,'CW 4.0','Creatinine Clearance is not in the valid range ({0}).',1,766,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12637,  
NAME = 'CW 4.0',  
LABEL = 'Creatinine Clearance is not in the valid range ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 766,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12637;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 100;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (100,'CW 4.0','Patient could not be processed due to possible matches',1,1,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 100,  
NAME = 'CW 4.0',  
LABEL = 'Patient could not be processed due to possible matches',  
ACTIVE = 1,  
SORT_ORDER = 1,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 100;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 110;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (110,'CW 4.0','Patient could not be matched due to not enough patient identifiers',1,2,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 110,  
NAME = 'CW 4.0',  
LABEL = 'Patient could not be matched due to not enough patient identifiers',  
ACTIVE = 1,  
SORT_ORDER = 2,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 110;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 200;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (200,'CW 4.0','PatientIdentifier, address, and race elements cannot be processed since the patient is not actively admitted by the facility managed by this organization',1,3,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 200,  
NAME = 'CW 4.0',  
LABEL = 'PatientIdentifier, address, and race elements cannot be processed since the patient is not actively admitted by the facility managed by this organization',  
ACTIVE = 1,  
SORT_ORDER = 3,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 200;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 201;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (201,'CW 4.0','Admit Discharge record with admitDischargeUniqueID {0} cannot be processed as there are multiple existing admissions for this patient at the same facility that have an equal range of days different from the submitted Admit Date.',1,4,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 201,  
NAME = 'CW 4.0',  
LABEL = 'Admit Discharge record with admitDischargeUniqueID {0} cannot be processed as there are multiple existing admissions for this patient at the same facility that have an equal range of days different from the submitted Admit Date.',  
ACTIVE = 1,  
SORT_ORDER = 4,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 201;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 202;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (202,'CW 4.0','Date of Death already exists',1,5,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 202,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death already exists',  
ACTIVE = 1,  
SORT_ORDER = 5,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 202;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 203;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (203,'CW 4.0','DOD not same as death discharge date',1,6,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 203,  
NAME = 'CW 4.0',  
LABEL = 'DOD not same as death discharge date',  
ACTIVE = 1,  
SORT_ORDER = 6,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 203;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 301;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (301,'CW 4.0','Patient Treatment is matched as per Treatment Start Date and DialysisSettingType modified from ({0}).',1,7,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 301,  
NAME = 'CW 4.0',  
LABEL = 'Patient Treatment is matched as per Treatment Start Date and DialysisSettingType modified from ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 7,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 301;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 302;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (302,'CW 4.0','Patient Treatment is matched as per Treatment Start Date and DialysisType modified from ({0}).',1,8,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 302,  
NAME = 'CW 4.0',  
LABEL = 'Patient Treatment is matched as per Treatment Start Date and DialysisType modified from ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 8,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 302;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 400;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (400,'CW 4.0','Could not find an unique facility with the given orgFacilityCode {0}',1,9,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 400,  
NAME = 'CW 4.0',  
LABEL = 'Could not find an unique facility with the given orgFacilityCode {0}',  
ACTIVE = 1,  
SORT_ORDER = 9,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 400;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 401;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (401,'CW 4.0','Could not find an unique patient with the given orgPatientId {0}',1,10,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 401,  
NAME = 'CW 4.0',  
LABEL = 'Could not find an unique patient with the given orgPatientId {0}',  
ACTIVE = 1,  
SORT_ORDER = 10,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 401;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 500;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (500,'CW 4.0','Sessions per week required for dialysis treatment  ',1,11,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 500,  
NAME = 'CW 4.0',  
LABEL = 'Sessions per week required for dialysis treatment  ',  
ACTIVE = 1,  
SORT_ORDER = 11,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 500;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 501;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (501,'CW 4.0','Minutes per week required for dialysis treatment',1,12,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 501,  
NAME = 'CW 4.0',  
LABEL = 'Minutes per week required for dialysis treatment',  
ACTIVE = 1,  
SORT_ORDER = 12,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 501;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11101;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11101,'CW 4.0','Physical Address is incomplete - missing Line One.',1,13,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('06-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11101,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is incomplete - missing Line One.',  
ACTIVE = 1,  
SORT_ORDER = 13,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('06-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11101;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11102;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11102,'CW 4.0','Physical Address is incomplete - missing Zip Code.',1,14,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11102,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is incomplete - missing Zip Code.',  
ACTIVE = 1,  
SORT_ORDER = 14,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11102;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11103;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11103,'CW 4.0','Physical Address is incomplete - missing City.',1,15,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11103,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is incomplete - missing City.',  
ACTIVE = 1,  
SORT_ORDER = 15,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11103;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11104;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11104,'CW 4.0','Physical Address is incomplete - missing State.',1,16,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11104,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is incomplete - missing State.',  
ACTIVE = 1,  
SORT_ORDER = 16,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11104;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11105;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11105,'CW 4.0','Physical Address  Zip Code must be 5 digits.',1,17,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11105,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address  Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 17,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11105;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11106;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11106,'CW 4.0','Physical Address Zip Code Extension must be 4 digits.',1,18,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11106,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address Zip Code Extension must be 4 digits.',  
ACTIVE = 1,  
SORT_ORDER = 18,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11106;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11107;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11107,'CW 4.0','Physical Address is incomplete - missing County.',1,19,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11107,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is incomplete - missing County.',  
ACTIVE = 1,  
SORT_ORDER = 19,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11107;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11111;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11111,'CW 4.0','Mailing Address is incomplete - missing Line One.',1,20,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11111,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address is incomplete - missing Line One.',  
ACTIVE = 1,  
SORT_ORDER = 20,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11111;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11112;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11112,'CW 4.0','Mailing Address is incomplete - missing Zip Code.',1,21,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11112,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address is incomplete - missing Zip Code.',  
ACTIVE = 1,  
SORT_ORDER = 21,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11112;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11113;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11113,'CW 4.0','Mailing Address is incomplete - missing City.',1,22,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11113,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address is incomplete - missing City.',  
ACTIVE = 1,  
SORT_ORDER = 22,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11113;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11114;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11114,'CW 4.0','Mailing Address is incomplete - missing State.',1,23,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11114,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address is incomplete - missing State.',  
ACTIVE = 1,  
SORT_ORDER = 23,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11114;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11115;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11115,'CW 4.0','Mailing Address  Zip Code must be 5 digits.',1,24,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11115,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address  Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 24,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11115;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11116;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11116,'CW 4.0','Mailing Address Zip Code Extension must be 4 digits.',1,25,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11116,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address Zip Code Extension must be 4 digits.',  
ACTIVE = 1,  
SORT_ORDER = 25,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11116;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11131;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11131,'CW 4.0','Transient Address is incomplete - missing Line One.',1,26,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11131,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address is incomplete - missing Line One.',  
ACTIVE = 1,  
SORT_ORDER = 26,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11131;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11132;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11132,'CW 4.0','Transient Address is incomplete - missing Zip Code.',1,27,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11132,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address is incomplete - missing Zip Code.',  
ACTIVE = 1,  
SORT_ORDER = 27,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11132;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11133;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11133,'CW 4.0','Transient Address is incomplete - missing City.',1,28,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11133,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address is incomplete - missing City.',  
ACTIVE = 1,  
SORT_ORDER = 28,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11133;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11134;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11134,'CW 4.0','Transient Address is incomplete - missing State.',1,29,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11134,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address is incomplete - missing State.',  
ACTIVE = 1,  
SORT_ORDER = 29,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11134;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11135;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11135,'CW 4.0','Transient Address  Zip Code must be 5 digits.',1,30,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11135,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address  Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 30,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11135;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11136;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11136,'CW 4.0','Transient Address Zip Code Extension must be 4 digits.',1,31,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11136,  
NAME = 'CW 4.0',  
LABEL = 'Transient Address Zip Code Extension must be 4 digits.',  
ACTIVE = 1,  
SORT_ORDER = 31,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11136;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11141;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11141,'CW 4.0','Transient Phone Number is a required field.',0,32,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11141,  
NAME = 'CW 4.0',  
LABEL = 'Transient Phone Number is a required field.',  
ACTIVE = 0,  
SORT_ORDER = 32,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11141;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11142;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11142,'CW 4.0','Transient Area code is a required field',0,33,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11142,  
NAME = 'CW 4.0',  
LABEL = 'Transient Area code is a required field',  
ACTIVE = 0,  
SORT_ORDER = 33,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11142;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11143;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11143,'CW 4.0','Transient Phone Number must be 7 digits and may include a hyphen after the 3rd digit.',0,34,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11143,  
NAME = 'CW 4.0',  
LABEL = 'Transient Phone Number must be 7 digits and may include a hyphen after the 3rd digit.',  
ACTIVE = 0,  
SORT_ORDER = 34,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11143;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11144;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11144,'CW 4.0','Transient Area Code must be 3 digits.',0,35,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11144,  
NAME = 'CW 4.0',  
LABEL = 'Transient Area Code must be 3 digits.',  
ACTIVE = 0,  
SORT_ORDER = 35,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11144;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11145;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11145,'CW 4.0','Transient Reason is a required field.',1,36,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11145,  
NAME = 'CW 4.0',  
LABEL = 'Transient Reason is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 36,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11145;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11146;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11146,'CW 4.0','A ''''New ESRD Patient'''' Admission may not be Transient.',1,37,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11146,  
NAME = 'CW 4.0',  
LABEL = 'A ''''New ESRD Patient'''' Admission may not be Transient.',  
ACTIVE = 1,  
SORT_ORDER = 37,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11146;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11151;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11151,'CW 4.0','Area code is a required field.',1,38,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11151,  
NAME = 'CW 4.0',  
LABEL = 'Area code is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 38,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11151;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11152;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11152,'CW 4.0','Area code must be 3 digits.',1,39,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11152,  
NAME = 'CW 4.0',  
LABEL = 'Area code must be 3 digits.',  
ACTIVE = 1,  
SORT_ORDER = 39,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11152;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11153;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11153,'CW 4.0','Phone Number is a required field.',1,40,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11153,  
NAME = 'CW 4.0',  
LABEL = 'Phone Number is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 40,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11153;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11154;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11154,'CW 4.0','Phone Number must be 7 digits and may include a hyphen after the 3rd digit.',1,41,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11154,  
NAME = 'CW 4.0',  
LABEL = 'Phone Number must be 7 digits and may include a hyphen after the 3rd digit.',  
ACTIVE = 1,  
SORT_ORDER = 41,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11154;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11161;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11161,'CW 4.0','Effective Date cannot be a future Date.',1,42,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11161,  
NAME = 'CW 4.0',  
LABEL = 'Effective Date cannot be a future Date.',  
ACTIVE = 1,  
SORT_ORDER = 42,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11161;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11162;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11162,'CW 4.0','Effective Date must be after 1/1/1973.',1,43,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11162,  
NAME = 'CW 4.0',  
LABEL = 'Effective Date must be after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 43,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11162;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11163;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11163,'CW 4.0','Effective Date cannot be after the patient''''s Date of Death.',1,44,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11163,  
NAME = 'CW 4.0',  
LABEL = 'Effective Date cannot be after the patient''''s Date of Death.',  
ACTIVE = 1,  
SORT_ORDER = 44,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11163;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11164;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11164,'CW 4.0','Effective Date cannot be prior to the patient''''s Date of Birth.',1,45,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11164,  
NAME = 'CW 4.0',  
LABEL = 'Effective Date cannot be prior to the patient''''s Date of Birth.',  
ACTIVE = 1,  
SORT_ORDER = 45,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11164;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11171;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11171,'CW 4.0','Date of Birth must be after 1/1/1850.',1,46,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11171,  
NAME = 'CW 4.0',  
LABEL = 'Date of Birth must be after 1/1/1850.',  
ACTIVE = 1,  
SORT_ORDER = 46,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11171;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11172;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11172,'CW 4.0','Date of Birth cannot be future Date.',1,47,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11172,  
NAME = 'CW 4.0',  
LABEL = 'Date of Birth cannot be future Date.',  
ACTIVE = 1,  
SORT_ORDER = 47,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11172;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11173;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11173,'CW 4.0','Date of Death cannot be prior to the patient''''s Date of Birth ({0}).',1,48,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11173,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 48,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11173;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11174;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11174,'CW 4.0','Date of Death cannot be a future date.',1,49,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11174,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 49,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11174;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11175;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11175,'CW 4.0','Date of Death must be after 01/01/1850.',1,50,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11175,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 50,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11175;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11176;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11176,'CW 4.0','Date of Death must be greater than or equal to Date Regular Chronic Dialysis Began.',1,51,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11176,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death must be greater than or equal to Date Regular Chronic Dialysis Began.',  
ACTIVE = 1,  
SORT_ORDER = 51,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11176;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11177;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11177,'CW 4.0','Date of Death must be greater than or equal to Last Dialysis Treatment.',1,52,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11177,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death must be greater than or equal to Last Dialysis Treatment.',  
ACTIVE = 1,  
SORT_ORDER = 52,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11177;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11178;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11178,'CW 4.0','Date of Death must be greater than or equal to Date of Most Recent Transplant.',1,53,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11178,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death must be greater than or equal to Date of Most Recent Transplant.',  
ACTIVE = 1,  
SORT_ORDER = 53,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11178;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11179;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11179,'CW 4.0','Date of Death must be greater than or equal to Patient Most Recent Admit Date.',1,54,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11179,  
NAME = 'CW 4.0',  
LABEL = 'Date of Death must be greater than or equal to Patient Most Recent Admit Date.',  
ACTIVE = 1,  
SORT_ORDER = 54,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11179;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11181;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11181,'CW 4.0','Country/area of origin is missing.',1,55,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('06-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11181,  
NAME = 'CW 4.0',  
LABEL = 'Country/area of origin is missing.',  
ACTIVE = 1,  
SORT_ORDER = 55,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('06-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11181;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11182;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11182,'CW 4.0','Name of Enrolled/Principal Tribe is missing.',1,56,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('10-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11182,  
NAME = 'CW 4.0',  
LABEL = 'Name of Enrolled/Principal Tribe is missing.',  
ACTIVE = 1,  
SORT_ORDER = 56,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('10-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11182;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11183;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11183,'CW 4.0','Patient first name is required',1,57,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11183,  
NAME = 'CW 4.0',  
LABEL = 'Patient first name is required',  
ACTIVE = 1,  
SORT_ORDER = 57,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11183;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11184;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11184,'CW 4.0','Patient last name is required',1,58,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11184,  
NAME = 'CW 4.0',  
LABEL = 'Patient last name is required',  
ACTIVE = 1,  
SORT_ORDER = 58,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11184;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11185;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11185,'CW 4.0','Physical Address is required.',1,59,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11185,  
NAME = 'CW 4.0',  
LABEL = 'Physical Address is required.',  
ACTIVE = 1,  
SORT_ORDER = 59,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11185;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11186;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11186,'CW 4.0','Mailing Address is required.',1,60,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11186,  
NAME = 'CW 4.0',  
LABEL = 'Mailing Address is required.',  
ACTIVE = 1,  
SORT_ORDER = 60,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11186;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11191;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11191,'CW 4.0','Medicare Claim Number must be 10 or 11 characters  with first character as A-G; number or/and 2-9 characters as numbers and a valid Beneficiary Identification Code (BIC) at the end',0,61,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11191,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Claim Number must be 10 or 11 characters  with first character as A-G; number or/and 2-9 characters as numbers and a valid Beneficiary Identification Code (BIC) at the end',  
ACTIVE = 0,  
SORT_ORDER = 61,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11191;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11192;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11192,'CW 4.0','Invalid SSN.',1,62,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11192,  
NAME = 'CW 4.0',  
LABEL = 'Invalid SSN.',  
ACTIVE = 1,  
SORT_ORDER = 62,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11192;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11193;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11193,'CW 4.0','Medicare Claim Number has an invalid Beneficiary Identification Code (BIC).',1,63,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11193,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Claim Number has an invalid Beneficiary Identification Code (BIC).',  
ACTIVE = 1,  
SORT_ORDER = 63,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11193;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11201;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11201,'CW 4.0','Discharge Date cannot be a future date.',1,64,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11201,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 64,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11201;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11202;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11202,'CW 4.0','Discharge Date cannot be prior to the patient''''s Date of Birth({0}).',1,65,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11202,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be prior to the patient''''s Date of Birth({0}).',  
ACTIVE = 1,  
SORT_ORDER = 65,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11202;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11203;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11203,'CW 4.0','Discharge Date cannot be after the patient''''s Date of Death({0}).',0,66,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11203,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be after the patient''''s Date of Death({0}).',  
ACTIVE = 0,  
SORT_ORDER = 66,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11203;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11209;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11209,'CW 4.0','The admission facility is not an open facility as of the entered Discharge Date (Facility open date).',1,67,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('16-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11209,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Discharge Date (Facility open date).',  
ACTIVE = 1,  
SORT_ORDER = 67,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('16-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11209;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11205;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11205,'CW 4.0','Discharge Date must be on or after the Admit Date({0}).',1,68,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11205,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date must be on or after the Admit Date({0}).',  
ACTIVE = 1,  
SORT_ORDER = 68,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11205;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11206;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11206,'CW 4.0','Discharge Date cannot be prior to the patients last treatment date({0}).',1,69,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11206,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be prior to the patients last treatment date({0}).',  
ACTIVE = 1,  
SORT_ORDER = 69,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11206;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11207;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11207,'CW 4.0','Discharge Date cannot be after the patients next admission date ({0}).',1,70,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11207,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be after the patients next admission date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 70,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11207;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11208;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11208,'CW 4.0','Discharge Date must be after 1/1/1973',1,71,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11208,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date must be after 1/1/1973',  
ACTIVE = 1,  
SORT_ORDER = 71,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11208;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11211;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11211,'CW 4.0','Admit Date cannot be a future date.',1,73,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11211,  
NAME = 'CW 4.0',  
LABEL = 'Admit Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 73,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11211;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11212;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11212,'CW 4.0','Admit Date cannot be prior to the patient''''s Date of Birth({0}).',1,74,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11212,  
NAME = 'CW 4.0',  
LABEL = 'Admit Date cannot be prior to the patient''''s Date of Birth({0}).',  
ACTIVE = 1,  
SORT_ORDER = 74,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11212;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11213;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11213,'CW 4.0','Invalid Admit Date: An exact match patient was found and the Admit Date is after the patient''''s Date of Death ({0}).',1,75,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11213,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Date: An exact match patient was found and the Admit Date is after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 75,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11213;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11214;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11214,'CW 4.0','The admission facility is not an open facility as of the entered Admit Date.',1,76,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11214,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Admit Date.',  
ACTIVE = 1,  
SORT_ORDER = 76,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11214;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11215;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11215,'CW 4.0','The admission facility is not an open facility as of the entered Admit Date.',0,77,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11215,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Admit Date.',  
ACTIVE = 0,  
SORT_ORDER = 77,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11215;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11216;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11216,'CW 4.0','Invalid Admit Date: An exact match patient was found and the Admit Date is more than 5 days prior to the patient''''s previous admission record''''s Discharge Date with the same Transient Status ({0}).',1,78,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11216,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Date: An exact match patient was found and the Admit Date is more than 5 days prior to the patient''''s previous admission record''''s Discharge Date with the same Transient Status ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 78,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11216;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11217;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11217,'CW 4.0','Admit Date must be on or after 1/1/1973.',1,79,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11217,  
NAME = 'CW 4.0',  
LABEL = 'Admit Date must be on or after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 79,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11217;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11221;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11221,'CW 4.0','Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the next admission record''''s Admit Reason with the same Transient Status ({0}).',1,80,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11221,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the next admission record''''s Admit Reason with the same Transient Status ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 80,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11221;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11222;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11222,'CW 4.0','Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the previous admission record''''s Admit Reason with the same Transient Status ({0}).',1,81,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11222,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the previous admission record''''s Admit Reason with the same Transient Status ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 81,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11222;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11223;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11223,'CW 4.0','Invalid Admit Reason for a dialysis facility admission.',1,82,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11223,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Reason for a dialysis facility admission.',  
ACTIVE = 1,  
SORT_ORDER = 82,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11223;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11224;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11224,'CW 4.0','Invalid Admit Reason for a transplant facility admission.',1,83,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11224,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Reason for a transplant facility admission.',  
ACTIVE = 1,  
SORT_ORDER = 83,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11224;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11225;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11225,'CW 4.0','Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the previous admission record''''s Discharge Reason with the same Transient Status ({0}).',1,84,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11225,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Admit Reason: An exact match patient was found and the Admit Reason selected is invalid based on the previous admission record''''s Discharge Reason with the same Transient Status ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 84,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11225;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11231;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11231,'CW 4.0','Invalid Discharge Reason for a dialysis facility admission.',1,85,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11231,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Discharge Reason for a dialysis facility admission.',  
ACTIVE = 1,  
SORT_ORDER = 85,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11231;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11232;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11232,'CW 4.0','Invalid Discharge Reason for a transplant facility admission.',1,86,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11232,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Discharge Reason for a transplant facility admission.',  
ACTIVE = 1,  
SORT_ORDER = 86,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11232;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11233;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11233,'CW 4.0','Invalid Discharge Reason: The Discharge Reason selected is invalid based on the next admission record''''s Admit Reason with the same Transient Status ({0}).',1,87,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11233,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Discharge Reason: The Discharge Reason selected is invalid based on the next admission record''''s Admit Reason with the same Transient Status ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 87,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11233;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11234;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11234,'CW 4.0','Invalid Discharge Reason: The Discharge Reason selected is invalid based on the admission record''''s Admit Reason ({0}).',1,88,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11234,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Discharge Reason: The Discharge Reason selected is invalid based on the admission record''''s Admit Reason ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 88,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11234;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11241;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11241,'CW 4.0','Attending Practitioner is required.',1,89,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11241,  
NAME = 'CW 4.0',  
LABEL = 'Attending Practitioner is required.',  
ACTIVE = 1,  
SORT_ORDER = 89,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11241;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11242;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11242,'CW 4.0','Primary Type of Treatment is required.',1,90,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11242,  
NAME = 'CW 4.0',  
LABEL = 'Primary Type of Treatment is required.',  
ACTIVE = 1,  
SORT_ORDER = 90,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11242;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11243;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11243,'CW 4.0','Date Patient Admitted for Transplant is populated - Preparation Hospital DBA Name is required.',1,91,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11243,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Admitted for Transplant is populated - Preparation Hospital DBA Name is required.',  
ACTIVE = 1,  
SORT_ORDER = 91,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11243;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11244;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11244,'CW 4.0','Preparation Hospital is populated - Date Patient Admitted for Transplant is required.',1,92,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11244,  
NAME = 'CW 4.0',  
LABEL = 'Preparation Hospital is populated - Date Patient Admitted for Transplant is required.',  
ACTIVE = 1,  
SORT_ORDER = 92,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11244;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11251;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11251,'CW 4.0','Attending Practitioner is required.',1,93,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11251,  
NAME = 'CW 4.0',  
LABEL = 'Attending Practitioner is required.',  
ACTIVE = 1,  
SORT_ORDER = 93,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11251;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11252;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11252,'CW 4.0','Primary Dialysis Setting is required.',1,94,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11252,  
NAME = 'CW 4.0',  
LABEL = 'Primary Dialysis Setting is required.',  
ACTIVE = 1,  
SORT_ORDER = 94,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11252;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11253;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11253,'CW 4.0','Time Per Session is required.',1,95,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11253,  
NAME = 'CW 4.0',  
LABEL = 'Time Per Session is required.',  
ACTIVE = 1,  
SORT_ORDER = 95,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11253;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11254;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11254,'CW 4.0','Valid range for Time Per Session is 60 - 600.',1,96,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11254,  
NAME = 'CW 4.0',  
LABEL = 'Valid range for Time Per Session is 60 - 600.',  
ACTIVE = 1,  
SORT_ORDER = 96,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11254;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11255;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11255,'CW 4.0','Sessions Per Week is required.',1,97,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11255,  
NAME = 'CW 4.0',  
LABEL = 'Sessions Per Week is required.',  
ACTIVE = 1,  
SORT_ORDER = 97,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11255;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11256;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11256,'CW 4.0','Valid range for Sessions Per Week is 1.0 - 7.0.',1,98,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11256,  
NAME = 'CW 4.0',  
LABEL = 'Valid range for Sessions Per Week is 1.0 - 7.0.',  
ACTIVE = 1,  
SORT_ORDER = 98,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11256;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11257;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11257,'CW 4.0','Primary Type of Treatment is required.',0,99,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11257,  
NAME = 'CW 4.0',  
LABEL = 'Primary Type of Treatment is required.',  
ACTIVE = 0,  
SORT_ORDER = 99,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11257;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11258;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11258,'CW 4.0','Physician first name is required.',1,100,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11258,  
NAME = 'CW 4.0',  
LABEL = 'Physician first name is required.',  
ACTIVE = 1,  
SORT_ORDER = 100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11258;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11259;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11259,'CW 4.0','Physician last name is required.',1,101,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11259,  
NAME = 'CW 4.0',  
LABEL = 'Physician last name is required.',  
ACTIVE = 1,  
SORT_ORDER = 101,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11259;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11261;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11261,'CW 4.0','Treatment Start Date must be on or after the Admit Date ({0}).',1,102,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11261,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date must be on or after the Admit Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 102,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11261;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11262;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11262,'CW 4.0','Treatment Start Date cannot be a future date.',1,103,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11262,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 103,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11262;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11263;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11263,'CW 4.0','Treatment Start Date cannot be prior to the patient''''s Date of Birth ({0}).',1,104,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11263,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 104,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11263;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11264;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11264,'CW 4.0','Treatment Start Date cannot be after the patient''''s Date of Death ({0}).',1,105,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11264,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 105,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11264;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11265;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11265,'CW 4.0','The admission facility is not an open facility as of the entered Treatment Start Date.',1,106,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11265,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Treatment Start Date.',  
ACTIVE = 1,  
SORT_ORDER = 106,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11265;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11266;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11266,'CW 4.0','The admission facility is not an open facility as of the entered Treatment Start Date.',1,107,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11266,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Treatment Start Date.',  
ACTIVE = 1,  
SORT_ORDER = 107,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11266;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11267;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11267,'CW 4.0','Treatment Start Date cannot be after the Discharge Date ({0}).',1,108,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11267,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date cannot be after the Discharge Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 108,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11267;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11268;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11268,'CW 4.0','Treatment Start Date must be after 1/1/1973.',1,109,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11268,  
NAME = 'CW 4.0',  
LABEL = 'Treatment Start Date must be after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 109,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11268;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11271;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11271,'CW 4.0','Transplant Date cannot be a future date.',1,110,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11271,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 110,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11271;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11272;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11272,'CW 4.0','Transplant Date cannot be prior to the patient''''s Date of Birth ({0}).',1,111,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11272,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 111,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11272;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11273;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11273,'CW 4.0','Transplant Date cannot be after the patient''''s Date of Death ({0}).',1,112,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11273,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 112,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11273;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11274;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11274,'CW 4.0','The admission facility is not an open facility as of the entered Date Patient Admitted for Transplant.',1,113,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11274,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Date Patient Admitted for Transplant.',  
ACTIVE = 1,  
SORT_ORDER = 113,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11274;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11275;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11275,'CW 4.0','The admission facility is not an open facility as of the entered Date Patient Admitted for Transplant.',1,114,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11275,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Date Patient Admitted for Transplant.',  
ACTIVE = 1,  
SORT_ORDER = 114,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11275;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11276;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11276,'CW 4.0','Transplant Date cannot be after the Discharge Date ({0}).',1,115,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11276,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Date cannot be after the Discharge Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 115,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11276;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11277;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11277,'CW 4.0','Transplant Preparation Date must be on or after 01/01/1973.',1,116,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11277,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Preparation Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 116,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11277;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11281;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11281,'CW 4.0','Admit/discharge required.',1,117,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11281,  
NAME = 'CW 4.0',  
LABEL = 'Admit/discharge required.',  
ACTIVE = 1,  
SORT_ORDER = 117,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11281;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11282;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11282,'CW 4.0','Primary cause of renal failure is required.',1,118,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11282,  
NAME = 'CW 4.0',  
LABEL = 'Primary cause of renal failure is required.',  
ACTIVE = 1,  
SORT_ORDER = 118,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11282;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11283;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11283,'CW 4.0','Transfer Discharge Subcategory is not populated.',1,119,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11283,  
NAME = 'CW 4.0',  
LABEL = 'Transfer Discharge Subcategory is not populated.',  
ACTIVE = 1,  
SORT_ORDER = 119,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11283;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11284;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11284,'CW 4.0','Involuntary Discharge Subcategory is not populated.',1,120,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11284,  
NAME = 'CW 4.0',  
LABEL = 'Involuntary Discharge Subcategory is not populated.',  
ACTIVE = 1,  
SORT_ORDER = 120,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11284;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11285;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11285,'CW 4.0','Treatment required for admit/discharge.',1,121,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11285,  
NAME = 'CW 4.0',  
LABEL = 'Treatment required for admit/discharge.',  
ACTIVE = 1,  
SORT_ORDER = 121,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11285;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11288;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11288,'CW 4.0','Attending Practitioner''''s UPIN or NPI is mandatory',1,122,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11288,  
NAME = 'CW 4.0',  
LABEL = 'Attending Practitioner''''s UPIN or NPI is mandatory',  
ACTIVE = 1,  
SORT_ORDER = 122,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11288;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11289;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11289,'CW 4.0','Invalid Primary Cause of Renal Failure Code.',1,123,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11289,  
NAME = 'CW 4.0',  
LABEL = 'Invalid Primary Cause of Renal Failure Code.',  
ACTIVE = 1,  
SORT_ORDER = 123,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11289;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11290;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11290,'CW 4.0','Transient Status is required.',1,124,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11290,  
NAME = 'CW 4.0',  
LABEL = 'Transient Status is required.',  
ACTIVE = 1,  
SORT_ORDER = 124,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11290;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11291;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11291,'CW 4.0','Medicare Claim Number or Claim Number N/A is required.',1,125,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11291,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Claim Number or Claim Number N/A is required.',  
ACTIVE = 1,  
SORT_ORDER = 125,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11291;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11292;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11292,'CW 4.0','Death is an invalid Discharge Reason.',1,126,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11292,  
NAME = 'CW 4.0',  
LABEL = 'Death is an invalid Discharge Reason.',  
ACTIVE = 1,  
SORT_ORDER = 126,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11292;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11293;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11293,'CW 4.0','Discharge Date is required.',1,127,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11293,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date is required.',  
ACTIVE = 1,  
SORT_ORDER = 127,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11293;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11294;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11294,'CW 4.0','Patient has a Submitted Form 2728. Admit Reason cannot be changed from New ESRD Patient.',1,128,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11294,  
NAME = 'CW 4.0',  
LABEL = 'Patient has a Submitted Form 2728. Admit Reason cannot be changed from New ESRD Patient.',  
ACTIVE = 1,  
SORT_ORDER = 128,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11294;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11295;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11295,'CW 4.0','Race has been entered. Patient''''s Self Reporting of Race and Ethnicity is Required.',1,129,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11295,  
NAME = 'CW 4.0',  
LABEL = 'Race has been entered. Patient''''s Self Reporting of Race and Ethnicity is Required.',  
ACTIVE = 1,  
SORT_ORDER = 129,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11295;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11296;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11296,'CW 4.0','Race has been entered.  Ethnicity is Required.',1,130,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11296,  
NAME = 'CW 4.0',  
LABEL = 'Race has been entered.  Ethnicity is Required.',  
ACTIVE = 1,  
SORT_ORDER = 130,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11296;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11297;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11297,'CW 4.0','Medicare Enrollment Status must be Medicare Coverage when Medicare Claim Number is populated.',1,131,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11297,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Enrollment Status must be Medicare Coverage when Medicare Claim Number is populated.',  
ACTIVE = 1,  
SORT_ORDER = 131,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11297;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11298;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11298,'CW 4.0','Medicare Claim Number is Required if Current Medical Coverage is Medicare.',1,132,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11298,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Claim Number is Required if Current Medical Coverage is Medicare.',  
ACTIVE = 1,  
SORT_ORDER = 132,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11298;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11299;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11299,'CW 4.0','Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare.',1,133,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11299,  
NAME = 'CW 4.0',  
LABEL = 'Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare.',  
ACTIVE = 1,  
SORT_ORDER = 133,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11299;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11300;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11300,'CW 4.0','Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare.',1,134,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11300,  
NAME = 'CW 4.0',  
LABEL = 'Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare.',  
ACTIVE = 1,  
SORT_ORDER = 134,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11300;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11301;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11301,'CW 4.0','Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',1,135,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11301,  
NAME = 'CW 4.0',  
LABEL = 'Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',  
ACTIVE = 1,  
SORT_ORDER = 135,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11301;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11302;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11302,'CW 4.0','Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',1,136,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11302,  
NAME = 'CW 4.0',  
LABEL = 'Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',  
ACTIVE = 1,  
SORT_ORDER = 136,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11302;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11303;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11303,'CW 4.0','Citizenship is required when Primary Type of Treatment is Living Related, Living Unrelated, Deceased or Unknown.',1,137,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11303,  
NAME = 'CW 4.0',  
LABEL = 'Citizenship is required when Primary Type of Treatment is Living Related, Living Unrelated, Deceased or Unknown.',  
ACTIVE = 1,  
SORT_ORDER = 137,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11303;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11304;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11304,'CW 4.0','{0} Phone Number is incomplete - missing {1}.',1,138,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11304,  
NAME = 'CW 4.0',  
LABEL = '{0} Phone Number is incomplete - missing {1}.',  
ACTIVE = 1,  
SORT_ORDER = 138,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11304;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11307;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11307,'CW 4.0','Dialysis Training Begin Date is mandatory when Dialysis Training End Date is populated.',1,140,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11307,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date is mandatory when Dialysis Training End Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 140,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11307;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11308;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11308,'CW 4.0','Dialysis Training Begin Date is mandatory.',1,141,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11308,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 141,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11308;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11309;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11309,'CW 4.0','Dialysis Training Begin Date cannot be a future date.',1,142,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11309,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 142,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11309;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11310;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11310,'CW 4.0','Dialysis Training Begin Date must be on or after 01/01/1973.',1,143,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11310,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 143,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11310;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11311;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11311,'CW 4.0','Dialysis Training Begin Date cannot be prior to the patient''''s Date of Birth ({0}).',1,144,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11311,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 144,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11311;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11312;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11312,'CW 4.0','Dialysis Training Begin Date cannot be after the patient''''s Date of Death ({0}).',1,145,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11312,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training Begin Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 145,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11312;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11313;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11313,'CW 4.0','Dialysis Training End Date must be on or after 01/01/1973.',1,146,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11313,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training End Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 146,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11313;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11314;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11314,'CW 4.0','Dialysis Training End Date  cannot be prior to the patient''''s Date of Birth ({0}).',1,147,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11314,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training End Date  cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 147,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11314;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11315;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11315,'CW 4.0','Dialysis Training End Date  cannot be after the patient''''s Date of Death ({0}).',1,148,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11315,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training End Date  cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 148,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11315;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11316;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11316,'CW 4.0','Dialysis Training End Date cannot be prior to the Dialysis Training Begin Date ({0}).',1,149,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11316,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Training End Date cannot be prior to the Dialysis Training Begin Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 149,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11316;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11317;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11317,'CW 4.0','Transplant Date must be on or after the Admit Date ({0}).',1,150,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11317,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Date must be on or after the Admit Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 150,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11317;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11318;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11318,'CW 4.0','Transplant Preparation Date cannot be prior to the patient''''s Date of Birth ({0}).',1,151,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11318,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Preparation Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 151,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11318;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11319;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11319,'CW 4.0','Transplant Preparation Date cannot be after the patient''''s Date of Death ({0}).',1,152,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11319,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Preparation Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 152,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11319;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11320;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11320,'CW 4.0','Transplant Preparation Date must be on or prior to the Transplant Date.',1,153,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11320,  
NAME = 'CW 4.0',  
LABEL = 'Transplant Preparation Date must be on or prior to the Transplant Date.',  
ACTIVE = 1,  
SORT_ORDER = 153,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11320;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11321;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11321,'CW 4.0','The Preparation Hospital is not an open facility as of the entered Date Patient Admitted for Transplant.',1,154,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11321,  
NAME = 'CW 4.0',  
LABEL = 'The Preparation Hospital is not an open facility as of the entered Date Patient Admitted for Transplant.',  
ACTIVE = 1,  
SORT_ORDER = 154,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11321;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11322;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11322,'CW 4.0','Transient status required for admit',1,155,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11322,  
NAME = 'CW 4.0',  
LABEL = 'Transient status required for admit',  
ACTIVE = 1,  
SORT_ORDER = 155,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11322;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11324;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11324,'CW 4.0','Submitter is not mapped to Facility: {0}',1,156,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11324,  
NAME = 'CW 4.0',  
LABEL = 'Submitter is not mapped to Facility: {0}',  
ACTIVE = 1,  
SORT_ORDER = 156,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11324;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20002;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20002,'CW 4.0','Exact Match Error Merged Patient',1,157,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20002,  
NAME = 'CW 4.0',  
LABEL = 'Exact Match Error Merged Patient',  
ACTIVE = 1,  
SORT_ORDER = 157,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20002;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20003;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20003,'CW 4.0','Near Match Error Merged Patient',1,158,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20003,  
NAME = 'CW 4.0',  
LABEL = 'Near Match Error Merged Patient',  
ACTIVE = 1,  
SORT_ORDER = 158,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20003;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20004;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20004,'CW 4.0','Submitted {0} was found to match an existing patient',1,159,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20004,  
NAME = 'CW 4.0',  
LABEL = 'Submitted {0} was found to match an existing patient',  
ACTIVE = 1,  
SORT_ORDER = 159,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20004;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20005;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20005,'CW 4.0','Submitted {0} does not exist within the CROWNWeb system',1,160,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20005,  
NAME = 'CW 4.0',  
LABEL = 'Submitted {0} does not exist within the CROWNWeb system',  
ACTIVE = 1,  
SORT_ORDER = 160,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20005;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20006;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20006,'CW 4.0','An add was requested, but an existing record was found and updated:  {0}',1,161,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20006,  
NAME = 'CW 4.0',  
LABEL = 'An add was requested, but an existing record was found and updated:  {0}',  
ACTIVE = 1,  
SORT_ORDER = 161,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20006;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20008;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20008,'CW 4.0','Patient''''s Self Reporting of Race and Ethnicity has been entered. Race is Required.',1,162,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20008,  
NAME = 'CW 4.0',  
LABEL = 'Patient''''s Self Reporting of Race and Ethnicity has been entered. Race is Required.',  
ACTIVE = 1,  
SORT_ORDER = 162,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20008;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20009;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20009,'CW 4.0','Patient''''s Self Reporting of Race and Ethnicity has been entered. Ethnicity is Required.',1,163,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20009,  
NAME = 'CW 4.0',  
LABEL = 'Patient''''s Self Reporting of Race and Ethnicity has been entered. Ethnicity is Required.',  
ACTIVE = 1,  
SORT_ORDER = 163,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20009;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20010;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20010,'CW 4.0','Ethnicity has been entered. Patient''''s Self Reporting of Race and Ethnicity is Required.',1,164,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20010,  
NAME = 'CW 4.0',  
LABEL = 'Ethnicity has been entered. Patient''''s Self Reporting of Race and Ethnicity is Required.',  
ACTIVE = 1,  
SORT_ORDER = 164,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20010;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20011;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20011,'CW 4.0','Patient''''s Self Reporting of Race and Ethnicity has been entered. Race is Required.',1,165,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20011,  
NAME = 'CW 4.0',  
LABEL = 'Patient''''s Self Reporting of Race and Ethnicity has been entered. Race is Required.',  
ACTIVE = 1,  
SORT_ORDER = 165,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20011;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20012;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20012,'CW 4.0','Patient''''s Self Reporting of Race and Ethnicity has been entered. Ethnicity is Required.',1,166,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20012,  
NAME = 'CW 4.0',  
LABEL = 'Patient''''s Self Reporting of Race and Ethnicity has been entered. Ethnicity is Required.',  
ACTIVE = 1,  
SORT_ORDER = 166,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20012;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20013;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20013,'CW 4.0','Multiple physicians returned for criteria {0}, {1} and org unique id: {2}',1,167,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20013,  
NAME = 'CW 4.0',  
LABEL = 'Multiple physicians returned for criteria {0}, {1} and org unique id: {2}',  
ACTIVE = 1,  
SORT_ORDER = 167,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20013;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20014;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20014,'CW 4.0','Multiple physicians returned for criteria {0}, {1} and {2}',1,168,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20014,  
NAME = 'CW 4.0',  
LABEL = 'Multiple physicians returned for criteria {0}, {1} and {2}',  
ACTIVE = 1,  
SORT_ORDER = 168,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20014;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20015;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20015,'CW 4.0','Multiple facilities associated with id: {0} and {1}',1,169,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20015,  
NAME = 'CW 4.0',  
LABEL = 'Multiple facilities associated with id: {0} and {1}',  
ACTIVE = 1,  
SORT_ORDER = 169,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20015;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20016;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20016,'CW 4.0','Multiple patients mapped to the same external id: {0}',1,170,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20016,  
NAME = 'CW 4.0',  
LABEL = 'Multiple patients mapped to the same external id: {0}',  
ACTIVE = 1,  
SORT_ORDER = 170,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20016;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13456;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13456,'CW 4.0','Org Facility Code exceeds allowed length of 30',1,171,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13456,  
NAME = 'CW 4.0',  
LABEL = 'Org Facility Code exceeds allowed length of 30',  
ACTIVE = 1,  
SORT_ORDER = 171,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13456;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13457;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13457,'CW 4.0','Org Patient Id exceeds allowed length of 30',1,172,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13457,  
NAME = 'CW 4.0',  
LABEL = 'Org Patient Id exceeds allowed length of 30',  
ACTIVE = 1,  
SORT_ORDER = 172,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13457;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 99999;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (99999,'CW 4.0','An unexpected error happened while processing the file. Error details are: {0}',1,173,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 99999,  
NAME = 'CW 4.0',  
LABEL = 'An unexpected error happened while processing the file. Error details are: {0}',  
ACTIVE = 1,  
SORT_ORDER = 173,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 99999;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 600;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (600,'CW 4.0','Clinical date is required.',1,600,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 600,  
NAME = 'CW 4.0',  
LABEL = 'Clinical date is required.',  
ACTIVE = 1,  
SORT_ORDER = 600,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 600;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 601;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (601,'CW 4.0','Clinical month is frozen.',1,601,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 601,  
NAME = 'CW 4.0',  
LABEL = 'Clinical month is frozen.',  
ACTIVE = 1,  
SORT_ORDER = 601,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 601;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 602;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (602,'CW 4.0','Selected clinical month is not available in CROWN.',1,602,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 602,  
NAME = 'CW 4.0',  
LABEL = 'Selected clinical month is not available in CROWN.',  
ACTIVE = 1,  
SORT_ORDER = 602,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 602;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 603;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (603,'CW 4.0','Clinical collection type is not Hemodialysis, Peritoneal, or Vascular Access.',1,603,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 603,  
NAME = 'CW 4.0',  
LABEL = 'Clinical collection type is not Hemodialysis, Peritoneal, or Vascular Access.',  
ACTIVE = 1,  
SORT_ORDER = 603,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 603;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 604;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (604,'CW 4.0','Cannot process {0} because patient is not receiving HD or PD treatment as of {1}.',1,604,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 604,  
NAME = 'CW 4.0',  
LABEL = 'Cannot process {0} because patient is not receiving HD or PD treatment as of {1}.',  
ACTIVE = 1,  
SORT_ORDER = 604,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 604;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 605;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (605,'CW 4.0','Clinical value has no date assigned.',1,605,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 605,  
NAME = 'CW 4.0',  
LABEL = 'Clinical value has no date assigned.',  
ACTIVE = 1,  
SORT_ORDER = 605,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 605;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 606;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (606,'CW 4.0','The patient is not receiving a treatment of {0} during the clinical period provided.',1,606,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 606,  
NAME = 'CW 4.0',  
LABEL = 'The patient is not receiving a treatment of {0} during the clinical period provided.',  
ACTIVE = 1,  
SORT_ORDER = 606,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 606;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12101;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12101,'CW 4.0','Hemoglobin is mandatory. Select N/A if Hemoglobin was not recorded for the patient for the clinical month.',1,607,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12101,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin is mandatory. Select N/A if Hemoglobin was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 607,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12101;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12102;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12102,'CW 4.0','Hemoglobin is not in the valid range (5.0 - 20.0).',1,608,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12102,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin is not in the valid range (5.0 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 608,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12102;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12103;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12103,'CW 4.0','Hemoglobin Date is mandatory when Hemoglobin is populated.',1,609,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12103,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date is mandatory when Hemoglobin is populated.',  
ACTIVE = 1,  
SORT_ORDER = 609,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12103;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12104;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12104,'CW 4.0','Hemoglobin Date must be in the Clinical Month and Year.',1,610,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12104,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 610,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12104;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12105;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12105,'CW 4.0','Hemoglobin Date must be on or after 01/01/1973.',1,611,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12105,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 611,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12105;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12106;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12106,'CW 4.0','Hemoglobin Date cannot be a future date.',1,612,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12106,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 612,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12106;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12107;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12107,'CW 4.0','Hemoglobin Date cannot be prior to the patient''''s Date of Birth ({0}).',1,613,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12107,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 613,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12107;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12108;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12108,'CW 4.0','Hemoglobin Date cannot be after the patient''''s Date of Death ({0}).',1,614,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12108,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 614,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12108;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12109;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12109,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Hemoglobin Date entered.',1,615,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12109,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Hemoglobin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 615,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12109;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12209;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12209,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Hemoglobin Date entered.',1,616,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12209,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Hemoglobin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 616,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12209;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12110;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12110,'CW 4.0','Ferritin is mandatory. Select N/A if Ferritin was not recorded for the patient for the clinical month.',1,617,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12110,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin is mandatory. Select N/A if Ferritin was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 617,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12110;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12111;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12111,'CW 4.0','Ferritin is not in the valid range (10 - 4000).',1,618,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12111,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin is not in the valid range (10 - 4000).',  
ACTIVE = 1,  
SORT_ORDER = 618,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12111;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12112;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12112,'CW 4.0','Ferritin Date is mandatory when Ferritin is populated.',1,619,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12112,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date is mandatory when Ferritin is populated.',  
ACTIVE = 1,  
SORT_ORDER = 619,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12112;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12113;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12113,'CW 4.0','Ferritin Date must be in the Clinical Month and Year.',1,620,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12113,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 620,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12113;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12114;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12114,'CW 4.0','Ferritin Date must be on or after 01/01/1973.',1,621,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12114,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 621,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12114;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12115;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12115,'CW 4.0','Ferritin Date cannot be a future date.',1,622,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12115,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 622,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12115;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12116;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12116,'CW 4.0','Ferritin Date cannot be prior to the patient''''s Date of Birth ({0}).',1,623,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12116,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 623,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12116;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12117;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12117,'CW 4.0','Ferritin Date cannot be after the patient''''s Date of Death ({0}).',1,624,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12117,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 624,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12117;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12118;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12118,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Ferritin Date entered.',1,625,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12118,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Ferritin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 625,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12118;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12218;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12218,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Ferritin Date entered.',1,626,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12218,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Ferritin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 626,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12218;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12120;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12120,'CW 4.0','Iron Saturation (TSAT) is not in the valid range (3 - 120).',1,628,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12120,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) is not in the valid range (3 - 120).',  
ACTIVE = 1,  
SORT_ORDER = 628,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12120;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12121;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12121,'CW 4.0','Iron Saturation (TSAT) Date is mandatory when Iron Saturation (TSAT) is populated.',1,629,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12121,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date is mandatory when Iron Saturation (TSAT) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 629,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12121;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12122;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12122,'CW 4.0','Iron Saturation (TSAT) Date must be in the Clinical Month and Year.',1,630,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12122,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 630,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12122;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12124;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12124,'CW 4.0','Iron Saturation (TSAT) Date cannot be a future date.',1,632,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12124,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 632,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12124;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12125;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12125,'CW 4.0','Iron Saturation (TSAT) Date cannot be prior to the patient''''s Date of Birth ({0}).',1,633,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12125,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 633,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12125;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12127;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12127,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Iron Saturation (TSAT) Date entered.',1,635,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12127,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Iron Saturation (TSAT) Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 635,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12127;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12227;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12227,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Iron Saturation (TSAT) Date entered.',1,636,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12227,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Iron Saturation (TSAT) Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 636,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12227;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12128;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12128,'CW 4.0','Reticulocyte Hemoglobin (CHr) is mandatory. Select N/A if Reticulocyte Hemoglobin (CHr) was not recorded for the patient for the clinical month.',1,637,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12128,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) is mandatory. Select N/A if Reticulocyte Hemoglobin (CHr) was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 637,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12128;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12129;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12129,'CW 4.0','Reticulocyte Hemoglobin (CHr) is not in the valid range (20 - 40).',1,638,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12129,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) is not in the valid range (20 - 40).',  
ACTIVE = 1,  
SORT_ORDER = 638,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12129;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12130;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12130,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date is mandatory when Reticulocyte Hemoglobin (CHr) is populated.',1,639,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12130,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date is mandatory when Reticulocyte Hemoglobin (CHr) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 639,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12130;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12131;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12131,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date must be in the Clinical Month and Year.',1,640,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12131,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 640,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12131;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12132;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12132,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date must be on or after 01/01/1973.',1,641,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12132,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 641,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12132;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12133;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12133,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date cannot be a future date.',1,642,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12133,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 642,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12133;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12134;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12134,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date cannot be prior to the patient''''s Date of Birth ({0}).',1,643,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12134,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 643,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12134;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12135;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12135,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date cannot be after the patient''''s Date of Death ({0}).',1,644,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12135,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 644,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12135;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12136;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12136,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Reticulocyte Hemoglobin (CHr) Date entered.',1,645,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12136,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Reticulocyte Hemoglobin (CHr) Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 645,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12136;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12236;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12236,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Reticulocyte Hemoglobin (CHr) Date entered.',1,646,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12236,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Reticulocyte Hemoglobin (CHr) Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 646,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12236;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12301;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12301,'CW 4.0','Phosphorus is mandatory. Select N/A if Phosphorus was not recorded for the patient for the clinical month.',1,647,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12301,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus is mandatory. Select N/A if Phosphorus was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 647,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12301;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12302;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12302,'CW 4.0','Phosphorus is not in the valid range (0.1 - 20.0).',1,648,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12302,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus is not in the valid range (0.1 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 648,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12302;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12303;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12303,'CW 4.0','Phosphorus Date is mandatory when Phosphorus is populated.',1,649,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12303,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date is mandatory when Phosphorus is populated.',  
ACTIVE = 1,  
SORT_ORDER = 649,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12303;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12304;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12304,'CW 4.0','Phosphorus Date must be in the Clinical Month and Year.',1,650,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12304,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 650,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12304;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12305;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12305,'CW 4.0','Phosphorus Date must be on or after 01/01/1973.',1,651,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12305,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 651,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12305;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12306;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12306,'CW 4.0','Phosphorus Date cannot be a future date.',1,652,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12306,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 652,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12306;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12307;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12307,'CW 4.0','Phosphorus Date cannot be prior to the patient''''s Date of Birth ({0}).',1,653,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12307,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 653,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12307;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12308;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12308,'CW 4.0','Phosphorus Date cannot be after the patient''''s Date of Death ({0}).',1,654,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12308,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 654,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12308;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12309;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12309,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Phosphorus Date entered.',1,655,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12309,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Phosphorus Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 655,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12309;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12409;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12409,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Phosphorus Date entered.',1,656,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12409,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Phosphorus Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 656,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12409;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12310;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12310,'CW 4.0','Corrected Calcium is mandatory. Select N/A if Corrected Calcium was not recorded for the patient for the clinical month.',1,657,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12310,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium is mandatory. Select N/A if Corrected Calcium was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 657,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12310;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12311;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12311,'CW 4.0','Corrected Calcium is not in the valid range (0.1 - 20.0).',1,658,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12311,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium is not in the valid range (0.1 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 658,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12311;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12312;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12312,'CW 4.0','Corrected Calcium Date is mandatory when Corrected Calcium is populated.',1,659,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12312,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date is mandatory when Corrected Calcium is populated.',  
ACTIVE = 1,  
SORT_ORDER = 659,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12312;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12313;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12313,'CW 4.0','Corrected Calcium Date must be in the Clinical Month and Year.',1,660,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12313,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 660,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12313;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12314;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12314,'CW 4.0','Corrected Calcium Date must be on or after 01/01/1973.',1,661,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12314,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 661,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12314;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12315;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12315,'CW 4.0','Corrected Calcium Date cannot be a future date.',1,662,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12315,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 662,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12315;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12316;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12316,'CW 4.0','Corrected Calcium Date cannot be prior to the patient''''s Date of Birth ({0}).',1,663,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12316,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 663,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12316;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12317;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12317,'CW 4.0','Corrected Calcium Date cannot be after the patient''''s Date of Death ({0}).',1,664,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12317,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 664,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12317;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12318;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12318,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Corrected Calcium Date entered.',1,665,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12318,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Corrected Calcium Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 665,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12318;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12418;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12418,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Corrected Calcium Date entered.',1,666,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12418,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Corrected Calcium Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 666,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12418;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12319;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12319,'CW 4.0','Uncorrected Calcium is mandatory. Select N/A if Uncorrected Calcium was not recorded for the patient for the clinical month.',1,667,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12319,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium is mandatory. Select N/A if Uncorrected Calcium was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 667,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12319;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12320;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12320,'CW 4.0','Uncorrected Calcium is not in the valid range (0.1 - 20.0).',1,668,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12320,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium is not in the valid range (0.1 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 668,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12320;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12323;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12323,'CW 4.0','Uncorrected Calcium Date must be in the Clinical Month and Year.',1,669,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12323,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 669,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12323;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12324;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12324,'CW 4.0','Uncorrected Calcium Date must be on or after 01/01/1973.',1,670,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12324,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 670,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12324;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12325;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12325,'CW 4.0','Uncorrected Calcium Date cannot be a future date.',1,671,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12325,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 671,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12325;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12326;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12326,'CW 4.0','Uncorrected Calcium Date cannot be prior to the patient''''s Date of Birth ({0}).',1,672,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12326,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 672,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12326;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12327;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12327,'CW 4.0','Uncorrected Calcium Date cannot be after the patient''''s Date of Death ({0}).',1,673,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12327,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 673,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12327;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12328;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12328,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Uncorrected Calcium Date entered.',1,674,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12328,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Uncorrected Calcium Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 674,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12328;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12428;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12428,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Uncorrected Calcium Date entered.',1,675,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12428,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Uncorrected Calcium Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 675,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12428;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12329;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12329,'CW 4.0','Serum Albumin is mandatory. Select N/A if Serum Albumin was not recorded for the patient for the clinical month.',1,676,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12329,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin is mandatory. Select N/A if Serum Albumin was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 676,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12329;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12330;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12330,'CW 4.0','Serum Albumin is not in the valid range (1.00 - 5.50).',1,677,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12330,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin is not in the valid range (1.00 - 5.50).',  
ACTIVE = 1,  
SORT_ORDER = 677,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12330;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12331;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12331,'CW 4.0','Serum Albumin Date must equal the Uncorrected Calcium Date.',0,678,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12331,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date must equal the Uncorrected Calcium Date.',  
ACTIVE = 0,  
SORT_ORDER = 678,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12331;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12332;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12332,'CW 4.0','Serum Albumin Date is mandatory when Serum Albumin is populated.',1,679,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12332,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date is mandatory when Serum Albumin is populated.',  
ACTIVE = 1,  
SORT_ORDER = 679,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12332;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12333;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12333,'CW 4.0','Serum Albumin Date must be in the Clinical Month and Year.',1,680,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12333,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 680,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12333;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12334;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12334,'CW 4.0','Serum Albumin Date must be on or after 01/01/1973.',1,681,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12334,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 681,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12334;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12335;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12335,'CW 4.0','Serum Albumin Date cannot be a future date.',1,682,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12335,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 682,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12335;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12336;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12336,'CW 4.0','Serum Albumin Date cannot be prior to the patient''''s Date of Birth ({0}).',1,683,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12336,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 683,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12336;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12337;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12337,'CW 4.0','Serum Albumin Date cannot be after the patient''''s Date of Death ({0}).',1,684,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12337,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 684,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12337;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12338;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12338,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Serum Albumin Date entered.',1,685,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12338,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Serum Albumin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 685,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12338;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12438;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12438,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Serum Albumin Date entered.',1,686,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12438,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Serum Albumin Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 686,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12438;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12340;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12340,'CW 4.0','Serum Albumin Lower Limit is mandatory when Serum Albumin is populated.',0,687,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12340,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Lower Limit is mandatory when Serum Albumin is populated.',  
ACTIVE = 0,  
SORT_ORDER = 687,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12340;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12341;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12341,'CW 4.0','Serum Albumin Lower Limit is not in the valid range (0.50 - 5.50).',1,688,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12341,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Lower Limit is not in the valid range (0.50 - 5.50).',  
ACTIVE = 1,  
SORT_ORDER = 688,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12341;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12501;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12501,'CW 4.0','Kt/V is mandatory. Select N/A if Kt/V was not recorded for the patient in the clinical month.',1,689,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12501,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V is mandatory. Select N/A if Kt/V was not recorded for the patient in the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 689,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12501;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12502;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12502,'CW 4.0','Kt/V is not in the valid range (0.50 - 2.50).',1,690,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12502,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V is not in the valid range (0.50 - 2.50).',  
ACTIVE = 1,  
SORT_ORDER = 690,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12502;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12503;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12503,'CW 4.0','Kt/V Date is mandatory when Patient Height is populated.',1,691,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12503,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Patient Height is populated.',  
ACTIVE = 1,  
SORT_ORDER = 691,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12503;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12504;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12504,'CW 4.0','Kt/V Date is mandatory when Kt/V is populated.',1,692,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12504,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Kt/V is populated.',  
ACTIVE = 1,  
SORT_ORDER = 692,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12504;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12505;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12505,'CW 4.0','Kt/V Date must be in the Clinical Month and Year.',1,693,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12505,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 693,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12505;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12506;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12506,'CW 4.0','Kt/V Date must be on or after 01/01/1973.',1,694,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12506,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 694,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12506;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12507;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12507,'CW 4.0','Kt/V Date cannot be a future date.',1,695,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12507,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 695,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12507;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12508;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12508,'CW 4.0','Kt/V Date cannot be prior to the patient''''s Date of Birth ({0}).',1,696,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12508,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 696,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12508;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12509;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12509,'CW 4.0','Kt/V Date cannot be after the patient''''s Date of Death ({0}).',1,697,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12509,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 697,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12509;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12510;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12510,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Kt/V Date entered.',1,698,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12510,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Kt/V Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 698,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12510;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12511;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12511,'CW 4.0','Kt/V Method is mandatory when Kt/V is populated.',1,699,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12511,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Method is mandatory when Kt/V is populated.',  
ACTIVE = 1,  
SORT_ORDER = 699,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12511;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12512;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12512,'CW 4.0','Height is mandatory when Kt/V is populated.',0,700,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12512,  
NAME = 'CW 4.0',  
LABEL = 'Height is mandatory when Kt/V is populated.',  
ACTIVE = 0,  
SORT_ORDER = 700,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12512;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12513;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12513,'CW 4.0','BUN Pre-Dialysis is mandatory. Select N/A if BUN Pre-Dialysis was not recorded for the patient for the clinical month.',1,701,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12513,  
NAME = 'CW 4.0',  
LABEL = 'BUN Pre-Dialysis is mandatory. Select N/A if BUN Pre-Dialysis was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 701,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12513;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12514;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12514,'CW 4.0','BUN Pre-Dialysis is not in the valid range (3 - 200).',1,702,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12514,  
NAME = 'CW 4.0',  
LABEL = 'BUN Pre-Dialysis is not in the valid range (3 - 200).',  
ACTIVE = 1,  
SORT_ORDER = 702,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12514;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12515;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12515,'CW 4.0','BUN Post-Dialysis is mandatory. Select N/A if BUN Post-Dialysis was not recorded for the patient for the clinical month.',1,703,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12515,  
NAME = 'CW 4.0',  
LABEL = 'BUN Post-Dialysis is mandatory. Select N/A if BUN Post-Dialysis was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 703,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12515;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12516;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12516,'CW 4.0','BUN Post-Dialysis is not in the valid range (3 - 200).',1,704,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12516,  
NAME = 'CW 4.0',  
LABEL = 'BUN Post-Dialysis is not in the valid range (3 - 200).',  
ACTIVE = 1,  
SORT_ORDER = 704,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12516;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12517;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12517,'CW 4.0','BUN Post-Dialysis cannot be more than the BUN Pre-Dialysis value.',1,705,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12517,  
NAME = 'CW 4.0',  
LABEL = 'BUN Post-Dialysis cannot be more than the BUN Pre-Dialysis value.',  
ACTIVE = 1,  
SORT_ORDER = 705,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12517;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12518;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12518,'CW 4.0','Pre-Dialysis Weight is mandatory. Select N/A if Pre-Dialysis Weight was not recorded for the patient for the clinical month.',1,706,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12518,  
NAME = 'CW 4.0',  
LABEL = 'Pre-Dialysis Weight is mandatory. Select N/A if Pre-Dialysis Weight was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 706,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12518;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13037;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13037,'CW 4.0','Hepatitis B Booster Date 1 must be a valid date.',1,1027,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13037,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 1 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1027,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13037;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13038;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13038,'CW 4.0','Hepatitis B Booster Date 1 cannot be a future date.',1,1028,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13038,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 1 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1028,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13038;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13039;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13039,'CW 4.0','Hepatitis B Booster Date 1 must be on or after 01/01/1973.',1,1029,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13039,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 1 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1029,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13039;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13040;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13040,'CW 4.0','Hepatitis B Booster Date 1 cannot be prior to the patient''''s Date of Birth ({0}).',1,1030,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13040,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 1 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1030,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13040;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13041;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13041,'CW 4.0','Hepatitis B Booster Date 1 cannot be after the patient''''s Date of Death ({0}).',1,1031,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13041,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 1 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1031,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13041;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13042;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13042,'CW 4.0','Hepatitis B Booster Date 2 must be a valid date.',1,1032,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13042,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 2 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1032,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13042;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13043;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13043,'CW 4.0','Hepatitis B Booster Date 2 cannot be a future date.',1,1033,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13043,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 2 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1033,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13043;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13044;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13044,'CW 4.0','Hepatitis B Booster Date 2 must be on or after 01/01/1973.',1,1034,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13044,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 2 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1034,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13044;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13045;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13045,'CW 4.0','Hepatitis B Booster Date 2 cannot be prior to the patient''''s Date of Birth ({0}).',1,1035,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13045,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 2 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1035,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13045;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13046;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13046,'CW 4.0','Hepatitis B Booster Date 2 cannot be after the patient''''s Date of Death ({0}).',1,1036,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13046,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 2 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1036,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13046;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13047;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13047,'CW 4.0','Hepatitis B Booster Date 3 must be a valid date.',1,1037,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13047,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 3 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1037,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13047;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13048;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13048,'CW 4.0','Hepatitis B Booster Date 3 cannot be a future date.',1,1038,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13048,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 3 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1038,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13048;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13049;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13049,'CW 4.0','Hepatitis B Booster Date 3 must be on or after 01/01/1973.',1,1039,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13049,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 3 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1039,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13049;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13050;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13050,'CW 4.0','Hepatitis B Booster Date 3 cannot be prior to the patient''''s Date of Birth ({0}).',1,1040,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13050,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 3 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1040,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13050;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13051;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13051,'CW 4.0','Hepatitis B Booster Date 3 cannot be after the patient''''s Date of Death ({0}).',1,1041,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13051,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 3 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1041,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13051;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13052;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13052,'CW 4.0','Hepatitis B Booster Date 4 must be a valid date.',1,1042,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13052,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 4 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1042,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13052;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13053;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13053,'CW 4.0','Hepatitis B Booster Date 4 cannot be a future date.',1,1043,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13053,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 4 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1043,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13053;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13054;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13054,'CW 4.0','Hepatitis B Booster Date 4 must be on or after 01/01/1973.',1,1044,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13054,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 4 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1044,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13054;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13055;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13055,'CW 4.0','Hepatitis B Booster Date 4 cannot be prior to the patient''''s Date of Birth ({0}).',1,1045,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13055,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 4 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1045,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13055;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13056;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13056,'CW 4.0','Hepatitis B Booster Date 4 cannot be after the patient''''s Date of Death ({0}).',1,1046,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13056,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Booster Date 4 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1046,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13056;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13058;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13058,'CW 4.0','Hepatitis B Vaccination Initial 1 must be a valid date.',1,1048,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13058,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1048,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13058;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13059;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13059,'CW 4.0','Hepatitis B Vaccination Initial 1 cannot be a future date.',1,1049,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13059,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1049,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13059;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13060;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13060,'CW 4.0','Hepatitis B Vaccination Initial 1 must be on or after 01/01/1973.',1,1050,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13060,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1050,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13060;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13061;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13061,'CW 4.0','Hepatitis B Vaccination Initial 1 cannot be prior to the patient''''s Date of Birth ({0}).',1,1051,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13061,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1051,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13061;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13062;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13062,'CW 4.0','Hepatitis B Vaccination Initial 1 cannot be after the patient''''s Date of Death ({0}).',1,1052,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13062,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1052,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13062;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13063;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13063,'CW 4.0','Hepatitis B Vaccination Initial 2 must be a valid date.',1,1053,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13063,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 2 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1053,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13063;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13064;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13064,'CW 4.0','Hepatitis B Vaccination Initial 2 cannot be a future date.',1,1054,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13064,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 2 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1054,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13064;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13065;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13065,'CW 4.0','Hepatitis B Vaccination Initial 2 must be on or after 01/01/1973.',1,1055,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13065,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 2 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1055,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13065;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13066;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13066,'CW 4.0','Hepatitis B Vaccination Initial 2 cannot be prior to the patient''''s Date of Birth ({0}).',1,1056,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13066,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 2 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1056,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13066;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13067;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13067,'CW 4.0','Hepatitis B Vaccination Initial 2 cannot be after the patient''''s Date of Death ({0}).',1,1057,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13067,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 2 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1057,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13067;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13068;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13068,'CW 4.0','Hepatitis B Vaccination Initial 3 must be a valid date.',1,1058,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13068,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 3 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1058,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13068;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13069;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13069,'CW 4.0','Hepatitis B Vaccination Initial 3 cannot be a future date.',1,1059,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13069,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 3 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1059,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13069;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13070;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13070,'CW 4.0','Hepatitis B Vaccination Initial 3 must be on or after 01/01/1973.',1,1060,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13070,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 3 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1060,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13070;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13071;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13071,'CW 4.0','Hepatitis B Vaccination Initial 3 cannot be prior to the patient''''s Date of Birth ({0}).',1,1061,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13071,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 3 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1061,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13071;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13072;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13072,'CW 4.0','Hepatitis B Vaccination Initial 3 cannot be after the patient''''s Date of Death ({0}).',1,1062,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13072,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 3 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1062,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13072;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13073;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13073,'CW 4.0','Hepatitis B Vaccination Initial 4 must be a valid date.',1,1063,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13073,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 4 must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1063,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13073;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13074;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13074,'CW 4.0','Hepatitis B Vaccination Initial 4 cannot be a future date.',1,1064,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13074,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 4 cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1064,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13074;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13075;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13075,'CW 4.0','Hepatitis B Vaccination Initial 4 must be on or after 01/01/1973.',1,1065,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13075,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 4 must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1065,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13075;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13076;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13076,'CW 4.0','Hepatitis B Vaccination Initial 4 cannot be prior to the patient''''s Date of Birth ({0}).',1,1066,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13076,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 4 cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1066,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13076;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13077;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13077,'CW 4.0','Hepatitis B Vaccination Initial 4 cannot be after the patient''''s Date of Death ({0}).',1,1067,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13077,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 4 cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1067,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13077;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13078;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13078,'CW 4.0','Other Hepatitis C Screen Test exceeds allowed length of {0}.',1,1068,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13078,  
NAME = 'CW 4.0',  
LABEL = 'Other Hepatitis C Screen Test exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1068,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13078;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13079;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13079,'CW 4.0','When Hepatitis C Screen Test field is ''''Other'''', then Other Hepatitis C Screen Test field must have a value.',1,1069,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13079,  
NAME = 'CW 4.0',  
LABEL = 'When Hepatitis C Screen Test field is ''''Other'''', then Other Hepatitis C Screen Test field must have a value.',  
ACTIVE = 1,  
SORT_ORDER = 1069,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13079;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13080;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13080,'CW 4.0','Hepatitis C Screening Test Date must be a valid date.',1,1070,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13080,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis C Screening Test Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1070,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13080;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13081;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13081,'CW 4.0','Hepatitis C Screening Test Date cannot be a future date.',1,1071,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13081,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis C Screening Test Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1071,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13081;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13082;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13082,'CW 4.0','Hepatitis C Screening Test Date must be on or after 01/01/1973.',1,1072,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13082,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis C Screening Test Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1072,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13082;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13083;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13083,'CW 4.0','Hepatitis C Screening Test Date cannot be prior to the patient''''s Date of Birth ({0}).',1,1073,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13083,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis C Screening Test Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1073,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13083;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13084;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13084,'CW 4.0','Hepatitis C Screening Test Date cannot be after the patient''''s Date of Death ({0}).',1,1074,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13084,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis C Screening Test Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1074,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13084;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13085;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13085,'CW 4.0','Hepatitis B surface antibody (anti-HBs) is mandatory when Hepatitis B surface antibody (anti-HBs) Performed is populated.',1,1075,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('30-JAN-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13085,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) is mandatory when Hepatitis B surface antibody (anti-HBs) Performed is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1075,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('30-JAN-14','DD-MON-RR') 
	WHERE ERROR_CODE = 13085;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13086;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13086,'CW 4.0','Hepatitis B surface antibody (anti-HBs) exceeds allowed length of {0}.',1,1076,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('30-JAN-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13086,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1076,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('30-JAN-14','DD-MON-RR') 
	WHERE ERROR_CODE = 13086;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13087;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13087,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed is mandatory when Hepatitis B surface antibody (anti-HB) is populated.',1,1077,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('30-JAN-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13087,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed is mandatory when Hepatitis B surface antibody (anti-HB) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1077,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('30-JAN-14','DD-MON-RR') 
	WHERE ERROR_CODE = 13087;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13088;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13088,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed must be a valid date.',1,1078,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13088,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1078,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13088;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13089;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13089,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed cannot be a future date.',1,1079,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13089,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1079,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13089;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13091;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13091,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed cannot be prior to the patient''''s Date of Birth ({0}).',1,1081,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13091,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1081,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13091;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13092;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13092,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed cannot be after the patient''''s Date of Death ({0}).',1,1082,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13092,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1082,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13092;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13093;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13093,'CW 4.0','Oral Vitamin D Analog Prescribed is mandatory.',1,1083,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13093,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog Prescribed is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 1083,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13093;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13094;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13094,'CW 4.0','Oral Vitamin D Analog is mandatory when the value in Oral Vitamin D Analog Rx Prescribed is ''''Oral Vitamin D Analog Prescribed''''.',1,1084,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13094,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog is mandatory when the value in Oral Vitamin D Analog Rx Prescribed is ''''Oral Vitamin D Analog Prescribed''''.',  
ACTIVE = 1,  
SORT_ORDER = 1084,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13094;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13095;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13095,'CW 4.0','Other Oral Vitamin D Analog is mandatory when Oral Vitamin D Analog is Other.',1,1085,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13095,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral Vitamin D Analog is mandatory when Oral Vitamin D Analog is Other.',  
ACTIVE = 1,  
SORT_ORDER = 1085,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13095;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13096;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13096,'CW 4.0','Other Oral Vitamin D Analog exceeds allowed length of {0}.',1,1086,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13096,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral Vitamin D Analog exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1086,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13096;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13097;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13097,'CW 4.0','Oral Vitamin D Analog Dosage is mandatory when Oral Vitamin D Analog is populated.',1,1087,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13097,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog Dosage is mandatory when Oral Vitamin D Analog is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1087,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13097;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13098;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13098,'CW 4.0','Oral Vitamin D Analog Dosage exceeds allowed length of {0}.',1,1088,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13098,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog Dosage exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1088,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13098;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13099;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13099,'CW 4.0','Oral Vitamin D Analog Dosage must be a numeric value.',1,1089,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13099,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog Dosage must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 1089,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13099;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13100;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13100,'CW 4.0','Oral Vitamin D Analog Dosage Measurement is mandatory when Oral Vitamin D Analog is populated.',1,1090,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13100,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog Dosage Measurement is mandatory when Oral Vitamin D Analog is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1090,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13100;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13101;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13101,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date is required when Serum Parathyroid Hormone (PTH) Value (pg/mL) is populated.',1,1091,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13101,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date is required when Serum Parathyroid Hormone (PTH) Value (pg/mL) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1091,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13101;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13102;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13102,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date must be a valid date.',1,1092,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13102,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1092,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13102;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13103;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13103,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date cannot be a future date.',1,1093,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13103,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1093,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13103;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13104;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13104,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date must be on or after 01/01/1973.',1,1094,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13104,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1094,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13104;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13105;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13105,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date cannot be prior to the patient''''s Date of Birth ({0}).',1,1095,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13105,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1095,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13105;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12893;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12893,'CW 4.0',' This is a missing error message',0,1224,2,1,0,to_date('29-NOV-12','DD-MON-RR'),to_date('29-NOV-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12893,  
NAME = 'CW 4.0',  
LABEL = ' This is a missing error message',  
ACTIVE = 0,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('29-NOV-12','DD-MON-RR'),  
UPDATE_TIME = to_date('29-NOV-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12893;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12894;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12894,'CW 4.0','The value provided for Site of Dialysis Access Infection is not an acceptable value for a PD Patient.',0,1212,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12894,  
NAME = 'CW 4.0',  
LABEL = 'The value provided for Site of Dialysis Access Infection is not an acceptable value for a PD Patient.',  
ACTIVE = 0,  
SORT_ORDER = 1212,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12894;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30000;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30000,'CW 4.0','The measurement {0} has already been submitted for facility {1} for the performance year {2}.',1,1213,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30000,  
NAME = 'CW 4.0',  
LABEL = 'The measurement {0} has already been submitted for facility {1} for the performance year {2}.',  
ACTIVE = 1,  
SORT_ORDER = 1213,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30000;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30001;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30001,'CW 4.0','Facility Attestation cannot be performed outside of the dates {0} to {1} for performance year {2}.',1,1214,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30001,  
NAME = 'CW 4.0',  
LABEL = 'Facility Attestation cannot be performed outside of the dates {0} to {1} for performance year {2}.',  
ACTIVE = 1,  
SORT_ORDER = 1214,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30001;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30002;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30002,'CW 4.0','Attestation on behalf of is provided for {0}. {0} is required.',1,1215,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30002,  
NAME = 'CW 4.0',  
LABEL = 'Attestation on behalf of is provided for {0}. {0} is required.',  
ACTIVE = 1,  
SORT_ORDER = 1215,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30002;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30003;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30003,'CW 4.0','{0} is provided.  Attesting on behalf of is required.',1,1216,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30003,  
NAME = 'CW 4.0',  
LABEL = '{0} is provided.  Attesting on behalf of is required.',  
ACTIVE = 1,  
SORT_ORDER = 1216,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30003;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30004;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30004,'CW 4.0','Invalid CROWN Personnel ID provided for Attesting on Behalf Of. CROWN Personnel ID was not found to exist for Facility. Please provide a valid CROWN Personnel ID.',1,1217,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30004,  
NAME = 'CW 4.0',  
LABEL = 'Invalid CROWN Personnel ID provided for Attesting on Behalf Of. CROWN Personnel ID was not found to exist for Facility. Please provide a valid CROWN Personnel ID.',  
ACTIVE = 1,  
SORT_ORDER = 1217,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30004;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30005;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30005,'CW 4.0','{0} reason is N/A. N/A reason is required.',0,1218,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30005,  
NAME = 'CW 4.0',  
LABEL = '{0} reason is N/A. N/A reason is required.',  
ACTIVE = 0,  
SORT_ORDER = 1218,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30005;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30006;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30006,'CW 4.0','N/A is not a valid value for {0}.',0,1219,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('19-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30006,  
NAME = 'CW 4.0',  
LABEL = 'N/A is not a valid value for {0}.',  
ACTIVE = 0,  
SORT_ORDER = 1219,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 30006;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30007;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30007,'CW 4.0','NA Reason is invalid. NA Reason should be null when Attestation Response is not NA.',0,1220,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30007,  
NAME = 'CW 4.0',  
LABEL = 'NA Reason is invalid. NA Reason should be null when Attestation Response is not NA.',  
ACTIVE = 0,  
SORT_ORDER = 1220,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30007;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30009;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30009,'CW 4.0','NA Reason is invalid.',0,1222,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30009,  
NAME = 'CW 4.0',  
LABEL = 'NA Reason is invalid.',  
ACTIVE = 0,  
SORT_ORDER = 1222,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30009;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30010;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30010,'CW 4.0','Attestation Response provided is Invalid.',1,1223,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30010,  
NAME = 'CW 4.0',  
LABEL = 'Attestation Response provided is Invalid.',  
ACTIVE = 1,  
SORT_ORDER = 1223,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30010;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13465;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13465,'CW4.1','The effective date for a change to patient employment status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute. ',1,13465,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13465,  
NAME = 'CW4.1',  
LABEL = 'The effective date for a change to patient employment status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute. ',  
ACTIVE = 1,  
SORT_ORDER = 13465,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13465;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13466;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13466,'CW4.1','Employment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',1,13466,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13466,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13466,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13466;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13467;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13467,'CW4.1','Employment Effective Date cannot be after the patient''''s Date of Death {0}.',1,13467,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13467,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13467,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13467;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13468;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13468,'CW4.1','Employment Effective Date cannot be a future date.',1,13468,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13468,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13468,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13468;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13469;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13469,'CW4.1','Employment Effective Date must be a valid date.',1,13469,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13469,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13469,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13469;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13493;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13493,'CW4.1','Employment Effective Date is mandatory when Current Employment Status is populated.',0,13493,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13493,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date is mandatory when Current Employment Status is populated.',  
ACTIVE = 0,  
SORT_ORDER = 13493,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13493;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13470;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13470,'CW4.1','Employment Effective Date of {0} already exists in the system for Employment Status.',1,13470,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13470,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date of {0} already exists in the system for Employment Status.',  
ACTIVE = 1,  
SORT_ORDER = 13470,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13470;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13471;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13471,'CW4.1','The effective date for a change to patient school status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',1,13471,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13471,  
NAME = 'CW4.1',  
LABEL = 'The effective date for a change to patient school status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',  
ACTIVE = 1,  
SORT_ORDER = 13471,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13471;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13472;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13472,'CW4.1','Patient must be between the ages of 18 and 54 as of the School Status Effective Date.',1,13472,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13472,  
NAME = 'CW4.1',  
LABEL = 'Patient must be between the ages of 18 and 54 as of the School Status Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13472,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13472;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13473;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13473,'CW4.1','School Status Effective Date cannot be after the patient''''s Date of Death {0}.',1,13473,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13473,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13473,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13473;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13474;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13474,'CW4.1','School Status Effective Date must be a valid date.',0,13474,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13474,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 13474,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13474;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13494;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13494,'CW4.1','School Status Effective Date is mandatory when Current School Status is populated.',0,13494,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13494,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date is mandatory when Current School Status is populated.',  
ACTIVE = 0,  
SORT_ORDER = 13494,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13494;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13475;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13475,'CW4.1','School Status Effective Date of {0} already exists in the system for School Status.',1,13475,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13475,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date of {0} already exists in the system for School Status.',  
ACTIVE = 1,  
SORT_ORDER = 13475,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13475;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13476;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13476,'CW4.1','The effective date for a change to patient Vocational Rehabilitation status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',1,13476,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13476,  
NAME = 'CW4.1',  
LABEL = 'The effective date for a change to patient Vocational Rehabilitation status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',  
ACTIVE = 1,  
SORT_ORDER = 13476,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13476;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13477;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13477,'CW4.1','Patient must be between the ages of 18 and 54 as of the Vocational Rehabilitation Effective Date.',1,13477,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13477,  
NAME = 'CW4.1',  
LABEL = 'Patient must be between the ages of 18 and 54 as of the Vocational Rehabilitation Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13477,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13477;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13478;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13478,'CW4.1','Vocational Rehabilitation Effective Date cannot be after the patient''''s Date of Death {0}.',1,13478,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13478,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13478,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13478;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13479;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13479,'CW4.1','Vocational Rehabilitation Effective Date must be a valid date.',0,13479,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13479,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Effective Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 13479,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13479;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13495;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13495,'CW4.1','Vocational Rehabilitation Effective Date is mandatory when Current Vocational Rehabilitation Status is populated.',0,13495,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13495,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Effective Date is mandatory when Current Vocational Rehabilitation Status is populated.',  
ACTIVE = 0,  
SORT_ORDER = 13495,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13495;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13480;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13480,'CW4.1','Vocational Rehab Effective Date of {0} already exists in the system for Vocational Rehab Status.',1,13480,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13480,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehab Effective Date of {0} already exists in the system for Vocational Rehab Status.',  
ACTIVE = 1,  
SORT_ORDER = 13480,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13480;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13481;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13481,'CW4.1','The effective date for a change to patient Citizenship status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',1,13481,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13481,  
NAME = 'CW4.1',  
LABEL = 'The effective date for a change to patient Citizenship status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',  
ACTIVE = 1,  
SORT_ORDER = 13481,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13481;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13482;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13482,'CW4.1','Citizenship Effective Date cannot be prior to the patient''''s Date of Birth {0}.',1,13482,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13482,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13482,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13482;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13483;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13483,'CW4.1','Citizenship Effective Date cannot be after the patient''''s Date of Death {0}.',1,13483,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13483,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13483,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13483;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13484;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13484,'CW4.1','Citizenship Effective Date cannot be a future date.',1,13484,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13484,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13484,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13484;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13485;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13485,'CW4.1','Citizenship Effective Date must be a valid date.',1,13485,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13485,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13485,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13485;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13496;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13496,'CW4.1','Citizenship Effective Date is mandatory when Current Citizenship Status is populated.',0,13496,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13496,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date is mandatory when Current Citizenship Status is populated.',  
ACTIVE = 0,  
SORT_ORDER = 13496,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13496;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13486;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13486,'CW4.1','Citizenship Effective Date of {0} already exists in the system for Citizenship Status.',1,13486,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13486,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date of {0} already exists in the system for Citizenship Status.',  
ACTIVE = 1,  
SORT_ORDER = 13486,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13486;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13487;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13487,'CW4.1','The effective date for a change to patient Medicare Enrollment status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',1,13487,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13487,  
NAME = 'CW4.1',  
LABEL = 'The effective date for a change to patient Medicare Enrollment status must be after the most recent, previous change to this patient attribute.  Please use the Patient Attribute History page to view or edit the history of this attribute.',  
ACTIVE = 1,  
SORT_ORDER = 13487,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13487;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13488;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13488,'CW4.1','Medicare Enrollment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',1,13488,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13488,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13488,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13488;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13489;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13489,'CW4.1','Medicare Enrollment Effective Date cannot be after the patient''''s Date of Death {0}.',1,13489,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13489,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13489,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13489;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13490;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13490,'CW4.1','Medicare Enrollment Effective Date cannot be a future date.',1,13490,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13490,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13490,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13490;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13491;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13491,'CW4.1','Medicare Enrollment Effective Date must be a valid date.',1,13491,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13491,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13491,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13491;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13497;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13497,'CW4.1','Medicare Enrollment Effective Date is mandatory when Current Medicare Enrollment Status is populated.',0,13497,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13497,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date is mandatory when Current Medicare Enrollment Status is populated.',  
ACTIVE = 0,  
SORT_ORDER = 13497,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13497;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13492;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13492,'CW4.1','Medicare Enrollment Effective Date of {0} already exists in the system for Medicare Enrollment Status.',1,13492,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13492,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date of {0} already exists in the system for Medicare Enrollment Status.',  
ACTIVE = 1,  
SORT_ORDER = 13492,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13492;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13500;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13500,'CW4.1','Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare.',0,13500,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13500,  
NAME = 'CW4.1',  
LABEL = 'Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare.',  
ACTIVE = 0,  
SORT_ORDER = 13500,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13500;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13501;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13501,'CW4.1','Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare.',0,13501,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13501,  
NAME = 'CW4.1',  
LABEL = 'Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare.',  
ACTIVE = 0,  
SORT_ORDER = 13501,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13501;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13502;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13502,'CW4.1','Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',0,13502,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13502,  
NAME = 'CW4.1',  
LABEL = 'Non U.S. Citizen is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',  
ACTIVE = 0,  
SORT_ORDER = 13502,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13502;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13503;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13503,'CW4.1','Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',0,13503,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13503,  
NAME = 'CW4.1',  
LABEL = 'Foreign National US Resident is not a valid value when Medicare Enrollment Status is Medicare Application Pending.',  
ACTIVE = 0,  
SORT_ORDER = 13503,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13503;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13504;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13504,'CW4.1','Citizenship Status is mandatory when Citizenship Effective Date is populated. ',1,13504,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13504,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Status is mandatory when Citizenship Effective Date is populated. ',  
ACTIVE = 1,  
SORT_ORDER = 13504,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13504;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13505;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13505,'CW4.1','The selected Citizenship Status is the same as the previous Citizenship Status, please select a different Citizenship Status or modify the Effective Date.',1,13505,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13505,  
NAME = 'CW4.1',  
LABEL = 'The selected Citizenship Status is the same as the previous Citizenship Status, please select a different Citizenship Status or modify the Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13505,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13505;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13506;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13506,'CW4.1','Citizenship Effective Date cannot be prior to the patient''''s Date of Birth {0}.',0,13506,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13506,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 0,  
SORT_ORDER = 13506,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13506;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13507;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13507,'CW4.1','Citizenship Effective Date cannot be after the patient''''s Date of Death {0}.',0,13507,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13507,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 0,  
SORT_ORDER = 13507,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13507;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13539;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13539,'CW4.1','Citizenship Effective Date cannot be a future date.',0,13539,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13539,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 13539,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13539;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13508;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13508,'CW4.1','Citizenship Effective Date must be a valid date.',0,13508,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13508,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 13508,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13508;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13106;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13106,'CW 4.0','Serum Parathyroid Hormone (PTH) Collection Date cannot be after the patient''''s Date of Death ({0}).',1,1096,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13106,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Collection Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1096,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13106;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13107;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13107,'CW 4.0','Other Serum Parathyroid Hormone Type (PTH) is mandatory when Serum Parathyroid Hormone Type is Other.',1,1097,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13107,  
NAME = 'CW 4.0',  
LABEL = 'Other Serum Parathyroid Hormone Type (PTH) is mandatory when Serum Parathyroid Hormone Type is Other.',  
ACTIVE = 1,  
SORT_ORDER = 1097,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13107;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13108;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13108,'CW 4.0','Other Serum Parathyroid Hormone Type (PTH) exceeds allowed length of {0}.',1,1098,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13108,  
NAME = 'CW 4.0',  
LABEL = 'Other Serum Parathyroid Hormone Type (PTH) exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1098,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13108;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13109;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13109,'CW 4.0','Serum Parathyroid Hormone (PTH) Value (pg/mL) exceeds allowed length of 30.',1,1099,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13109,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Value (pg/mL) exceeds allowed length of 30.',  
ACTIVE = 1,  
SORT_ORDER = 1099,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13109;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13110;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13110,'CW 4.0','Serum Parathyroid Hormone (PTH) Value must be a numeric value.',1,1100,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13110,  
NAME = 'CW 4.0',  
LABEL = 'Serum Parathyroid Hormone (PTH) Value must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 1100,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13110;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13111;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13111,'CW 4.0','Medication Allergy exceeds allowed length of {0}.',1,1101,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13111,  
NAME = 'CW 4.0',  
LABEL = 'Medication Allergy exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1101,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13111;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13112;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13112,'CW 4.0','Other Medication Allergies is mandatory when Medication Allergies is Other.',1,1102,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13112,  
NAME = 'CW 4.0',  
LABEL = 'Other Medication Allergies is mandatory when Medication Allergies is Other.',  
ACTIVE = 1,  
SORT_ORDER = 1102,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13112;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13113;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13113,'CW 4.0','Medication Allergies is mandatory.',1,1103,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13113,  
NAME = 'CW 4.0',  
LABEL = 'Medication Allergies is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 1103,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13113;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13114;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13114,'CW 4.0','Other Medication Allergy exceeds allowed length of {0}.',1,1104,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13114,  
NAME = 'CW 4.0',  
LABEL = 'Other Medication Allergy exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1104,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13114;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13115;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13115,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date must be a valid date.',1,1105,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13115,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1105,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13115;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13116;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13116,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be a future date.',1,1106,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13116,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1106,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13116;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13117;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13117,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date must be on or after 01/01/1973.',1,1107,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13117,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1107,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13117;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13118;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13118,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be prior to the patient''''s Date of Birth ({0}).',1,1108,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13118,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1108,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13118;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13119;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13119,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be after the patient''''s Date of Death ({0}).',1,1109,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13119,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1109,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13119;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13120;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13120,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date is mandatory when Normalized Protein Catabolic Rate (nPCR) is populated.',1,1110,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13120,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date is mandatory when Normalized Protein Catabolic Rate (nPCR) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1110,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13120;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13121;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13121,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) must be a numeric value.',1,1111,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13121,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 1111,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13121;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13122;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13122,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date.',1,1112,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13122,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date.',  
ACTIVE = 1,  
SORT_ORDER = 1112,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13122;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13123;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13123,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date is mandatory when Normalized Protein Catabolic Rate (nPCR) is populated.',1,1113,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13123,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date is mandatory when Normalized Protein Catabolic Rate (nPCR) is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1113,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13123;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13124;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13124,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) exceeds allowed length of 30.',1,1114,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13124,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) exceeds allowed length of 30.',  
ACTIVE = 1,  
SORT_ORDER = 1114,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13124;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13125;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13125,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) must be a numeric value.',1,1115,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13125,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 1115,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13125;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13126;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13126,'CW 4.0','Other ESA Agent is mandatory when ESA Agent Prescribed is Other.',1,1116,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13126,  
NAME = 'CW 4.0',  
LABEL = 'Other ESA Agent is mandatory when ESA Agent Prescribed is Other.',  
ACTIVE = 1,  
SORT_ORDER = 1116,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13126;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13127;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13127,'CW 4.0','Other ESA Agent Prescribed exceeds allowed length of {0}.',1,1117,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13127,  
NAME = 'CW 4.0',  
LABEL = 'Other ESA Agent Prescribed exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1117,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13127;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13128;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13128,'CW 4.0','ESA Administered Date cannot be a future date.',1,1118,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13128,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 1118,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13128;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13129;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13129,'CW 4.0','ESA Administered Date must be on or after 01/01/1973.',1,1119,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13129,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1119,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13129;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13130;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13130,'CW 4.0','ESA Administered Date cannot be prior to the patient''''s Date of Birth ({0}).',1,1120,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13130,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1120,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13130;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13131;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13131,'CW 4.0','ESA Administered Date cannot be after the patient''''s Date of Death ({0}).',1,1121,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13131,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1121,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13131;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13132;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13132,'CW 4.0','ESA Administered Date must be a valid date.',1,1122,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13132,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1122,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13132;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13133;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13133,'CW 4.0','ESA Agent Prescribed is mandatory. Select N/A if ESA Agent Prescribed was not recorded for the patient for the clinical month.',1,1123,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13133,  
NAME = 'CW 4.0',  
LABEL = 'ESA Agent Prescribed is mandatory. Select N/A if ESA Agent Prescribed was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1123,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13133;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13134;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13134,'CW 4.0','ESA Administered Date is mandatory when ESA Administered is Yes.',1,1124,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13134,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered Date is mandatory when ESA Administered is Yes.',  
ACTIVE = 1,  
SORT_ORDER = 1124,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13134;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13135;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13135,'CW 4.0','Other ESA Monthly Dose exceeds allowed length of {0}.',1,1125,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13135,  
NAME = 'CW 4.0',  
LABEL = 'Other ESA Monthly Dose exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1125,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13135;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13136;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13136,'CW 4.0','Other ESA Monthly Dose is mandatory when ESA Monthly Dose Unit of Measure is Other.',1,1126,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13136,  
NAME = 'CW 4.0',  
LABEL = 'Other ESA Monthly Dose is mandatory when ESA Monthly Dose Unit of Measure is Other.',  
ACTIVE = 1,  
SORT_ORDER = 1126,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13136;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13137;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13137,'CW 4.0','ESA Monthly Dose is mandatory. Select N/A if ESA Monthly Dose was not recorded for the patient for the clinical month.',1,1127,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13137,  
NAME = 'CW 4.0',  
LABEL = 'ESA Monthly Dose is mandatory. Select N/A if ESA Monthly Dose was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1127,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13137;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13138;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13138,'CW 4.0','ESA Monthly Dose Measurement is mandatory when ESA Dose is populated.',1,1128,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13138,  
NAME = 'CW 4.0',  
LABEL = 'ESA Monthly Dose Measurement is mandatory when ESA Dose is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1128,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13138;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13139;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13139,'CW 4.0','ESA Monthly Dose exceeds allowed length of {0}.',1,1129,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13139,  
NAME = 'CW 4.0',  
LABEL = 'ESA Monthly Dose exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 1129,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13139;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13140;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13140,'CW 4.0','ESA Monthly Dose must be a numeric value.',1,1130,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13140,  
NAME = 'CW 4.0',  
LABEL = 'ESA Monthly Dose must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 1130,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13140;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13141;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13141,'CW 4.0','ESA Route is mandatory when ESA Administered is Yes.',1,1131,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13141,  
NAME = 'CW 4.0',  
LABEL = 'ESA Route is mandatory when ESA Administered is Yes.',  
ACTIVE = 1,  
SORT_ORDER = 1131,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13141;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13142;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13142,'CW 4.0','Serum Albumin must be numeric with no more than 2 decimal places.',1,1132,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13142,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin must be numeric with no more than 2 decimal places.',  
ACTIVE = 1,  
SORT_ORDER = 1132,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13142;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13143;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13143,'CW 4.0','Serum Albumin Lab Method is mandatory when Serum Albumin is populated.',0,1133,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13143,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Lab Method is mandatory when Serum Albumin is populated.',  
ACTIVE = 0,  
SORT_ORDER = 1133,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13143;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13144;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13144,'CW 4.0','Serum Albumin Lower Limit must be numeric with no more than 2 decimal places.',1,1134,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13144,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Lower Limit must be numeric with no more than 2 decimal places.',  
ACTIVE = 1,  
SORT_ORDER = 1134,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13144;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13145;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13145,'CW 4.0','Corrected Calcium must be numeric with no more than 1 decimal place.',1,1135,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13145,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1135,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13145;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13146;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13146,'CW 4.0','Uncorrected Calcium must be numeric with no more than 1 decimal place.',1,1136,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13146,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1136,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13146;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13147;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13147,'CW 4.0','Uncorrected Calcium Date is mandatory when Uncorrected Calcium is populated.',1,1137,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13147,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date is mandatory when Uncorrected Calcium is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1137,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13147;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13148;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13148,'CW 4.0','Hemoglobin must be numeric with no more than 1 decimal place.',1,1138,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13148,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1138,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13148;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13149;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13149,'CW 4.0','Ferritin must be numeric with no decimal place.',1,1139,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13149,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1139,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13149;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13150;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13150,'CW 4.0','Iron Saturation (TSAT) must be numeric with no decimal place.',1,1140,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13150,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1140,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13150;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13151;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13151,'CW 4.0','Reticulocyte Hemoglobin (CHr) must be numeric with no decimal place.',1,1141,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13151,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1141,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13151;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13152;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13152,'CW 4.0','Serum Creatinine must be numeric with no more than 1 decimal place.',1,1142,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13152,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1142,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13152;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13153;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13153,'CW 4.0','Serum Creatinine Date must be the same as the Kt/V Date.',0,1143,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13153,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date must be the same as the Kt/V Date.',  
ACTIVE = 0,  
SORT_ORDER = 1143,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13153;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13424;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13424,'CW 4.0','BUN Post-Dialysis must be numeric with no decimal place.',1,1145,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13424,  
NAME = 'CW 4.0',  
LABEL = 'BUN Post-Dialysis must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1145,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13424;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13425;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13425,'CW 4.0','Phosphorus must be numeric with no more than 1 decimal place.',1,1146,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13425,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1146,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13425;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13427;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13427,'CW 4.0','Could not find Clinical Question for: {0}',1,1147,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13427,  
NAME = 'CW 4.0',  
LABEL = 'Could not find Clinical Question for: {0}',  
ACTIVE = 1,  
SORT_ORDER = 1147,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13427;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13428;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13428,'CW 4.0','Could not find Clinical Type for: {0}',1,1148,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13428,  
NAME = 'CW 4.0',  
LABEL = 'Could not find Clinical Type for: {0}',  
ACTIVE = 1,  
SORT_ORDER = 1148,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13428;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13429;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13429,'CW 4.0','The submitted collection type of {0} is invalid based on the patient''''s current treatment type.',1,1149,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13429,  
NAME = 'CW 4.0',  
LABEL = 'The submitted collection type of {0} is invalid based on the patient''''s current treatment type.',  
ACTIVE = 1,  
SORT_ORDER = 1149,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13429;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13430;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13430,'CW 4.0','Clinical period cannot be after patient''''s date of death {0}',1,1150,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13430,  
NAME = 'CW 4.0',  
LABEL = 'Clinical period cannot be after patient''''s date of death {0}',  
ACTIVE = 1,  
SORT_ORDER = 1150,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13430;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13431;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13431,'CW 4.0','Serum Albumin Date must be a valid date.',1,1151,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13431,  
NAME = 'CW 4.0',  
LABEL = 'Serum Albumin Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1151,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13431;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13432;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13432,'CW 4.0','Corrected Calcium Date must be a valid date.',1,1152,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13432,  
NAME = 'CW 4.0',  
LABEL = 'Corrected Calcium Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1152,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13432;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13433;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13433,'CW 4.0','Serum Creatinine Date must be a valid date.',1,1153,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13433,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1153,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13433;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13434;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13434,'CW 4.0','Reticulocyte Hemoglobin (CHr) Date must be a valid date.',1,1154,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13434,  
NAME = 'CW 4.0',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1154,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13434;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13435;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13435,'CW 4.0','Ferritin Date must be a valid date.',1,1155,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13435,  
NAME = 'CW 4.0',  
LABEL = 'Ferritin Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1155,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13435;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13438;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13438,'CW 4.0','Hemoglobin Date must be a valid date.',1,1156,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13438,  
NAME = 'CW 4.0',  
LABEL = 'Hemoglobin Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1156,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13438;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13439;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13439,'CW 4.0','Intravenous (IV) Iron Administered Date must be a valid date.',1,1157,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13439,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1157,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13439;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13440;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13440,'CW 4.0','Normalized Protein Catabolic Rate (nPCR) Collection Date must be a valid date.',1,1158,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13440,  
NAME = 'CW 4.0',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Collection Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1158,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13440;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13441;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13441,'CW 4.0','Date Antibiotic Prescribed must be a valid date.',1,1159,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13441,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1159,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13441;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13442;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13442,'CW 4.0','Blood Culture Date must be a valid date.',1,1160,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13442,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1160,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13442;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13443;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13443,'CW 4.0','Phosphorus Date must be a valid date.',1,1161,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13443,  
NAME = 'CW 4.0',  
LABEL = 'Phosphorus Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1161,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13443;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13444;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13444,'CW 4.0','Iron Saturation (TSAT) Date must be a valid date.',1,1162,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13444,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1162,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13444;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13445;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13445,'CW 4.0','Uncorrected Calcium Date must be a valid date.',1,1163,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13445,  
NAME = 'CW 4.0',  
LABEL = 'Uncorrected Calcium Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1163,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13445;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13447;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13447,'CW 4.0','Kt/V Date must be a valid date.',1,1164,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13447,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1164,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13447;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13448;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13448,'CW 4.0','Kt/V Date must be a valid date.',1,1165,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13448,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1165,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13448;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13449;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13449,'CW 4.0','Date Access Type Changed must be a valid date.',1,1166,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13449,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1166,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13449;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13450;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13450,'CW 4.0','AV Fistula Usable Date must be a valid date.',1,1167,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13450,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1167,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13450;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13451;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13451,'CW 4.0','AVF Creation Date must be a valid date.',1,1168,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13451,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1168,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13451;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13452;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13452,'CW 4.0','Date of Reported Dialysis Session must be a valid date.',1,1169,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13452,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 1169,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13452;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13453;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13453,'CW 4.0','Antibiotic Dose exceeds allowed length of {0}.',0,1170,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13453,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 1170,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13453;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13454;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13454,'CW 4.0','Infection Hospitalization Date is mandatory when value in Infection Requires Hospitalization is ''''Infection requires hospitalization''''.',1,1171,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13454,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date is mandatory when value in Infection Requires Hospitalization is ''''Infection requires hospitalization''''.',  
ACTIVE = 1,  
SORT_ORDER = 1171,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13454;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13455;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13455,'CW 4.0','Collection Type is mandatory.',1,1172,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13455,  
NAME = 'CW 4.0',  
LABEL = 'Collection Type is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 1172,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13455;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20007;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20007,'CW 4.0','Remove action is not yet supported in CROWNWeb. Found remove action for: {0}',1,1175,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20007,  
NAME = 'CW 4.0',  
LABEL = 'Remove action is not yet supported in CROWNWeb. Found remove action for: {0}',  
ACTIVE = 1,  
SORT_ORDER = 1175,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 20007;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13458;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13458,'CW 4.0','Medicare Enrollment Status is required.',1,1176,1,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13458,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Enrollment Status is required.',  
ACTIVE = 1,  
SORT_ORDER = 1176,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13458;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13459;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13459,'CW 4.0','Dialysis Time Period is mandatory when Primary Type of Treatment is Hemodialysis and Sessions Per Week is greater than 4.',1,1177,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13459,  
NAME = 'CW 4.0',  
LABEL = 'Dialysis Time Period is mandatory when Primary Type of Treatment is Hemodialysis and Sessions Per Week is greater than 4.',  
ACTIVE = 1,  
SORT_ORDER = 1177,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13459;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13460;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13460,'CW 4.0','Expected Self-Care Setting is mandatory when Sessions Per Week is greater than 4.',1,1178,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('10-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13460,  
NAME = 'CW 4.0',  
LABEL = 'Expected Self-Care Setting is mandatory when Sessions Per Week is greater than 4.',  
ACTIVE = 1,  
SORT_ORDER = 1178,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('10-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13460;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13461;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13461,'CW 4.0','SSN or SSN N/A is required.',1,1179,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13461,  
NAME = 'CW 4.0',  
LABEL = 'SSN or SSN N/A is required.',  
ACTIVE = 1,  
SORT_ORDER = 1179,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13461;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11204;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11204,'CW 4.0','The admission facility is not an open facility as of the entered Discharge Date (Facility close date).',1,1225,1,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11204,  
NAME = 'CW 4.0',  
LABEL = 'The admission facility is not an open facility as of the entered Discharge Date (Facility close date).',  
ACTIVE = 1,  
SORT_ORDER = 1225,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 11204;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12878;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12878,'CW 4.0','Height must be numeric with no more than 1 decimal place.',1,1224,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12878,  
NAME = 'CW 4.0',  
LABEL = 'Height must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12878;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20025;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20025,'CW 4.0','Current record contains no data. Select Cancel or enter data to continue.',1,1210,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20025,  
NAME = 'CW 4.0',  
LABEL = 'Current record contains no data. Select Cancel or enter data to continue.',  
ACTIVE = 1,  
SORT_ORDER = 1210,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20025;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20026;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20026,'CW 4.0','Antibiotic Therapy was not Prescribed, Signs of Soft Tissue Infection should not be provided.',0,1180,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20026,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Signs of Soft Tissue Infection should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1180,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20026;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20027;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20027,'CW 4.0','Antibiotic Therapy was not Prescribed, Blood Culture Result should not be provided.',0,1181,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20027,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Blood Culture Result should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1181,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20027;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20028;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20028,'CW 4.0','Antibiotic Therapy was not Prescribed, Infection Requires Hospitalization should not be provided.',0,1182,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20028,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Infection Requires Hospitalization should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1182,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20028;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20029;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20029,'CW 4.0','Antibiotic Therapy was not Prescribed, Symptoms of Clinical Sepsis should not be provided.',0,1183,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20029,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Symptoms of Clinical Sepsis should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1183,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20029;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20030;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20030,'CW 4.0','Antibiotic Therapy was not Prescribed, Antibiotic Name should not be provided.',0,1184,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20030,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Antibiotic Name should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1184,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20030;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20031;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20031,'CW 4.0','Antibiotic Therapy was not Prescribed, Date Antibiotic Prescribed should not be provided.',0,1185,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20031,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Date Antibiotic Prescribed should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1185,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20031;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20032;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20032,'CW 4.0','Antibiotic Therapy was not Prescribed, Antibiotic Dose should not be provided.',0,1186,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20032,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Antibiotic Dose should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1186,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20032;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20033;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20033,'CW 4.0','Antibiotic Therapy was not Prescribed, Antibiotic Dose Measure should not be provided.',0,1187,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20033,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Antibiotic Dose Measure should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1187,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20033;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20034;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20034,'CW 4.0','Antibiotic Therapy was not Prescribed, Antibiotic Frequency should not be provided.',0,1188,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20034,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Antibiotic Frequency should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1188,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20034;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20035;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20035,'CW 4.0','Antibiotic Therapy was not Prescribed, Antibiotic Route should not be provided.',0,1189,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20035,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Antibiotic Route should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1189,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20035;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20036;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20036,'CW 4.0','Infection Hospitalization Date has been provided, ''''Infection Requires Hospitalization'''' must be selected for Infection Requires Hospitalization.',1,1190,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20036,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date has been provided, ''''Infection Requires Hospitalization'''' must be selected for Infection Requires Hospitalization.',  
ACTIVE = 1,  
SORT_ORDER = 1190,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20036;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20037;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20037,'CW 4.0','Vaccination data is required for HD or PD clinical submissions.',1,1191,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20037,  
NAME = 'CW 4.0',  
LABEL = 'Vaccination data is required for HD or PD clinical submissions.',  
ACTIVE = 1,  
SORT_ORDER = 1191,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20037;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20038;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20038,'CW 4.0','Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog should not be provided.',1,1192,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20038,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1192,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20038;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20039;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20039,'CW 4.0','Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog Dosage should not be provided.',1,1193,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20039,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog Dosage should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1193,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20039;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20040;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20040,'CW 4.0','Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog Dosage Measurement should not be provided.',1,1194,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20040,  
NAME = 'CW 4.0',  
LABEL = 'Oral Vitamin D Analog is not Prescribed, Oral Vitamin D Analog Dosage Measurement should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1194,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20040;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20043;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20043,'CW 4.0','AV Fistula Usable Date should not be provided based on the Current Access Type populated.',1,1195,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20043,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date should not be provided based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 1195,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20043;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20044;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20044,'CW 4.0','AV Fistula Creation Date should not be provided based on the value of Current Access Type and AV Fistula Maturing populated.',1,1196,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20044,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Creation Date should not be provided based on the value of Current Access Type and AV Fistula Maturing populated.',  
ACTIVE = 1,  
SORT_ORDER = 1196,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20044;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20045;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20045,'CW 4.0','Maturing AVF Present should not be provided based on the Current Access Type populated.',1,1197,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20045,  
NAME = 'CW 4.0',  
LABEL = 'Maturing AVF Present should not be provided based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 1197,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20045;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20046;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20046,'CW 4.0','Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog should not be provided.',1,1198,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20046,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1198,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20046;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20047;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20047,'CW 4.0','Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog Dosage should not be provided.',1,1199,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20047,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog Dosage should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1199,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20047;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20048;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20048,'CW 4.0','Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog Route should not be provided.',1,1200,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20048,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog is not Prescribed, Non-Oral Vitamin D Analog Route should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1200,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20048;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20049;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20049,'CW 4.0','Non-Oral Vitamin D Analog Dosage cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',1,1201,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20049,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 1201,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20049;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20050;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20050,'CW 4.0','Non-Oral Vitamin D Analog cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',1,1202,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20050,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 1202,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20050;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20051;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20051,'CW 4.0','Other Non-Oral Vitamin D Analog cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',1,1203,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20051,  
NAME = 'CW 4.0',  
LABEL = 'Other Non-Oral Vitamin D Analog cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 1203,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20051;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20052;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20052,'CW 4.0','Non-Oral Vitamin D Analog Route cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',1,1204,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20052,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Route cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 1204,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20052;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20053;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20053,'CW 4.0','Non-Oral Vitamin D Analog Dosage (mcg) exceeds allowed length of 30.',1,1205,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20053,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage (mcg) exceeds allowed length of 30.',  
ACTIVE = 1,  
SORT_ORDER = 1205,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20053;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20054;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20054,'CW 4.0','Antibiotic Therapy was not Prescribed, Peritoneal Dialysate Culture Result should not be provided.',0,1206,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20054,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Peritoneal Dialysate Culture Result should not be provided.',  
ACTIVE = 0,  
SORT_ORDER = 1206,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20054;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20055;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20055,'CW 4.0','Antibiotic Therapy was not Prescribed, Result of Peritoneal Dialysis Effluent Analysis should not be provided.',1,1207,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20055,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Therapy was not Prescribed, Result of Peritoneal Dialysis Effluent Analysis should not be provided.',  
ACTIVE = 1,  
SORT_ORDER = 1207,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20055;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13522;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13522,'CW4.1','Employment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',1,13522,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13522,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13522,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13522;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13523;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13523,'CW4.1','Employment Effective Date cannot be after the patient''''s Date of Death {0}.',1,13523,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13523,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13523,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13523;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13509;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13509,'CW4.1','Citizenship Effective Date is mandatory when Citizenship Status is populated.',1,13509,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('10-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13509,  
NAME = 'CW4.1',  
LABEL = 'Citizenship Effective Date is mandatory when Citizenship Status is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13509,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('10-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13509;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13540;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13540,'CW4.1','More than one Citizenship Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',1,13540,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13540,  
NAME = 'CW4.1',  
LABEL = 'More than one Citizenship Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13540,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13540;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13510;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13510,'CW4.1','At least one Citizenship is required when Primary Type of Treatment is Living Related, Living Unrelated, Deceased, or Unknown.',1,13510,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13510,  
NAME = 'CW4.1',  
LABEL = 'At least one Citizenship is required when Primary Type of Treatment is Living Related, Living Unrelated, Deceased, or Unknown.',  
ACTIVE = 1,  
SORT_ORDER = 13510,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13510;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13511;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13511,'CW4.1','Most Current Medicare Enrollment Status must be Medicare Coverage when Medicare Claim Number is populated.',1,13511,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13511,  
NAME = 'CW4.1',  
LABEL = 'Most Current Medicare Enrollment Status must be Medicare Coverage when Medicare Claim Number is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13511,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13511;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13512;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13512,'CW4.1','Medicare Enrollment Status is required when Medicare Enrollment Effective Date is provided.',1,13512,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13512,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Status is required when Medicare Enrollment Effective Date is provided.',  
ACTIVE = 1,  
SORT_ORDER = 13512,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13512;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13513;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13513,'CW4.1','The selected Medicare Enrollment status is the same as the previous Medicare Enrollment Status, please select a different Medicare Enrollment Status or modify the Effective Date.',1,13513,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13513,  
NAME = 'CW4.1',  
LABEL = 'The selected Medicare Enrollment status is the same as the previous Medicare Enrollment Status, please select a different Medicare Enrollment Status or modify the Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13513,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13513;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13514;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13514,'CW4.1','Medicare Enrollment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',1,13514,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13514,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be prior to the patient''''s Date of Birth {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13514,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13514;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13515;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13515,'CW4.1','Medicare Enrollment Effective Date cannot be after the patient''''s Date of Death {0}.',1,13515,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13515,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13515,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13515;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13516;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13516,'CW4.1','Medicare Enrollment Effective Date cannot be a future date.',1,13516,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13516,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13516,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13516;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13517;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13517,'CW4.1','Medicare Enrollment Effective Date must be a valid date.',1,13517,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13517,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13517,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13517;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13518;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13518,'CW4.1','Medicare Enrollment Effective Date is mandatory when Medicare Enrollment Status is populated.',1,13518,1,1,1,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13518,  
NAME = 'CW4.1',  
LABEL = 'Medicare Enrollment Effective Date is mandatory when Medicare Enrollment Status is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13518,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13518;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13541;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13541,'CW4.1','More than one Medicare Enrollment Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',1,13541,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13541,  
NAME = 'CW4.1',  
LABEL = 'More than one Medicare Enrollment Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13541,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13541;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13519;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13519,'CW4.1','At least one Medicare Enrollment Status is required.',1,13519,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13519,  
NAME = 'CW4.1',  
LABEL = 'At least one Medicare Enrollment Status is required.',  
ACTIVE = 1,  
SORT_ORDER = 13519,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13519;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13520;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13520,'CW4.1','Employment Status is mandatory when Employment Effective Date is populated.',1,13520,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13520,  
NAME = 'CW4.1',  
LABEL = 'Employment Status is mandatory when Employment Effective Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13520,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13520;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13521;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13521,'CW4.1','The selected Employment status is the same as the previous Employment Status, please select a different Employment Status or modify the Effective Date.',1,13521,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13521,  
NAME = 'CW4.1',  
LABEL = 'The selected Employment status is the same as the previous Employment Status, please select a different Employment Status or modify the Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13521,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13521;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12638;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12638,'CW 4.0','Body Surface Area (BSA) Corrected is mandatory. Select N/A if BSA Corrected was not recorded for the patient for the clinical month.',1,767,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12638,  
NAME = 'CW 4.0',  
LABEL = 'Body Surface Area (BSA) Corrected is mandatory. Select N/A if BSA Corrected was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 767,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12638;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12644;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12644,'CW 4.0','Serum Creatinine Date is mandatory when Serum Creatinine is populated.',1,768,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12644,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date is mandatory when Serum Creatinine is populated.',  
ACTIVE = 1,  
SORT_ORDER = 768,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12644;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12646;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12646,'CW 4.0','Serum Creatinine Date must be on or after 1/1/1973.',1,769,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12646,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date must be on or after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 769,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12646;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12647;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12647,'CW 4.0','Serum Creatinine Date cannot be a future date.',1,770,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12647,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 770,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12647;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12648;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12648,'CW 4.0','Serum Creatinine Date cannot be prior to the patient''''s Date of Birth ({0}).',1,771,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12648,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 771,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12648;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12649;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12649,'CW 4.0','Serum Creatinine Date cannot be after the patient''''s Date of Death ({0}).',1,772,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12649,  
NAME = 'CW 4.0',  
LABEL = 'Serum Creatinine Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 772,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12649;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12650;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12650,'CW 4.0','Patient is not receiving CAPD or CCPD at the selected facility as of the Serum Creatinine Date entered.',0,773,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12650,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving CAPD or CCPD at the selected facility as of the Serum Creatinine Date entered.',  
ACTIVE = 0,  
SORT_ORDER = 773,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12650;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12652;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12652,'CW 4.0','Clinic Weight cannot be zero (0).',1,774,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12652,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight cannot be zero (0).',  
ACTIVE = 1,  
SORT_ORDER = 774,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12652;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12701;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12701,'CW 4.0','Current Access Type is mandatory.',1,775,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12701,  
NAME = 'CW 4.0',  
LABEL = 'Current Access Type is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 775,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12701;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12702;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12702,'CW 4.0','Date Access Type Changed is mandatory when the Current Access Type is changed.',1,776,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12702,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed is mandatory when the Current Access Type is changed.',  
ACTIVE = 1,  
SORT_ORDER = 776,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12702;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12703;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12703,'CW 4.0','Date Access Type Changed is mandatory.',1,777,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12703,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 777,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12703;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12704;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12704,'CW 4.0','Date Access Type Changed must be on or after 01/01/1973.',1,778,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12704,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 778,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12704;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12705;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12705,'CW 4.0','Date Access Type Changed cannot be a future date.',1,779,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12705,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 779,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12705;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12706;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12706,'CW 4.0','Date Access Type Changed cannot be prior to the patient''''s Date of Birth ({0}).',1,780,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12706,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 780,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12706;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12707;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12707,'CW 4.0','Date Access Type Changed cannot be after the patient''''s Date of Death ({0}).',1,781,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12707,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 781,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12707;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12710;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12710,'CW 4.0','AV Fistula Usable Date must be on or after 01/01/1973.',1,783,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12710,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 783,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12710;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12711;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12711,'CW 4.0','AV Fistula Usable Date cannot be a future date.',1,784,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12711,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 784,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12711;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12712;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12712,'CW 4.0','AV Fistula Usable Date cannot be prior to the patient''''s Date of Birth ({0}).',1,785,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12712,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 785,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12712;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12713;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12713,'CW 4.0','AV Fistula Usable Date cannot be after the patient''''s Date of Death ({0}).',1,786,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12713,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 786,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12713;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12714;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12714,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the AV Fistula Usable Date entered.',1,787,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12714,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the AV Fistula Usable Date entered.',  
ACTIVE = 1,  
SORT_ORDER = 787,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12714;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12715;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12715,'CW 4.0','Date of Reported Dialysis Session is mandatory. Select N/A if date was not recorded.',1,788,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12715,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session is mandatory. Select N/A if date was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 788,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12715;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12716;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12716,'CW 4.0','Date of Reported Dialysis Session must be in the Clinical Month and Year.',1,789,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12716,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session must be in the Clinical Month and Year.',  
ACTIVE = 1,  
SORT_ORDER = 789,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12716;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12717;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12717,'CW 4.0','Date of Reported Dialysis Session must be on or after 01/01/1973.',1,790,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12717,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 790,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12717;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12718;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12718,'CW 4.0','Date of Reported Dialysis Session cannot be a future date.',1,791,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12718,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 791,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12718;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12719;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12719,'CW 4.0','Date of Reported Dialysis Session cannot be prior to the patient''''s Date of Birth ({0}).',1,792,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12719,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 792,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12719;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12720;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12720,'CW 4.0','Date of Reported Dialysis Session cannot be after the patient''''s Date of Death ({0}).',1,793,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12720,  
NAME = 'CW 4.0',  
LABEL = 'Date of Reported Dialysis Session cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 793,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12720;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12721;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12721,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Date of Reported Dialysis Session entered.',1,794,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12721,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Date of Reported Dialysis Session entered.',  
ACTIVE = 1,  
SORT_ORDER = 794,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12721;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12722;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12722,'CW 4.0','AV Fistula Maturing is mandatory based on the Current Access Type populated. Select N/A if AV Fistula Maturing was not recorded.',1,795,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12722,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Maturing is mandatory based on the Current Access Type populated. Select N/A if AV Fistula Maturing was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 795,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12722;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12723;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12723,'CW 4.0','AV Graft Maturing is mandatory based on the Current Access Type populated. Select N/A if AV Graft Maturing was not recorded.',1,796,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12723,  
NAME = 'CW 4.0',  
LABEL = 'AV Graft Maturing is mandatory based on the Current Access Type populated. Select N/A if AV Graft Maturing was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 796,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12723;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12727;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12727,'CW 4.0','AVF Creation Date must be on or after 01/01/1973.',1,798,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12727,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 798,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12727;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12728;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12728,'CW 4.0','AVF Creation Date cannot be a future date.',1,799,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12728,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 799,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12728;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12729;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12729,'CW 4.0','AVF Creation Date cannot be prior to the patient''''s Date of Birth ({0}).',1,800,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12729,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 800,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12729;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12730;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12730,'CW 4.0','AVF Creation Date cannot be after the patient''''s Date of Death ({0}).',1,801,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12730,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 801,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12730;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12731;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12731,'CW 4.0','Physical examination of access performed for AVF/AVG is mandatory based on the Current Access Type populated.',1,802,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12731,  
NAME = 'CW 4.0',  
LABEL = 'Physical examination of access performed for AVF/AVG is mandatory based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 802,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12731;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12732;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12732,'CW 4.0','Frequency of access physical examination is mandatory when Access Physical Examination = Yes.',1,803,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12732,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of access physical examination is mandatory when Access Physical Examination = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 803,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12732;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12733;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12733,'CW 4.0','Arterial Pre-Pump pressure performed for AVF/AVG is mandatory based on the Current Access Type populated.',1,804,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12733,  
NAME = 'CW 4.0',  
LABEL = 'Arterial Pre-Pump pressure performed for AVF/AVG is mandatory based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 804,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12733;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12734;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12734,'CW 4.0','Frequency of arterial pre-pump pressure measurement is mandatory when Pre Pump Pressure = Yes.',1,805,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12734,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of arterial pre-pump pressure measurement is mandatory when Pre Pump Pressure = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 805,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12734;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12735;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12735,'CW 4.0','Surveillance of AVG for access dysfunction performed is mandatory based on the Current Access Type populated.',1,806,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12735,  
NAME = 'CW 4.0',  
LABEL = 'Surveillance of AVG for access dysfunction performed is mandatory based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 806,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12735;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12736;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12736,'CW 4.0','Surveillance of AVG with intra-access flow performed is mandatory when Graft Survey = Yes.',1,807,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12736,  
NAME = 'CW 4.0',  
LABEL = 'Surveillance of AVG with intra-access flow performed is mandatory when Graft Survey = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 807,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12736;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12737;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12737,'CW 4.0','Frequency of intra-access flow measurement is mandatory when Intra-Access Flow = Yes.',1,808,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12737,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of intra-access flow measurement is mandatory when Intra-Access Flow = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 808,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12737;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12738;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12738,'CW 4.0','Surveillance of AVG by static venous pressure performed is mandatory when Graft Survey = Yes.',1,809,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12738,  
NAME = 'CW 4.0',  
LABEL = 'Surveillance of AVG by static venous pressure performed is mandatory when Graft Survey = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 809,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12738;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12739;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12739,'CW 4.0','Frequency of static venous pressure measurement is mandatory when Static Venous Pressure = Yes.',1,810,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12739,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of static venous pressure measurement is mandatory when Static Venous Pressure = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 810,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12739;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12740;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12740,'CW 4.0','Surveillance of AVG with doppler ultrasound performed is mandatory when Graft Survey = Yes.',1,811,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12740,  
NAME = 'CW 4.0',  
LABEL = 'Surveillance of AVG with doppler ultrasound performed is mandatory when Graft Survey = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 811,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12740;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12741;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12741,'CW 4.0','Frequency of doppler ultrasound is mandatory when Doppler = Yes.',1,812,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12741,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of doppler ultrasound is mandatory when Doppler = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 812,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12741;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12742;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12742,'CW 4.0','AV Fistula State must be Active based on the Access Type for Dialysis.',1,813,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12742,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula State must be Active based on the Access Type for Dialysis.',  
ACTIVE = 1,  
SORT_ORDER = 813,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12742;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12743;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12743,'CW 4.0','AV Graft State must be Active based on the Access Type for Dialysis.',1,814,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12743,  
NAME = 'CW 4.0',  
LABEL = 'AV Graft State must be Active based on the Access Type for Dialysis.',  
ACTIVE = 1,  
SORT_ORDER = 814,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12743;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12744;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12744,'CW 4.0','Other Source of Vascular Infection exceeds allowed length of {0}.',1,815,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12744,  
NAME = 'CW 4.0',  
LABEL = 'Other Source of Vascular Infection exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 815,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12744;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12802;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12802,'CW 4.0','Intravenous (IV) Iron Administered is mandatory. Select N/A if Intravenous (IV) Iron Administered was not recorded for the patient for the clinical month.',1,817,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12802,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered is mandatory. Select N/A if Intravenous (IV) Iron Administered was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 817,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12802;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12808;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12808,'CW 4.0','Intravenous (IV) Iron Administered Date is mandatory when the value in Intravenous (IV) Iron Administered is Yes.',1,818,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12808,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date is mandatory when the value in Intravenous (IV) Iron Administered is Yes.',  
ACTIVE = 1,  
SORT_ORDER = 818,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12808;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12809;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12809,'CW 4.0','Intravenous (IV) Iron Administered Date must be on or after 01/01/1973.',1,819,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12809,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 819,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12809;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12810;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12810,'CW 4.0','Intravenous (IV) Iron Administered Date cannot be a future date.',1,820,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12810,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 820,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12810;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12811;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12811,'CW 4.0','Intravenous (IV) Iron Administered Date cannot be prior to the patient''''s Date of Birth ({0}).',1,821,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12811,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 821,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12811;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12812;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12812,'CW 4.0','Intravenous (IV) Iron Administered Date cannot be after the patient''''s Date of Death ({0}).',1,822,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12812,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Administered Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 822,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12812;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12820;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12820,'CW 4.0','Kt/V must be numeric with no more than 2 decimal places.',1,823,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12820,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V must be numeric with no more than 2 decimal places.',  
ACTIVE = 1,  
SORT_ORDER = 823,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12820;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12821;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12821,'CW 4.0','BUN Pre-Dialysis must be numeric with no decimal place.',1,824,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12821,  
NAME = 'CW 4.0',  
LABEL = 'BUN Pre-Dialysis must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 824,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12821;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12822;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12822,'CW 4.0','Residual Urea Clearance exceeds allowed length of {0}.',1,825,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12822,  
NAME = 'CW 4.0',  
LABEL = 'Residual Urea Clearance exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 825,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12822;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12823;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12823,'CW 4.0','Residual Urea Clearance for HD must be a numeric value.',1,826,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12823,  
NAME = 'CW 4.0',  
LABEL = 'Residual Urea Clearance for HD must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 826,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12823;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12824;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12824,'CW 4.0','Delivered Minutes of BUN Hemodialysis Session must be numeric with no decimal place.',1,827,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12824,  
NAME = 'CW 4.0',  
LABEL = 'Delivered Minutes of BUN Hemodialysis Session must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 827,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12824;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12826;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12826,'CW 4.0','Pre-Dialysis Weight must be numeric with no more than 1 decimal place.',1,829,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12826,  
NAME = 'CW 4.0',  
LABEL = 'Pre-Dialysis Weight must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 829,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12826;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12827;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12827,'CW 4.0','Post-Dialysis Weight must be numeric with no more than 1 decimal place.',1,830,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12827,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Weight must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 830,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12827;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12828;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12828,'CW 4.0','Non-Oral Vitamin D Analog Prescribed is mandatory.',1,831,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12828,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Prescribed is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 831,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12828;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12829;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12829,'CW 4.0','Non-Oral Vitamin D Analog is mandatory when Non-Oral Vitamin D Analog is Prescribed.',1,832,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12829,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog is mandatory when Non-Oral Vitamin D Analog is Prescribed.',  
ACTIVE = 1,  
SORT_ORDER = 832,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12829;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12830;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12830,'CW 4.0','Other Non-Oral Vitamin D Analog is mandatory when Non-Oral Vitamin D Analog is Other.',1,833,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12830,  
NAME = 'CW 4.0',  
LABEL = 'Other Non-Oral Vitamin D Analog is mandatory when Non-Oral Vitamin D Analog is Other.',  
ACTIVE = 1,  
SORT_ORDER = 833,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12830;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12831;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12831,'CW 4.0','Other Non-Oral Vitamin D Analog exceeds allowed length of {0}.',1,834,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12831,  
NAME = 'CW 4.0',  
LABEL = 'Other Non-Oral Vitamin D Analog exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 834,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12831;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12832;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12832,'CW 4.0','Non-Oral Vitamin D Analog Dosage is mandatory when Non-Oral Vitamin D Analog is populated.',1,835,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12832,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage is mandatory when Non-Oral Vitamin D Analog is populated.',  
ACTIVE = 1,  
SORT_ORDER = 835,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12832;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12833;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12833,'CW 4.0','Non-Oral Vitamin D Analog Dosage exceeds allowed length of {0}.',1,836,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12833,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 836,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12833;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12834;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12834,'CW 4.0','Non-Oral Vitamin D Analog Dosage must be numeric.',1,837,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12834,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage must be numeric.',  
ACTIVE = 1,  
SORT_ORDER = 837,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12834;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12835;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12835,'CW 4.0','Non-Oral Vitamin D Analog Route is mandatory when Non-Oral Vitamin D Analog Dosage is populated.',1,838,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12835,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Route is mandatory when Non-Oral Vitamin D Analog Dosage is populated.',  
ACTIVE = 1,  
SORT_ORDER = 838,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12835;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12836;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12836,'CW 4.0','Non-Oral Vitamin D Analog Dosage cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',1,839,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12836,  
NAME = 'CW 4.0',  
LABEL = 'Non-Oral Vitamin D Analog Dosage cannot be populated when Non-Oral Vitamin D Analog Prescribed is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 839,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12836;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12840;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12840,'CW 4.0','Interdialytic Time is Mandatory.',1,840,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12840,  
NAME = 'CW 4.0',  
LABEL = 'Interdialytic Time is Mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 840,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12840;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12841;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12841,'CW 4.0','Interdialytic Time exceeds allowed length of 30.',1,841,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12841,  
NAME = 'CW 4.0',  
LABEL = 'Interdialytic Time exceeds allowed length of 30.',  
ACTIVE = 1,  
SORT_ORDER = 841,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12841;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12842;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12842,'CW 4.0','Interdialytic Time must be a numeric value.',1,842,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12842,  
NAME = 'CW 4.0',  
LABEL = 'Interdialytic Time must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 842,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12842;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12843;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12843,'CW 4.0','Interdialytic Time should have a valid format of: dd:hh:mm or mm.',1,843,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12843,  
NAME = 'CW 4.0',  
LABEL = 'Interdialytic Time should have a valid format of: dd:hh:mm or mm.',  
ACTIVE = 1,  
SORT_ORDER = 843,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12843;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12844;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12844,'CW 4.0','Peritoneal Dialysate Culture Result is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',1,844,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12844,  
NAME = 'CW 4.0',  
LABEL = 'Peritoneal Dialysate Culture Result is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 1,  
SORT_ORDER = 844,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12844;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12845;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12845,'CW 4.0','Result of Peritoneal Dialysis Effluent Analysis is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',1,845,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12845,  
NAME = 'CW 4.0',  
LABEL = 'Result of Peritoneal Dialysis Effluent Analysis is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 1,  
SORT_ORDER = 845,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12845;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12846;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12846,'CW 4.0','Clinic Weight must be numeric with no more than 1 decimal place.',1,846,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12846,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 846,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12846;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12847;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12847,'CW 4.0','Kt/V Date is mandatory if Clinic Weight is populated.',0,847,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12847,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory if Clinic Weight is populated.',  
ACTIVE = 0,  
SORT_ORDER = 847,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12847;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12848;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12848,'CW 4.0','Clinic Weight must be numeric with no more than 1 decimal place.',1,848,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12848,  
NAME = 'CW 4.0',  
LABEL = 'Clinic Weight must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 848,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12848;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12849;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12849,'CW 4.0','Creatinine Clearance must be numeric with no more than 1 decimal place.',1,849,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12849,  
NAME = 'CW 4.0',  
LABEL = 'Creatinine Clearance must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 849,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12849;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12850;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12850,'CW 4.0','Creatinine Clearance cannot be zero (0).',1,850,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12850,  
NAME = 'CW 4.0',  
LABEL = 'Creatinine Clearance cannot be zero (0).',  
ACTIVE = 1,  
SORT_ORDER = 850,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12850;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12851;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12851,'CW 4.0','Serum BUN must be numeric with no decimal place.',1,851,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12851,  
NAME = 'CW 4.0',  
LABEL = 'Serum BUN must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 851,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12851;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12852;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12852,'CW 4.0','Urine Creatinine must be numeric with no more than 1 decimal place.',1,852,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12852,  
NAME = 'CW 4.0',  
LABEL = 'Urine Creatinine must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 852,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12852;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12853;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12853,'CW 4.0','Urine Urea Nitrogen must be numeric with no more than 1 decimal place.',1,853,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12853,  
NAME = 'CW 4.0',  
LABEL = 'Urine Urea Nitrogen must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 853,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12853;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12854;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12854,'CW 4.0','Urine Volume must be numeric with no decimal place.',1,854,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12854,  
NAME = 'CW 4.0',  
LABEL = 'Urine Volume must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 854,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12854;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12855;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12855,'CW 4.0','Dialysate Creatinine must be numeric with no more than 1 decimal place.',1,855,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12855,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Creatinine must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 855,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12855;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12856;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12856,'CW 4.0','Dialysate Urea Nitrogen must be numeric with no more than 1 decimal place.',1,856,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12856,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Urea Nitrogen must be numeric with no more than 1 decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 856,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12856;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12857;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12857,'CW 4.0','Dialysate Volume must be numeric with no decimal place.',1,857,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12857,  
NAME = 'CW 4.0',  
LABEL = 'Dialysate Volume must be numeric with no decimal place.',  
ACTIVE = 1,  
SORT_ORDER = 857,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12857;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12858;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12858,'CW 4.0','Kt/V Date is mandatory if Dialysate Volume is populated.',1,858,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12858,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory if Dialysate Volume is populated.',  
ACTIVE = 1,  
SORT_ORDER = 858,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12858;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12859;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12859,'CW 4.0','Kt/V must be numeric with no more than 2 decimal places.',1,859,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12859,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V must be numeric with no more than 2 decimal places.',  
ACTIVE = 1,  
SORT_ORDER = 859,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12859;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12860;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12860,'CW 4.0','Date Access Type Changed is prior to patient''''s admit date when no previous admission or treatment records exist.',1,860,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12860,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Type Changed is prior to patient''''s admit date when no previous admission or treatment records exist.',  
ACTIVE = 1,  
SORT_ORDER = 860,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12860;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12861;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12861,'CW 4.0','Patient is not receiving Hemodialysis at the selected facility as of the Date of Reported Dialysis Session entered.',1,861,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12861,  
NAME = 'CW 4.0',  
LABEL = 'Patient is not receiving Hemodialysis at the selected facility as of the Date of Reported Dialysis Session entered.',  
ACTIVE = 1,  
SORT_ORDER = 861,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12861;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12862;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12862,'CW 4.0','AV Fistula Creation Date is prior to patient''''s admit date when no previous admission or treatment records exist.',1,862,2,1,1,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12862,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Creation Date is prior to patient''''s admit date when no previous admission or treatment records exist.',  
ACTIVE = 1,  
SORT_ORDER = 862,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12862;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12863;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12863,'CW 4.0','AVF Creation Date is mandatory when AV Fistula Maturing = Yes.',1,863,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12863,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date is mandatory when AV Fistula Maturing = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 863,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12863;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12864;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12864,'CW 4.0','Frequency of arterial pre-pump pressure measurement is mandatory when Pre Pump Pressure = Yes.',1,864,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12864,  
NAME = 'CW 4.0',  
LABEL = 'Frequency of arterial pre-pump pressure measurement is mandatory when Pre Pump Pressure = Yes.',  
ACTIVE = 1,  
SORT_ORDER = 864,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12864;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12865;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12865,'CW 4.0','Date of Newly Suspected Infection must be a valid date.',1,865,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12865,  
NAME = 'CW 4.0',  
LABEL = 'Date of Newly Suspected Infection must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 865,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12865;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12866;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12866,'CW 4.0','Date of Newly Suspected Infection cannot be a future date.',1,866,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12866,  
NAME = 'CW 4.0',  
LABEL = 'Date of Newly Suspected Infection cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 866,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12866;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12867;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12867,'CW 4.0','Date of Newly Suspected Infection must be on or after 01/01/1973.',1,867,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12867,  
NAME = 'CW 4.0',  
LABEL = 'Date of Newly Suspected Infection must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 867,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12867;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12868;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12868,'CW 4.0','Date of Newly Suspected Infection cannot be prior to the patient''''s Date of Birth ({0}).',1,868,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12868,  
NAME = 'CW 4.0',  
LABEL = 'Date of Newly Suspected Infection cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 868,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12868;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12869;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12869,'CW 4.0','Date of Newly Suspected Infection cannot be after the patient''''s Date of Death ({0}).',1,869,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12869,  
NAME = 'CW 4.0',  
LABEL = 'Date of Newly Suspected Infection cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 869,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12869;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12870;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12870,'CW 4.0','Date Access Infection Confirmed must be a valid date.',0,870,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12870,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 870,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12870;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12871;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12871,'CW 4.0','Date Access Infection Confirmed cannot be a future date.',0,871,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12871,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 871,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12871;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12872;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12872,'CW 4.0','Date Access Infection Confirmed must be on or after 01/01/1973.',0,872,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12872,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 872,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12872;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12873;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12873,'CW 4.0','Date Access Infection Confirmed cannot be prior to the patient''''s Date of Birth ({0}).',0,873,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12873,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 873,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12873;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12874;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12874,'CW 4.0','Date Access Infection Confirmed cannot be after the patient''''s Date of Death ({0}).',0,874,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12874,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 874,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12874;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12875;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12875,'CW 4.0','Source of Vascular Infection is mandatory when Date Access Infection Confirmed is populated.',1,875,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12875,  
NAME = 'CW 4.0',  
LABEL = 'Source of Vascular Infection is mandatory when Date Access Infection Confirmed is populated.',  
ACTIVE = 1,  
SORT_ORDER = 875,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12875;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12876;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12876,'CW 4.0','A Patient is mandatory.',1,876,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12876,  
NAME = 'CW 4.0',  
LABEL = 'A Patient is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 876,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12876;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12877;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12877,'CW 4.0','Facility DBA Name is mandatory.',1,877,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12877,  
NAME = 'CW 4.0',  
LABEL = 'Facility DBA Name is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 877,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12877;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12885;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12885,'CW 4.0','Height is mandatory when [Kt/V or Weekly Kt/V] is populated.',0,878,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12885,  
NAME = 'CW 4.0',  
LABEL = 'Height is mandatory when [Kt/V or Weekly Kt/V] is populated.',  
ACTIVE = 0,  
SORT_ORDER = 878,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12885;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12886;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12886,'CW 4.0','Infection Id  exceeds allowed length of {0}.',1,879,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12886,  
NAME = 'CW 4.0',  
LABEL = 'Infection Id  exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 879,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12886;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12887;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12887,'CW 4.0','Date Access Infection Confirmed Infection must be a valid date.',1,880,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12887,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed Infection must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 880,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12887;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12888;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12888,'CW 4.0','Date Access Infection Confirmed Infection cannot be a future date.',1,881,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12888,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed Infection cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 881,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12888;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12889;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12889,'CW 4.0','Date Access Infection Confirmed must be on or after 01/01/1973.',1,882,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12889,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 882,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12889;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12890;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12890,'CW 4.0','Date Access Infection Confirmed cannot be prior to the patient''''s Date of Birth ({0}).',1,883,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12890,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 883,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12890;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12891;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12891,'CW 4.0','Date Access Infection Confirmed cannot be after the patient''''s Date of Death ({0}).',1,884,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12891,  
NAME = 'CW 4.0',  
LABEL = 'Date Access Infection Confirmed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 884,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12891;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12892;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12892,'CW 4.0','Site of Dialysis Access Infection is mandatory when Date Access Infection Confirmed is populated.',0,885,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12892,  
NAME = 'CW 4.0',  
LABEL = 'Site of Dialysis Access Infection is mandatory when Date Access Infection Confirmed is populated.',  
ACTIVE = 0,  
SORT_ORDER = 885,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12892;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12895;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12895,'CW 4.0','Infection Requires Hospitalization is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',0,886,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12895,  
NAME = 'CW 4.0',  
LABEL = 'Infection Requires Hospitalization is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 0,  
SORT_ORDER = 886,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12895;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12896;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12896,'CW 4.0','Date Antibiotic Prescribed is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',0,887,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12896,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 0,  
SORT_ORDER = 887,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12896;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12897;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12897,'CW 4.0','Symptoms of Clinical Sepsis is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',0,888,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12897,  
NAME = 'CW 4.0',  
LABEL = 'Symptoms of Clinical Sepsis is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 0,  
SORT_ORDER = 888,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12897;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12898;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12898,'CW 4.0','Blood Culture Result is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',0,889,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12898,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Result is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy was prescribed.',  
ACTIVE = 0,  
SORT_ORDER = 889,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12898;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12899;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12899,'CW 4.0','Indicate Organisms of Positive Culture is not allowed when Blood Culture Result is not Positive Culture.',0,890,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12899,  
NAME = 'CW 4.0',  
LABEL = 'Indicate Organisms of Positive Culture is not allowed when Blood Culture Result is not Positive Culture.',  
ACTIVE = 0,  
SORT_ORDER = 890,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12899;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12900;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12900,'CW 4.0','Date Antibiotic Prescribed must be a valid date.',0,891,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12900,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 891,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12900;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12901;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12901,'CW 4.0','Date Antibiotic Prescribed cannot be a future date.',0,892,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12901,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 892,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12901;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12902;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12902,'CW 4.0','Date Antibiotic Prescribed must be on or after 01/01/1973.',0,893,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12902,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 893,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12902;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12903;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12903,'CW 4.0','Date Antibiotic Prescribed cannot be prior to the patient''''s Date of Birth ({0}).',0,894,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12903,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 894,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12903;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12904;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12904,'CW 4.0','Date Antibiotic Prescribed cannot be after the patient''''s Date of Death ({0}).',0,895,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12904,  
NAME = 'CW 4.0',  
LABEL = 'Date Antibiotic Prescribed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 895,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12904;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12905;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12905,'CW 4.0','Other Antibiotic Dose Measurement is mandatory when Antibiotic Dose Measurement is Other.',0,896,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12905,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Dose Measurement is mandatory when Antibiotic Dose Measurement is Other.',  
ACTIVE = 0,  
SORT_ORDER = 896,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12905;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12906;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12906,'CW 4.0','Other Antibiotic Dose Measurement exceeds allowed length of {0}.',0,897,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12906,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Dose Measurement exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 897,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12906;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12907;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12907,'CW 4.0','Blood Culture Date must be a valid date.',0,898,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12907,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 898,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12907;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12908;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12908,'CW 4.0','Blood Culture Date cannot be a future date.',0,899,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12908,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 899,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12908;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12909;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12909,'CW 4.0','Blood Culture Date must be on or after 01/01/1973.',0,900,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12909,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 900,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12909;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12910;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12910,'CW 4.0','Blood Culture Date cannot be prior to the patient''''s Date of Birth ({0}).',0,901,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12910,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 901,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12910;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12911;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12911,'CW 4.0','Blood Culture Date cannot be after the patient''''s Date of Death ({0}).',0,902,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12911,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 902,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12911;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12913;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12913,'CW 4.0','Indicate Organism(s) of Positive Culture exceeds allowed length of {0}.',0,903,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12913,  
NAME = 'CW 4.0',  
LABEL = 'Indicate Organism(s) of Positive Culture exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 903,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12913;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12914;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12914,'CW 4.0','Antibiotic Name is mandatory when Antibiotic Dose is populated.',0,904,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12914,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Name is mandatory when Antibiotic Dose is populated.',  
ACTIVE = 0,  
SORT_ORDER = 904,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12914;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12915;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12915,'CW 4.0','Antibiotic Name is mandatory when Antibiotic Frequency is populated.',0,905,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12915,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Name is mandatory when Antibiotic Frequency is populated.',  
ACTIVE = 0,  
SORT_ORDER = 905,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12915;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12916;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12916,'CW 4.0','Antibiotic Name is mandatory when Antibiotic Route is populated.',0,906,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12916,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Name is mandatory when Antibiotic Route is populated.',  
ACTIVE = 0,  
SORT_ORDER = 906,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12916;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12917;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12917,'CW 4.0','Antibiotic Name exceeds allowed length of {0}.',0,907,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12917,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Name exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 907,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12917;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12918;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12918,'CW 4.0','Antibiotic Frequency is mandatory when Antibiotic Name is populated.',0,908,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12918,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Frequency is mandatory when Antibiotic Name is populated.',  
ACTIVE = 0,  
SORT_ORDER = 908,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12918;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12919;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12919,'CW 4.0','Antibiotic Frequency is mandatory when Antibiotic Dose is populated.',0,909,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12919,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Frequency is mandatory when Antibiotic Dose is populated.',  
ACTIVE = 0,  
SORT_ORDER = 909,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12919;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12920;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12920,'CW 4.0','Antibiotic Frequency is mandatory when Antibiotic Route is populated.',0,910,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12920,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Frequency is mandatory when Antibiotic Route is populated.',  
ACTIVE = 0,  
SORT_ORDER = 910,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12920;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12921;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12921,'CW 4.0','Antibiotic Dose is mandatory when Antibiotic Name is populated.',0,911,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12921,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose is mandatory when Antibiotic Name is populated.',  
ACTIVE = 0,  
SORT_ORDER = 911,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12921;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12922;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12922,'CW 4.0','Antibiotic Dose is mandatory when Antibiotic Frequency is populated.',0,912,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12922,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose is mandatory when Antibiotic Frequency is populated.',  
ACTIVE = 0,  
SORT_ORDER = 912,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12922;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12923;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12923,'CW 4.0','Antibiotic Dose is mandatory when Antibiotic Route is populated.',0,913,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12923,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose is mandatory when Antibiotic Route is populated.',  
ACTIVE = 0,  
SORT_ORDER = 913,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12923;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12924;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12924,'CW 4.0','Antibiotic Dose Measure is mandatory when Antibiotic Dose is populated.',0,914,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12924,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose Measure is mandatory when Antibiotic Dose is populated.',  
ACTIVE = 0,  
SORT_ORDER = 914,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12924;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12925;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12925,'CW 4.0','Antibiotic Dose must be a numeric value.',0,915,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12925,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Dose must be a numeric value.',  
ACTIVE = 0,  
SORT_ORDER = 915,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12925;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12926;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12926,'CW 4.0','Antibiotic Route is mandatory when Antibiotic Name is populated.',0,916,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12926,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Route is mandatory when Antibiotic Name is populated.',  
ACTIVE = 0,  
SORT_ORDER = 916,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12926;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12927;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12927,'CW 4.0','Antibiotic Route is mandatory when Antibiotic Frequency is populated.',0,917,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12927,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Route is mandatory when Antibiotic Frequency is populated.',  
ACTIVE = 0,  
SORT_ORDER = 917,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12927;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12928;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12928,'CW 4.0','Antibiotic Route is mandatory when Antibiotic Dose is populated.',0,918,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12928,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Route is mandatory when Antibiotic Dose is populated.',  
ACTIVE = 0,  
SORT_ORDER = 918,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12928;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12929;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12929,'CW 4.0','Other Antibiotic Route is mandatory when Antibiotic Route is Other.',0,919,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12929,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Route is mandatory when Antibiotic Route is Other.',  
ACTIVE = 0,  
SORT_ORDER = 919,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12929;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12930;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12930,'CW 4.0','Other Antibiotic Route exceeds allowed length of {0}.',0,920,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12930,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Route exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 920,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12930;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12931;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12931,'CW 4.0','Other Antibiotic Frequency is mandatory when Antibiotic Frequency is Other.',0,921,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12931,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Frequency is mandatory when Antibiotic Frequency is Other.',  
ACTIVE = 0,  
SORT_ORDER = 921,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12931;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12932;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12932,'CW 4.0','Other Antibiotic Frequency exceeds allowed length of {0}.',0,922,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12932,  
NAME = 'CW 4.0',  
LABEL = 'Other Antibiotic Frequency exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 922,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12932;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12933;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12933,'CW 4.0','Infection Hospitalization Date is mandatory when value in Infection Requires Hospitalization is ''''Infection requires hospitalization''''.',0,923,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12933,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date is mandatory when value in Infection Requires Hospitalization is ''''Infection requires hospitalization''''.',  
ACTIVE = 0,  
SORT_ORDER = 923,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12933;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12934;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12934,'CW 4.0','Infection Hospitalization Date must be a valid date.',1,924,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12934,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 924,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12934;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12935;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12935,'CW 4.0','Infection Hospitalization Date cannot be a future date.',1,925,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12935,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 925,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12935;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12936;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12936,'CW 4.0','Infection Hospitalization Date must be on or after 01/01/1973.',1,926,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12936,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 926,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12936;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12937;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12937,'CW 4.0','Infection Hospitalization Date cannot be prior to the patient''''s Date of Birth ({0}).',1,927,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12937,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 927,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12937;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12938;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12938,'CW 4.0','Infection Hospitalization Date cannot be after the patient''''s Date of Death ({0}).',1,928,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12938,  
NAME = 'CW 4.0',  
LABEL = 'Infection Hospitalization Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 928,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12938;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12939;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12939,'CW 4.0','Other Intravenous (IV) Iron is mandatory when Intravenous (IV) Iron is Other.',1,929,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12939,  
NAME = 'CW 4.0',  
LABEL = 'Other Intravenous (IV) Iron is mandatory when Intravenous (IV) Iron is Other.',  
ACTIVE = 1,  
SORT_ORDER = 929,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12939;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12940;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12940,'CW 4.0','Other Intravenous (IV) Iron exceeds allowed length of {0}.',1,930,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12940,  
NAME = 'CW 4.0',  
LABEL = 'Other Intravenous (IV) Iron exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 930,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12940;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12941;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12941,'CW 4.0','Intravenous (IV) Iron Dose is mandatory when Intravenous (IV) Iron is populated.',0,931,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12941,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Dose is mandatory when Intravenous (IV) Iron is populated.',  
ACTIVE = 0,  
SORT_ORDER = 931,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12941;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12942;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12942,'CW 4.0','Intravenous (IV) Iron Dose exceeds allowed length of {0}.',1,932,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12942,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Dose exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 932,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12942;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12943;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12943,'CW 4.0','Intravenous (IV) Iron Dose must be a numeric value.',1,933,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12943,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Dose must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 933,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12943;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12944;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12944,'CW 4.0','Intravenous (IV) Iron is mandatory. Select N/A if Intravenous (IV) Iron was not recorded for the patient for the clinical month.',1,934,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12944,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron is mandatory. Select N/A if Intravenous (IV) Iron was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 934,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12944;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12945;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12945,'CW 4.0','Intravenous (IV) Iron Dose Measure is mandatory when Intravenous (IV) Iron Dose is populated.',1,935,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12945,  
NAME = 'CW 4.0',  
LABEL = 'Intravenous (IV) Iron Dose Measure is mandatory when Intravenous (IV) Iron Dose is populated.',  
ACTIVE = 1,  
SORT_ORDER = 935,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12945;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12946;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12946,'CW 4.0','Other Intravenous (IV) Iron Dose Measure is mandatory when Intravenous (IV) Iron Dose Measure is Other.',1,936,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12946,  
NAME = 'CW 4.0',  
LABEL = 'Other Intravenous (IV) Iron Dose Measure is mandatory when Intravenous (IV) Iron Dose Measure is Other.',  
ACTIVE = 1,  
SORT_ORDER = 936,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12946;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12947;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12947,'CW 4.0','Other Intravenous (IV) Iron Dose exceeds allowed length of {0}.',1,937,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12947,  
NAME = 'CW 4.0',  
LABEL = 'Other Intravenous (IV) Iron Dose exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 937,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12947;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12948;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12948,'CW 4.0','Oral (PO) Iron Prescribed is mandatory. Select N/A if Oral (PO) Iron Prescribed was not recorded for the patient for the clinical month.',1,938,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12948,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron Prescribed is mandatory. Select N/A if Oral (PO) Iron Prescribed was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 938,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12948;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12949;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12949,'CW 4.0','Oral (PO) Iron is mandatory. Select N/A if Oral (PO) Iron was not recorded for the patient for the clinical month.',1,939,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12949,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron is mandatory. Select N/A if Oral (PO) Iron was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 939,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12949;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12950;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12950,'CW 4.0','Other Oral (PO) Iron is mandatory when Oral (PO) Iron is Other.',1,940,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12950,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral (PO) Iron is mandatory when Oral (PO) Iron is Other.',  
ACTIVE = 1,  
SORT_ORDER = 940,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12950;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12951;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12951,'CW 4.0','Other Oral (PO) Iron exceeds allowed length of {0}.',1,941,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12951,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral (PO) Iron exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 941,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12951;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12953;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12953,'CW 4.0','Oral (PO) Iron Dose exceeds allowed length of {0}.',1,943,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12953,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron Dose exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 943,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12953;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12954;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12954,'CW 4.0','Oral (PO) Iron Dose must be a numeric value.',1,944,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12954,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron Dose must be a numeric value.',  
ACTIVE = 1,  
SORT_ORDER = 944,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12954;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12955;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12955,'CW 4.0','Oral (PO) Iron Dose Measure is mandatory when Oral (PO) Iron Dose is populated.',1,945,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12955,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron Dose Measure is mandatory when Oral (PO) Iron Dose is populated.',  
ACTIVE = 1,  
SORT_ORDER = 945,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12955;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12956;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12956,'CW 4.0','Other Oral (PO) Iron Dose Measure is mandatory when Oral (PO) Iron Dose Measure is Other.',1,946,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12956,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral (PO) Iron Dose Measure is mandatory when Oral (PO) Iron Dose Measure is Other.',  
ACTIVE = 1,  
SORT_ORDER = 946,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12956;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12957;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12957,'CW 4.0','Other Oral (PO) Iron Dose Measure exceeds allowed length of {0}.',1,947,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12957,  
NAME = 'CW 4.0',  
LABEL = 'Other Oral (PO) Iron Dose Measure exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 947,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12957;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12958;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12958,'CW 4.0','Date Patient Education on Sodium Restriction must be a valid date.',1,948,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12958,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 948,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12958;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12959;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12959,'CW 4.0','Date Patient Education on Sodium Restriction cannot be a future date.',1,949,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12959,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 949,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12959;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12960;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12960,'CW 4.0','Date Patient Education on Sodium Restriction must be on or after 01/01/1973.',1,950,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12960,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 950,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12960;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12961;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12961,'CW 4.0','Date Patient Education on Sodium Restriction cannot be prior to the patient''''s Date of Birth ({0}).',1,951,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12961,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 951,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12961;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12962;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12962,'CW 4.0','Date Patient Education on Sodium Restriction cannot be after the patient''''s Date of Death ({0}).',1,952,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12962,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 952,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12962;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12963;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12963,'CW 4.0','Post Dialysis Weight Assessment Date must be a valid date.',1,953,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12963,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 953,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12963;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12964;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12964,'CW 4.0','Post Dialysis Weight Assessment Date cannot be a future date.',1,954,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12964,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 954,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12964;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12965;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12965,'CW 4.0','Post Dialysis Weight Assessment Date must be on or after 01/01/1973.',1,955,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12965,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 955,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12965;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12966;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12966,'CW 4.0','Post Dialysis Weight Assessment Date cannot be prior to the patient''''s Date of Birth ({0}).',1,956,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12966,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 956,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12966;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12967;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12967,'CW 4.0','Post Dialysis Weight Assessment Date cannot be after the patient''''s Date of Death ({0}).',1,957,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12967,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 957,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12967;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12968;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12968,'CW 4.0','Post Dialysis Weight Assessment Date must be a valid date.',0,958,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12968,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 958,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12968;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12969;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12969,'CW 4.0','Post Dialysis Weight Assessment Date cannot be a future date.',0,959,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12969,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 959,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12969;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12970;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12970,'CW 4.0','Post Dialysis Weight Assessment Date must be on or after 01/01/1973.',0,960,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12970,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 960,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12970;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12971;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12971,'CW 4.0','Post Dialysis Weight Assessment Date cannot be prior to the patient''''s Date of Birth ({0}).',0,961,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12971,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 961,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12971;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12972;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12972,'CW 4.0','Post Dialysis Weight Assessment Date cannot be after the patient''''s Date of Death ({0}).',0,962,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12972,  
NAME = 'CW 4.0',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 962,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12972;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12973;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12973,'CW 4.0','Echocardiogram Date must be a valid date.',1,963,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12973,  
NAME = 'CW 4.0',  
LABEL = 'Echocardiogram Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 963,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12973;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12974;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12974,'CW 4.0','Echocardiogram Date cannot be a future date.',1,964,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12974,  
NAME = 'CW 4.0',  
LABEL = 'Echocardiogram Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 964,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12974;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12975;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12975,'CW 4.0','Echocardiogram Date must be on or after 01/01/1973.',1,965,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12975,  
NAME = 'CW 4.0',  
LABEL = 'Echocardiogram Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 965,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12975;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12976;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12976,'CW 4.0','Echocardiogram Date cannot be prior to the patient''''s Date of Birth ({0}).',1,966,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12976,  
NAME = 'CW 4.0',  
LABEL = 'Echocardiogram Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 966,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12976;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12977;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12977,'CW 4.0','Echocardiogram Date cannot be after the patient''''s Date of Death ({0}).',1,967,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12977,  
NAME = 'CW 4.0',  
LABEL = 'Echocardiogram Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 967,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12977;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12978;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12978,'CW 4.0','Presence of Left Ventricular Hypertrophy is mandatory when Echocardiogram date is provided.',1,968,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12978,  
NAME = 'CW 4.0',  
LABEL = 'Presence of Left Ventricular Hypertrophy is mandatory when Echocardiogram date is provided.',  
ACTIVE = 1,  
SORT_ORDER = 968,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12978;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12979;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12979,'CW 4.0','Admission Date must be a valid date.',1,969,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12979,  
NAME = 'CW 4.0',  
LABEL = 'Admission Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 969,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12979;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12980;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12980,'CW 4.0','Admission Date cannot be a future date.',1,970,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12980,  
NAME = 'CW 4.0',  
LABEL = 'Admission Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 970,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12980;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12981;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12981,'CW 4.0','Admission Date must be on or after 01/01/1973.',1,971,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12981,  
NAME = 'CW 4.0',  
LABEL = 'Admission Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 971,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12981;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12982;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12982,'CW 4.0','Admission Date cannot be prior to the patient''''s Date of Birth ({0}).',1,972,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12982,  
NAME = 'CW 4.0',  
LABEL = 'Admission Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 972,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12982;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12983;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12983,'CW 4.0','Admission Date cannot be after the patient''''s Date of Death ({0}).',1,973,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12983,  
NAME = 'CW 4.0',  
LABEL = 'Admission Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 973,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12983;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12984;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12984,'CW 4.0','All Hospital Visits is mandatory when Admission Date is populated.',0,974,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12984,  
NAME = 'CW 4.0',  
LABEL = 'All Hospital Visits is mandatory when Admission Date is populated.',  
ACTIVE = 0,  
SORT_ORDER = 974,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12984;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12985;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12985,'CW 4.0','Infection Requires Hospitalization is mandatory. Select N/A if Infection Requires Hospitalization is not available for the patient for the clinical month.',1,975,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12985,  
NAME = 'CW 4.0',  
LABEL = 'Infection Requires Hospitalization is mandatory. Select N/A if Infection Requires Hospitalization is not available for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 975,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12985;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12986;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12986,'CW 4.0','Discharge Date must be a valid date.',1,976,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12986,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 976,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12986;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12987;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12987,'CW 4.0','Discharge Date cannot be a future date.',0,977,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12987,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 977,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12987;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12988;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12988,'CW 4.0','Discharge Date must be on or after 01/01/1973.',0,978,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12988,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 978,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12988;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12989;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12989,'CW 4.0','Discharge Date cannot be prior to the patient''''s Date of Birth ({0}).',0,979,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12989,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 979,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12989;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12990;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12990,'CW 4.0','Discharge Date cannot be after the patient''s Date of Death ({0}).',0,980,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12990,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date cannot be after the patient''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 980,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12990;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12991;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12991,'CW 4.0','Discharge Date is mandatory when Discharge Diagnosis is populated.',1,981,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12991,  
NAME = 'CW 4.0',  
LABEL = 'Discharge Date is mandatory when Discharge Diagnosis is populated.',  
ACTIVE = 1,  
SORT_ORDER = 981,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12991;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12992;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12992,'CW 4.0','Hospitalization Id  exceeds allowed length of {0}.',1,982,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12992,  
NAME = 'CW 4.0',  
LABEL = 'Hospitalization Id  exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 982,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12992;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12993;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12993,'CW 4.0','Hospital Name exceeds allowed length of {0}.',1,983,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12993,  
NAME = 'CW 4.0',  
LABEL = 'Hospital Name exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 983,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12993;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12994;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12994,'CW 4.0','Other Admission Diagnosis exceeds allowed length of {0}.',1,984,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12994,  
NAME = 'CW 4.0',  
LABEL = 'Other Admission Diagnosis exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 984,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12994;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12995;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12995,'CW 4.0','When Admission Diagnosis field is ''''Other'''', then Other Admission Diagnosis field must have a value.',1,985,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12995,  
NAME = 'CW 4.0',  
LABEL = 'When Admission Diagnosis field is ''''Other'''', then Other Admission Diagnosis field must have a value.',  
ACTIVE = 1,  
SORT_ORDER = 985,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12995;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12996;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12996,'CW 4.0','When Source of Admission Information field is ''''Other'''', then Other Source of Admission Information field must have a value.',1,986,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12996,  
NAME = 'CW 4.0',  
LABEL = 'When Source of Admission Information field is ''''Other'''', then Other Source of Admission Information field must have a value.',  
ACTIVE = 1,  
SORT_ORDER = 986,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12996;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12997;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12997,'CW 4.0','Other Source of Admission Information exceeds allowed length of {0}.',1,987,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12997,  
NAME = 'CW 4.0',  
LABEL = 'Other Source of Admission Information exceeds allowed length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 987,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12997;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12999;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12999,'CW 4.0','Reason no Influenza Vaccination cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',0,989,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12999,  
NAME = 'CW 4.0',  
LABEL = 'Reason no Influenza Vaccination cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 0,  
SORT_ORDER = 989,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12999;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13000;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13000,'CW 4.0','Influenza Exclusion Reason cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',0,990,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13000,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Exclusion Reason cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 0,  
SORT_ORDER = 990,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13000;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13001;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13001,'CW 4.0','Reason no Influenza Vaccination is mandatory when Influenza Vaccination Not Received is checked. Select N/A if it was not recorded.',1,991,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13001,  
NAME = 'CW 4.0',  
LABEL = 'Reason no Influenza Vaccination is mandatory when Influenza Vaccination Not Received is checked. Select N/A if it was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 991,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13001;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13002;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13002,'CW 4.0','Influenza Exclusion Reason is mandatory when Reason No Influenza Vaccination is Medical Reason(s) or Patient Reason(s). Select N/A if the Exclusion Reason was not recorded.',1,992,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13002,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Exclusion Reason is mandatory when Reason No Influenza Vaccination is Medical Reason(s) or Patient Reason(s). Select N/A if the Exclusion Reason was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 992,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13002;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13003;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13003,'CW 4.0','Influenza Vaccination Date is mandatory when Influenza Vaccination Not Received is not checked and Influenza Vaccination Date N/A value is not populated.',1,993,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13003,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date is mandatory when Influenza Vaccination Not Received is not checked and Influenza Vaccination Date N/A value is not populated.',  
ACTIVE = 1,  
SORT_ORDER = 993,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13003;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13005;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13005,'CW 4.0','Influenza Vaccination Date cannot be a future date.',1,995,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13005,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 995,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13005;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13006;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13006,'CW 4.0','Influenza Vaccination Date must be on or after 01/01/1973.',1,996,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13006,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 996,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13006;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13007;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13007,'CW 4.0','Influenza Vaccination Date cannot be prior to the patient''''s Date of Birth ({0}).',1,997,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13007,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 997,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13007;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13008;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13008,'CW 4.0','Influenza Vaccination Date cannot be after the patient''''s Date of Death ({0}).',1,998,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13008,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 998,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13008;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13009;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13009,'CW 4.0','Influenza Vaccination Date must be a valid date.',1,999,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13009,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 999,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13009;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13010;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13010,'CW 4.0','Date Patient Education on Sodium Restriction is mandatory when Education on Sodium Restriction Not Received is not checked.',1,1000,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13010,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction is mandatory when Education on Sodium Restriction Not Received is not checked.',  
ACTIVE = 1,  
SORT_ORDER = 1000,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13010;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13011;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13011,'CW 4.0','Date Patient Education on Sodium Restriction cannot be populated when Education on Sodium Restriction Not Received is set to ''''True''''',1,1001,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13011,  
NAME = 'CW 4.0',  
LABEL = 'Date Patient Education on Sodium Restriction cannot be populated when Education on Sodium Restriction Not Received is set to ''''True''''',  
ACTIVE = 1,  
SORT_ORDER = 1001,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13011;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13012;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13012,'CW 4.0','Pneumococcal Vaccination Not Received and Pneumococcal Vaccination Year are populated. Please submit the data or not received data.',1,1002,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13012,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Not Received and Pneumococcal Vaccination Year are populated. Please submit the data or not received data.',  
ACTIVE = 1,  
SORT_ORDER = 1002,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13012;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13013;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13013,'CW 4.0','Reason No Pneumococcal Vaccination cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''',0,1003,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13013,  
NAME = 'CW 4.0',  
LABEL = 'Reason No Pneumococcal Vaccination cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''',  
ACTIVE = 0,  
SORT_ORDER = 1003,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13013;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13014;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13014,'CW 4.0','Pneumococcal Exclusion Reason cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''',0,1004,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13014,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Exclusion Reason cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''',  
ACTIVE = 0,  
SORT_ORDER = 1004,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13014;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13015;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13015,'CW 4.0','Reason No Pneumococcal Vaccination is mandatory when Pneumococcal Vaccination Not Received is checked. Select N/A if it was not recorded.',1,1005,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13015,  
NAME = 'CW 4.0',  
LABEL = 'Reason No Pneumococcal Vaccination is mandatory when Pneumococcal Vaccination Not Received is checked. Select N/A if it was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 1005,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13015;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13016;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13016,'CW 4.0','Pneumococcal Exclusion Reason is mandatory when Reason No Pneumococcal Vaccination is Medical Reason(s) or Patient Reason(s). Select N/A if Exclusion Reason was not recorded.',1,1006,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13016,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Exclusion Reason is mandatory when Reason No Pneumococcal Vaccination is Medical Reason(s) or Patient Reason(s). Select N/A if Exclusion Reason was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 1006,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13016;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13017;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13017,'CW 4.0','Pneumococcal Vaccination Not Received is mandatory when Pneumococcal Vaccination Year and Pneumococcal Vaccination Year N/A are not populated.',1,1007,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13017,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Not Received is mandatory when Pneumococcal Vaccination Year and Pneumococcal Vaccination Year N/A are not populated.',  
ACTIVE = 1,  
SORT_ORDER = 1007,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13017;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13018;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13018,'CW 4.0','Pneumococcal Vaccination Year cannot be a future year.',1,1008,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13018,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Year cannot be a future year.',  
ACTIVE = 1,  
SORT_ORDER = 1008,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13018;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13019;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13019,'CW 4.0','Pneumococcal Vaccination Year must be on or after 1973.',1,1009,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13019,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Year must be on or after 1973.',  
ACTIVE = 1,  
SORT_ORDER = 1009,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13019;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13020;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13020,'CW 4.0','Pneumococcal Vaccination Year cannot be prior to the patient''''s year of Birth ({0}).',1,1010,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13020,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Year cannot be prior to the patient''''s year of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1010,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13020;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13021;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13021,'CW 4.0','Pneumococcal Vaccination Year cannot be after the patient''''s year of Death ({0}).',1,1011,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13021,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Year cannot be after the patient''''s year of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 1011,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13021;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13022;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13022,'CW 4.0','Pneumococcal Vaccination Year must be a valid year.',1,1012,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13022,  
NAME = 'CW 4.0',  
LABEL = 'Pneumococcal Vaccination Year must be a valid year.',  
ACTIVE = 1,  
SORT_ORDER = 1012,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13022;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13024;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13024,'CW 4.0','Reason No Hepatitis B Vaccination cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',0,1014,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13024,  
NAME = 'CW 4.0',  
LABEL = 'Reason No Hepatitis B Vaccination cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 0,  
SORT_ORDER = 1014,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13024;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13025;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13025,'CW 4.0','Hepatitis B Exclusion Reasons cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',0,1015,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13025,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Exclusion Reasons cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 0,  
SORT_ORDER = 1015,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13025;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13026;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13026,'CW 4.0','Reason No Hepatitis B Vaccination is mandatory when Hepatitis B Vaccination Not Received is checked. Select N/A if it was not recorded.',1,1016,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13026,  
NAME = 'CW 4.0',  
LABEL = 'Reason No Hepatitis B Vaccination is mandatory when Hepatitis B Vaccination Not Received is checked. Select N/A if it was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 1016,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13026;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13027;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13027,'CW 4.0','Hepatitis B Exclusion Reason is mandatory when Reason No Hepatitis B Immunization is Medical Reason(s) or Patient Reason(s). Select N/A if Exclusion Reason was not recorded.',1,1017,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13027,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Exclusion Reason is mandatory when Reason No Hepatitis B Immunization is Medical Reason(s) or Patient Reason(s). Select N/A if Exclusion Reason was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 1017,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13027;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13028;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13028,'CW 4.0','Hepatitis B (HBsAg) Test Date must be a valid date.',0,1018,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13028,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 1018,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13028;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13029;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13029,'CW 4.0','Hepatitis B (HBsAg) Test Date cannot be a future date.',0,1019,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13029,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date cannot be a future date.',  
ACTIVE = 0,  
SORT_ORDER = 1019,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13029;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13030;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13030,'CW 4.0','Hepatitis B (HBsAg) Test Date  must be on or after 01/01/1973.',0,1020,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13030,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date  must be on or after 01/01/1973.',  
ACTIVE = 0,  
SORT_ORDER = 1020,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13030;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13031;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13031,'CW 4.0','Hepatitis B (HBsAg) Test Date cannot be prior to the patient''''s Date of Birth ({0}).',0,1021,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13031,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 1021,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13031;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13032;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13032,'CW 4.0','Hepatitis B (HBsAg) Test Date cannot be after the patient''''s Date of Death ({0}).',0,1022,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13032,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 0,  
SORT_ORDER = 1022,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13032;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13033;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13033,'CW 4.0','Hepatitis B (HBsAg) Test Date is mandatory when Hepatitis B Test Type (HBsAg) is populated.',0,1023,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13033,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B (HBsAg) Test Date is mandatory when Hepatitis B Test Type (HBsAg) is populated.',  
ACTIVE = 0,  
SORT_ORDER = 1023,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13033;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13034;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13034,'CW 4.0','Hepatitis B Test Type (HBsAg) is mandatory when Hepatitis B (HBsAg) Test date is populated.',0,1024,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13034,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Test Type (HBsAg) is mandatory when Hepatitis B (HBsAg) Test date is populated.',  
ACTIVE = 0,  
SORT_ORDER = 1024,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13034;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13035;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13035,'CW 4.0','Other Hepatitis B Test Type is mandatory when Hepatitis B Test Type (HBsAg) is Other.',0,1025,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13035,  
NAME = 'CW 4.0',  
LABEL = 'Other Hepatitis B Test Type is mandatory when Hepatitis B Test Type (HBsAg) is Other.',  
ACTIVE = 0,  
SORT_ORDER = 1025,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13035;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13036;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13036,'CW 4.0','Other Hepatitis B Test Type exceeds allowed length of {0}.',0,1026,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13036,  
NAME = 'CW 4.0',  
LABEL = 'Other Hepatitis B Test Type exceeds allowed length of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 1026,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13036;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13547;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13547,'CW4.3','Patient cannot have Clinical Data and be flagged as having No Clinical Data Available.',1,13547,1,1,0,to_date('03-APR-13','DD-MON-RR'),to_date('03-APR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13547,  
NAME = 'CW4.3',  
LABEL = 'Patient cannot have Clinical Data and be flagged as having No Clinical Data Available.',  
ACTIVE = 1,  
SORT_ORDER = 13547,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-APR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('03-APR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13547;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13548;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13548,'CW4.3','Patient Clinical Data exists. Cannot flag patient as having No Clinical Data Available.',1,13548,1,1,0,to_date('03-APR-13','DD-MON-RR'),to_date('03-APR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13548,  
NAME = 'CW4.3',  
LABEL = 'Patient Clinical Data exists. Cannot flag patient as having No Clinical Data Available.',  
ACTIVE = 1,  
SORT_ORDER = 13548,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-APR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('03-APR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13548;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13549;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13549,'CW4.3','Patient has already been flagged as having No Clinical Data Available for all Collection Types. Cannot update Clinical Data.',1,13549,1,1,0,to_date('03-APR-13','DD-MON-RR'),to_date('03-APR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13549,  
NAME = 'CW4.3',  
LABEL = 'Patient has already been flagged as having No Clinical Data Available for all Collection Types. Cannot update Clinical Data.',  
ACTIVE = 1,  
SORT_ORDER = 13549,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-APR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('03-APR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13549;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13546;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13546,'CW4.3','Patient must either have Clinical Data or be flagged as having No Clinical Data Available.',1,13546,1,1,0,to_date('03-APR-13','DD-MON-RR'),to_date('03-APR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13546,  
NAME = 'CW4.3',  
LABEL = 'Patient must either have Clinical Data or be flagged as having No Clinical Data Available.',  
ACTIVE = 1,  
SORT_ORDER = 13546,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-APR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('03-APR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13546;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12080;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12080,'CW 4.4','Admission Date and Hospitalization Section N/A value are both populated. Please submit only one value.',0,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12080,  
NAME = 'CW 4.4',  
LABEL = 'Admission Date and Hospitalization Section N/A value are both populated. Please submit only one value.',  
ACTIVE = 0,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12080;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11354;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11354,'CW 4.4','Valid range for Sessions Per Week is 1.0 - 7.0.',1,11354,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11354,  
NAME = 'CW 4.4',  
LABEL = 'Valid range for Sessions Per Week is 1.0 - 7.0.',  
ACTIVE = 1,  
SORT_ORDER = 11354,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11354;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13423;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13423,'CW 4.0','Kt/V Date is mandatory when Pre-Dialysis Weight is populated.',0,1144,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13423,  
NAME = 'CW 4.0',  
LABEL = 'Kt/V Date is mandatory when Pre-Dialysis Weight is populated.',  
ACTIVE = 0,  
SORT_ORDER = 1144,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13423;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12048;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12048,'CW 4.4','Hospitalization data and Hospitalization Section N/A are both populated for this patient. Please submit either the data or Hospitalization Section N/A.',1,1224,2,1,0,to_date('18-NOV-13','DD-MON-RR'),to_date('18-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12048,  
NAME = 'CW 4.4',  
LABEL = 'Hospitalization data and Hospitalization Section N/A are both populated for this patient. Please submit either the data or Hospitalization Section N/A.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('18-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('18-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12048;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11355;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11355,'CW 4.4','Valid range for Time Per Session is 60 - 600.',1,11355,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11355,  
NAME = 'CW 4.4',  
LABEL = 'Valid range for Time Per Session is 60 - 600.',  
ACTIVE = 1,  
SORT_ORDER = 11355,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11355;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11356;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11356,'CW 4.4','Patient''''s First Name is required.',1,11356,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11356,  
NAME = 'CW 4.4',  
LABEL = 'Patient''''s First Name is required.',  
ACTIVE = 1,  
SORT_ORDER = 11356,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11356;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11358;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11358,'CW 4.4','Admit Date is a required field.',1,11358,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11358,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 11358,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11358;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11360;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11360,'CW 4.4','Gender is a required field.',1,11360,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11360,  
NAME = 'CW 4.4',  
LABEL = 'Gender is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 11360,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11360;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11361;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11361,'CW 4.4','Admit Reason is a required field.',1,11361,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11361,  
NAME = 'CW 4.4',  
LABEL = 'Admit Reason is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 11361,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11361;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11362;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11362,'CW 4.4','Discharge Date must be after 01/01/1850.',0,11362,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11362,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11362,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11362;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11363;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11363,'CW 4.4','Admit Date must be a valid date.',0,11363,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11363,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 11363,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11363;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11364;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11364,'CW 4.4','Submit Date must be a valid date.',1,11364,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11364,  
NAME = 'CW 4.4',  
LABEL = 'Submit Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11364,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11364;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11365;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11365,'CW 4.4','Submit Date must be after 01/01/1850.',1,11365,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11365,  
NAME = 'CW 4.4',  
LABEL = 'Submit Date must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11365,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11365;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11366;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11366,'CW 4.4','Admit Date must be a valid date.',0,11366,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11366,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 11366,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11366;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11367;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11367,'CW 4.4','Admit Date must be after 01/01/1850.',0,11367,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11367,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11367,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11367;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12079;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12079,'CW 4.4','Hospital Name value and Hospitalization Section N/A value are both populated. Please submit only one value.',0,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12079,  
NAME = 'CW 4.4',  
LABEL = 'Hospital Name value and Hospitalization Section N/A value are both populated. Please submit only one value.',  
ACTIVE = 0,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12079;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12078;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12078,'CW 4.4','All Hospital Visits value and Hospitalization Section N/A value are both populated. Please submit only one value.',0,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12078,  
NAME = 'CW 4.4',  
LABEL = 'All Hospital Visits value and Hospitalization Section N/A value are both populated. Please submit only one value.',  
ACTIVE = 0,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12078;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12077;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12077,'CW 4.4','Discharge Date and Hospitalization Section N/A value are both populated. Please submit only one value.',0,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12077,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date and Hospitalization Section N/A value are both populated. Please submit only one value.',  
ACTIVE = 0,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12077;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12076;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12076,'CW 4.4','Admission Date is mandatory. Select N/A if Admission Date was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12076,  
NAME = 'CW 4.4',  
LABEL = 'Admission Date is mandatory. Select N/A if Admission Date was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12076;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12075;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12075,'CW 4.4','Admission Date and Admission Date N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12075,  
NAME = 'CW 4.4',  
LABEL = 'Admission Date and Admission Date N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12075;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12074;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12074,'CW 4.4','All Hospital Visits is mandatory. Select N/A if All Hospital Visits was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12074,  
NAME = 'CW 4.4',  
LABEL = 'All Hospital Visits is mandatory. Select N/A if All Hospital Visits was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12074;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12073;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12073,'CW 4.4','All Hospital Visits value and All Hospital Visits N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12073,  
NAME = 'CW 4.4',  
LABEL = 'All Hospital Visits value and All Hospital Visits N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12073;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12072;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12072,'CW 4.4','Hospital Name is mandatory. Select N/A if Hospital Name was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12072,  
NAME = 'CW 4.4',  
LABEL = 'Hospital Name is mandatory. Select N/A if Hospital Name was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12072;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12071;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12071,'CW 4.4','Hospital Name value and Hospital Name N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12071,  
NAME = 'CW 4.4',  
LABEL = 'Hospital Name value and Hospital Name N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12071;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12070;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12070,'CW 4.4','Discharge Date is mandatory. Select N/A if Discharge Date was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12070,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date is mandatory. Select N/A if Discharge Date was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12070;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12069;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12069,'CW 4.4','Discharge Date and Discharge Date N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12069,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date and Discharge Date N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12069;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12032;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12032,'CW 4.4','Hospitalization Section N/A is mandatory when a Hospitalization event is not recorded for the patient.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12032,  
NAME = 'CW 4.4',  
LABEL = 'Hospitalization Section N/A is mandatory when a Hospitalization event is not recorded for the patient.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12032;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11368;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11368,'CW 4.4','Discharge Date must be a valid date.',0,11368,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11368,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 11368,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11368;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11369;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11369,'CW 4.4','Discharge Date must be after 01/01/1850.',0,11369,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11369,  
NAME = 'CW 4.4',  
LABEL = 'Discharge Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11369,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11369;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11370;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11370,'CW 4.4','Facility CCN and Facility DBA Name are required.',1,11370,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11370,  
NAME = 'CW 4.4',  
LABEL = 'Facility CCN and Facility DBA Name are required.',  
ACTIVE = 1,  
SORT_ORDER = 11370,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11370;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11371;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11371,'CW 4.4','Transfer Discharge Subcategory is not populated.',0,11371,1,1,1,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11371,  
NAME = 'CW 4.4',  
LABEL = 'Transfer Discharge Subcategory is not populated.',  
ACTIVE = 0,  
SORT_ORDER = 11371,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11371;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11372;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11372,'CW 4.4','Cannot delete the discharge information.',1,11372,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11372,  
NAME = 'CW 4.4',  
LABEL = 'Cannot delete the discharge information.',  
ACTIVE = 1,  
SORT_ORDER = 11372,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11372;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11373;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11373,'CW 4.4','Admit Date is required.',1,11373,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11373,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date is required.',  
ACTIVE = 1,  
SORT_ORDER = 11373,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11373;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11374;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11374,'CW 4.4','Please enter a valid date in mm/dd/yyyy format',1,11374,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11374,  
NAME = 'CW 4.4',  
LABEL = 'Please enter a valid date in mm/dd/yyyy format',  
ACTIVE = 1,  
SORT_ORDER = 11374,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11374;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11375;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11375,'CW 4.4','Submit Date must be a valid date',1,11375,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11375,  
NAME = 'CW 4.4',  
LABEL = 'Submit Date must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11375,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11375;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11376;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11376,'CW 4.4','Submit Date must be after 01/01/1850',1,11376,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11376,  
NAME = 'CW 4.4',  
LABEL = 'Submit Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11376,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11376;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11378;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11378,'CW 4.4','Date of Citizenship must be a valid date',1,11378,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11378,  
NAME = 'CW 4.4',  
LABEL = 'Date of Citizenship must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11378,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11378;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11379;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11379,'CW 4.4','Date of Citizenship must be after 01/01/1850',1,11379,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11379,  
NAME = 'CW 4.4',  
LABEL = 'Date of Citizenship must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11379,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11379;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11380;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11380,'CW 4.4','Date of Medicare Enrollment must be a valid date',1,11380,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11380,  
NAME = 'CW 4.4',  
LABEL = 'Date of Medicare Enrollment must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11380,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11380;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11381;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11381,'CW 4.4','Date of Medicare Enrollment must be after 01/01/1850',0,11381,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11381,  
NAME = 'CW 4.4',  
LABEL = 'Date of Medicare Enrollment must be after 01/01/1850',  
ACTIVE = 0,  
SORT_ORDER = 11381,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11381;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11382;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11382,'CW 4.4','Date of Employment must be a valid date',1,11382,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11382,  
NAME = 'CW 4.4',  
LABEL = 'Date of Employment must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11382,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11382;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11383;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11383,'CW 4.4','Date of Employment must be after 01/01/1850',1,11383,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11383,  
NAME = 'CW 4.4',  
LABEL = 'Date of Employment must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11383,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11383;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11384;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11384,'CW 4.4','Date of School must be a valid date',1,11384,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11384,  
NAME = 'CW 4.4',  
LABEL = 'Date of School must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11384,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11384;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11385;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11385,'CW 4.4','Date of School must be after 01/01/1850',1,11385,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11385,  
NAME = 'CW 4.4',  
LABEL = 'Date of School must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11385,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11385;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11386;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11386,'CW 4.4','Date of Vocational Rehabilitation must be a valid date',1,11386,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11386,  
NAME = 'CW 4.4',  
LABEL = 'Date of Vocational Rehabilitation must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11386,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11386;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11387;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11387,'CW 4.4','Date of Vocational Rehabilitation must be after 01/01/1850',1,11387,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11387,  
NAME = 'CW 4.4',  
LABEL = 'Date of Vocational Rehabilitation must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11387,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11387;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11388;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11388,'CW 4.4','Effective Date must be a valid date',0,11388,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11388,  
NAME = 'CW 4.4',  
LABEL = 'Effective Date must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11388,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11388;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11333;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11333,'CW 4.4','Admit Date must be a valid date.',1,11333,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11333,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11333,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11333;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11334;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11334,'CW 4.4','Admit Date must be after 01/01/1850.',0,11334,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11334,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11334,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11334;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11335;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11335,'CW 4.4','Date of Birth must be a valid date.',1,11335,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11335,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11335,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11335;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11336;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11336,'CW 4.4','Date of Birth must be after 01/01/1850.',0,11336,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11336,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11336,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11336;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11337;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11337,'CW 4.4','The Override box must be checked in order to Admit the patient.',1,11337,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11337,  
NAME = 'CW 4.4',  
LABEL = 'The Override box must be checked in order to Admit the patient.',  
ACTIVE = 1,  
SORT_ORDER = 11337,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11337;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11338;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11338,'CW 4.4','Illegal system state, Please start over again.',1,11338,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11338,  
NAME = 'CW 4.4',  
LABEL = 'Illegal system state, Please start over again.',  
ACTIVE = 1,  
SORT_ORDER = 11338,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11338;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11340;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11340,'CW 4.4','Date of Birth must be after 01/01/1850.',1,11340,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11340,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11340,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11340;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11341;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11341,'CW 4.4','Admit Date must be a valid date.',0,11341,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11341,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be a valid date.',  
ACTIVE = 0,  
SORT_ORDER = 11341,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11341;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11342;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11342,'CW 4.4','Admit Date must be after 01/01/1850.',0,11342,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11342,  
NAME = 'CW 4.4',  
LABEL = 'Admit Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11342,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11342;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11343;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11343,'CW 4.4','Dialysis Training Begin Date must be a valid date.',1,11343,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11343,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training Begin Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11343,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11343;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11344;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11344,'CW 4.4','Dialysis Training Begin Date must be after 01/01/1850.',0,11344,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11344,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training Begin Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11344,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11344;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11345;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11345,'CW 4.4','Treatment Start Date must be a valid date.',1,11345,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11345,  
NAME = 'CW 4.4',  
LABEL = 'Treatment Start Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11345,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11345;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11347;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11347,'CW 4.4','Transplant Date must be a valid date.',1,11347,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11347,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11347,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11347;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11348;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11348,'CW 4.4','Transplant Date must be after 01/01/1850.',0,11348,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11348,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11348,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11348;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11349;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11349,'CW 4.4','Date Patient Admitted for Transplant must be a valid date.',1,11349,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11349,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11349,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11349;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11350;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11350,'CW 4.4','Date Patient Admitted for Transplant must be after 01/01/1850.',0,11350,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11350,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be after 01/01/1850.',  
ACTIVE = 0,  
SORT_ORDER = 11350,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11350;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11351;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11351,'CW 4.4','Transient phone area code must be three digits.',1,11351,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11351,  
NAME = 'CW 4.4',  
LABEL = 'Transient phone area code must be three digits.',  
ACTIVE = 1,  
SORT_ORDER = 11351,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11351;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11352;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11352,'CW 4.4','Transient phone number must be in the ###-#### format.',1,11352,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11352,  
NAME = 'CW 4.4',  
LABEL = 'Transient phone number must be in the ###-#### format.',  
ACTIVE = 1,  
SORT_ORDER = 11352,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11352;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11353;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11353,'CW 4.4','Transient phone number is incomplete.',1,11353,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11353,  
NAME = 'CW 4.4',  
LABEL = 'Transient phone number is incomplete.',  
ACTIVE = 1,  
SORT_ORDER = 11353,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11353;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11389;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11389,'CW 4.4','Effective Date must be on or after 1/1/1973.',1,11389,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('16-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11389,  
NAME = 'CW 4.4',  
LABEL = 'Effective Date must be on or after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 11389,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11389;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11390;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11390,'CW 4.4','Date of Death must be a valid date',1,11390,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11390,  
NAME = 'CW 4.4',  
LABEL = 'Date of Death must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11390,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11390;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11391;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11391,'CW 4.4','Date Regular Chronic Dialysis Began must be a valid date',0,11391,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11391,  
NAME = 'CW 4.4',  
LABEL = 'Date Regular Chronic Dialysis Began must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11391,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11391;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11392;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11392,'CW 4.4','Date of Regular Chronic Dialysis Began must be after 01/01/1850',1,11392,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11392,  
NAME = 'CW 4.4',  
LABEL = 'Date of Regular Chronic Dialysis Began must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11392,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11392;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20058;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20058,'CW 4.0','Antibiotic Name is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy is Prescribed.',1,1225,1,1,0,to_date('25-JUL-13','DD-MON-RR'),to_date('25-JUL-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20058,  
NAME = 'CW 4.0',  
LABEL = 'Antibiotic Name is mandatory when Outpatient Antibiotics Administered is Antibiotic Therapy is Prescribed.',  
ACTIVE = 1,  
SORT_ORDER = 1225,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('25-JUL-13','DD-MON-RR'),  
UPDATE_TIME = to_date('25-JUL-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20058;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11327;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11327,'CW4.3','Cannot select No Clinical Data Unavailable flag and have clinical labs for Clinical Month/Year [{0}].',1,13561,1,1,0,to_date('19-MAR-13','DD-MON-RR'),to_date('19-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11327,  
NAME = 'CW4.3',  
LABEL = 'Cannot select No Clinical Data Unavailable flag and have clinical labs for Clinical Month/Year [{0}].',  
ACTIVE = 1,  
SORT_ORDER = 13561,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-MAR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11327;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20059;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20059,'CW 4.0','Blood Culture Date is mandatory when Blood Culture Result is populated.',1,1227,1,1,0,to_date('25-JUL-13','DD-MON-RR'),to_date('25-JUL-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20059,  
NAME = 'CW 4.0',  
LABEL = 'Blood Culture Date is mandatory when Blood Culture Result is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1227,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('25-JUL-13','DD-MON-RR'),  
UPDATE_TIME = to_date('25-JUL-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20059;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20057;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20057,'CW4.1','{0} is an invalid value for {1}.  The valid values are {2}.',1,13546,1,1,0,to_date('25-JUL-13','DD-MON-RR'),to_date('25-JUL-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20057,  
NAME = 'CW4.1',  
LABEL = '{0} is an invalid value for {1}.  The valid values are {2}.',  
ACTIVE = 1,  
SORT_ORDER = 13546,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('25-JUL-13','DD-MON-RR'),  
UPDATE_TIME = to_date('25-JUL-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20057;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20056;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20056,'CW 4.0','Indicate Organism(s) of Positive Culture is mandatory when Blood Culture Result is Positive Culture.',1,1225,1,1,0,to_date('25-JUL-13','DD-MON-RR'),to_date('25-JUL-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20056,  
NAME = 'CW 4.0',  
LABEL = 'Indicate Organism(s) of Positive Culture is mandatory when Blood Culture Result is Positive Culture.',  
ACTIVE = 1,  
SORT_ORDER = 1225,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('25-JUL-13','DD-MON-RR'),  
UPDATE_TIME = to_date('25-JUL-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20056;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12123;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12123,'CW 4.0','Iron Saturation (TSAT) Date must be on or after 01/01/1973.',1,631,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12123,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 631,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12123;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11393;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11393,'CW 4.4','You cannot add more than {0} citizenship statuses',1,11393,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11393,  
NAME = 'CW 4.4',  
LABEL = 'You cannot add more than {0} citizenship statuses',  
ACTIVE = 1,  
SORT_ORDER = 11393,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11393;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11394;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11394,'CW 4.4','You cannot add more than {0} medicare statuses',1,11394,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11394,  
NAME = 'CW 4.4',  
LABEL = 'You cannot add more than {0} medicare statuses',  
ACTIVE = 1,  
SORT_ORDER = 11394,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11394;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11395;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11395,'CW 4.4','You cannot add more than {0} employment statuses',1,11395,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11395,  
NAME = 'CW 4.4',  
LABEL = 'You cannot add more than {0} employment statuses',  
ACTIVE = 1,  
SORT_ORDER = 11395,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11395;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11396;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11396,'CW 4.4','You cannot add more than {0} school statuses',1,11396,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11396,  
NAME = 'CW 4.4',  
LABEL = 'You cannot add more than {0} school statuses',  
ACTIVE = 1,  
SORT_ORDER = 11396,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11396;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11416;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11416,'CW 4.4','Please enter at least three digits in SSN search field (excluding wildcards) and try again.',1,11416,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11416,  
NAME = 'CW 4.4',  
LABEL = 'Please enter at least three digits in SSN search field (excluding wildcards) and try again.',  
ACTIVE = 1,  
SORT_ORDER = 11416,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11416;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11397;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11397,'CW 4.4','You cannot add more than {0} vocational rehabilitation statuses',1,11397,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11397,  
NAME = 'CW 4.4',  
LABEL = 'You cannot add more than {0} vocational rehabilitation statuses',  
ACTIVE = 1,  
SORT_ORDER = 11397,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11397;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11398;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11398,'CW 4.4','Primary Cause of Death must be completed.',1,11398,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11398,  
NAME = 'CW 4.4',  
LABEL = 'Primary Cause of Death must be completed.',  
ACTIVE = 1,  
SORT_ORDER = 11398,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11398;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12088;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12088,'CW 4.4','Post-Dialysis Target Weight for Session value and Post-Dialysis Target Weight for Session N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12088,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Target Weight for Session value and Post-Dialysis Target Weight for Session N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12088;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12089;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12089,'CW 4.4','Post Dialysis Weight Assessment Date and Post-Dialysis Target Weight for Session N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12089,  
NAME = 'CW 4.4',  
LABEL = 'Post Dialysis Weight Assessment Date and Post-Dialysis Target Weight for Session N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12089;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12082;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12082,'CW 4.4','Post-Dialysis Target Weight for Session N/A cannot be submitted for Peritoneal Dialysis collection type.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12082,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Target Weight for Session N/A cannot be submitted for Peritoneal Dialysis collection type.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12082;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12087;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12087,'CW 4.4','Post-Dialysis Target Weight for Session is mandatory when Post Dialysis Weight Assessment Date is populated.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12087,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Target Weight for Session is mandatory when Post Dialysis Weight Assessment Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12087;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12090;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12090,'CW 4.4','Prescribed Post-Dialysis Target Weight for Session is Not Prescribed Post-Dialysis Target Weight and Post Dialysis Weight Assessment Date is populated. Please remove the date.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12090,  
NAME = 'CW 4.4',  
LABEL = 'Prescribed Post-Dialysis Target Weight for Session is Not Prescribed Post-Dialysis Target Weight and Post Dialysis Weight Assessment Date is populated. Please remove the date.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12090;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12086;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12086,'CW 4.4','Post Dialysis Weight Assessment Date cannot be submitted when the patient is not receiving Hemodialysis at the selected facility.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12086,  
NAME = 'CW 4.4',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be submitted when the patient is not receiving Hemodialysis at the selected facility.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12086;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12085;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12085,'CW 4.4','Post Dialysis Weight Assessment Date cannot be submitted for Peritoneal Dialysis collection type.',1,1224,2,1,0,to_date('07-NOV-13','DD-MON-RR'),to_date('07-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12085,  
NAME = 'CW 4.4',  
LABEL = 'Post Dialysis Weight Assessment Date cannot be submitted for Peritoneal Dialysis collection type.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('07-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12085;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11399;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11399,'CW 4.4','View Patient Details - SUBMITTED',1,11399,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11399,  
NAME = 'CW 4.4',  
LABEL = 'View Patient Details - SUBMITTED',  
ACTIVE = 1,  
SORT_ORDER = 11399,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11399;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11400;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11400,'CW 4.4','The application has thrown an error and your save may not have occurred. Please contact the CROWN Help Desk.',1,11400,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11400,  
NAME = 'CW 4.4',  
LABEL = 'The application has thrown an error and your save may not have occurred. Please contact the CROWN Help Desk.',  
ACTIVE = 1,  
SORT_ORDER = 11400,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11400;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11403;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11403,'CW 4.4','Only numbers and wildcard allowed for SSN.',1,11403,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11403,  
NAME = 'CW 4.4',  
LABEL = 'Only numbers and wildcard allowed for SSN.',  
ACTIVE = 1,  
SORT_ORDER = 11403,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11403;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11404;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11404,'CW 4.4','Only letters, numbers, ''{'', and wildcard allowed for HICNUM',1,11404,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11404,  
NAME = 'CW 4.4',  
LABEL =  ''{'',  
ACTIVE = 'Only letters, numbers, and wildcard allowed for HICNUM',  
SORT_ORDER = 1,  
CATEGORY = 11404,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = 0,  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11404;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11405;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11405,'CW 4.4','Only numbers allowed for CROWN UPI.',1,11405,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11405,  
NAME = 'CW 4.4',  
LABEL = 'Only numbers allowed for CROWN UPI.',  
ACTIVE = 1,  
SORT_ORDER = 11405,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11405;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11406;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11406,'CW 4.4','Only numbers allowed for SIMS UPI with minimum of 9 digits.',1,11406,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11406,  
NAME = 'CW 4.4',  
LABEL = 'Only numbers allowed for SIMS UPI with minimum of 9 digits.',  
ACTIVE = 1,  
SORT_ORDER = 11406,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11406;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11407;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11407,'CW 4.4','Facility NPI may only contain numeric values and wildcards.',1,11407,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11407,  
NAME = 'CW 4.4',  
LABEL = 'Facility NPI may only contain numeric values and wildcards.',  
ACTIVE = 1,  
SORT_ORDER = 11407,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11407;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12545;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12545,'CW 4.4','ESA Administered is mandatory when ESA Administered Date is populated.',1,12545,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12545,  
NAME = 'CW 4.4',  
LABEL = 'ESA Administered is mandatory when ESA Administered Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12545,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12545;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12546;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12546,'CW 4.4','ESA Administered lab value and ESA Administered N/A value are both populated. Please submit only one value.',1,12546,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12546,  
NAME = 'CW 4.4',  
LABEL = 'ESA Administered lab value and ESA Administered N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12546,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12546;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12547;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12547,'CW 4.4','ESA Administered Date and ESA Administered N/A value are both populated. Please submit only one value.',1,12547,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12547,  
NAME = 'CW 4.4',  
LABEL = 'ESA Administered Date and ESA Administered N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12547,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12547;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12548;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12548,'CW 4.4','ESA Agent Prescribed lab value and ESA Agent Prescribed N/A value are both populated. Please submit only one value.',1,12548,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12548,  
NAME = 'CW 4.4',  
LABEL = 'ESA Agent Prescribed lab value and ESA Agent Prescribed N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12548,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12548;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12549;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12549,'CW 4.4','ESA Monthly Dose is mandatory when ESA Monthly Dose Measurement is populated.',1,12549,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12549,  
NAME = 'CW 4.4',  
LABEL = 'ESA Monthly Dose is mandatory when ESA Monthly Dose Measurement is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12549,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12549;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12550;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12550,'CW 4.4','ESA Monthly Dose lab value and ESA Monthly Dose N/A value are both populated. Please submit only one value.',1,12550,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12550,  
NAME = 'CW 4.4',  
LABEL = 'ESA Monthly Dose lab value and ESA Monthly Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12550,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12550;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12551;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12551,'CW 4.4','ESA Monthly Dose Measurement and ESA Monthly Dose N/A value are both populated. Please submit only one value.',1,12551,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12551,  
NAME = 'CW 4.4',  
LABEL = 'ESA Monthly Dose Measurement and ESA Monthly Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12551,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12551;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12777;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12777,'CW 4.4','ESA Route cannot be provided when ESA Administered is No.',1,12777,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12777,  
NAME = 'CW 4.4',  
LABEL = 'ESA Route cannot be provided when ESA Administered is No.',  
ACTIVE = 1,  
SORT_ORDER = 12777,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12777;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12778;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12778,'CW 4.4','ESA Route cannot be provided when ESA Administered N/A is populated.',1,12778,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12778,  
NAME = 'CW 4.4',  
LABEL = 'ESA Route cannot be provided when ESA Administered N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12778,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12778;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12779;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12779,'CW 4.4','Other ESA Agent Prescribed cannot be provided when ESA Agent Prescribed does not equal Other.',1,12779,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12779,  
NAME = 'CW 4.4',  
LABEL = 'Other ESA Agent Prescribed cannot be provided when ESA Agent Prescribed does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12779,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12779;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12780;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12780,'CW 4.4','Other ESA Agent Prescribed cannot be provided when ESA Agent Prescribed N/A is populated.',1,12780,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12780,  
NAME = 'CW 4.4',  
LABEL = 'Other ESA Agent Prescribed cannot be provided when ESA Agent Prescribed N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12780,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12780;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12781;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12781,'CW 4.4','Other ESA Monthly Dose cannot be provided when ESA Monthly Dose Measurement does not equal Other.',1,12781,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12781,  
NAME = 'CW 4.4',  
LABEL = 'Other ESA Monthly Dose cannot be provided when ESA Monthly Dose Measurement does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12781,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12781;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12782;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12782,'CW 4.4','Other ESA Monthly Dose cannot be provided when ESA Monthly Dose N/A is populated.',1,12782,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12782,  
NAME = 'CW 4.4',  
LABEL = 'Other ESA Monthly Dose cannot be provided when ESA Monthly Dose N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12782,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12782;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13595;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13595,'CW 4.4','ESA Administered Date cannot be provided when ESA Administered is No.',1,13595,2,0,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13595,  
NAME = 'CW 4.4',  
LABEL = 'ESA Administered Date cannot be provided when ESA Administered is No.',  
ACTIVE = 1,  
SORT_ORDER = 13595,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13595;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12059;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12059,'CW 4.4','Oral (PO) Iron Prescribed Date and Oral (PO) Iron Prescribed N/A value are both populated. Please submit only one value.',1,12059,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12059,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Prescribed Date and Oral (PO) Iron Prescribed N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12059,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12059;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12060;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12060,'CW 4.4','Oral (PO) Iron Prescribed value and Oral (PO) Iron Prescribed N/A value are both populated. Please submit only one value.',1,12060,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12060,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Prescribed value and Oral (PO) Iron Prescribed N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12060,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12060;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12061;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12061,'CW 4.4','Oral (PO) Iron Prescribed is mandatory when Oral (PO) Iron Prescribed Date is populated.',1,12061,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12061,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Prescribed is mandatory when Oral (PO) Iron Prescribed Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12061,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12061;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12062;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12062,'CW 4.4','Intravenous (IV) Iron Dose Units of Measure and Intravenous (IV) Iron Dose N/A value are both populated. Please submit only one value.',1,12062,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12062,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Dose Units of Measure and Intravenous (IV) Iron Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12062,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12062;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12063;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12063,'CW 4.4','Intravenous (IV) Iron value and Intravenous (IV) Iron N/A value are both populated. Please submit only one value.',1,12063,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12063,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron value and Intravenous (IV) Iron N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12063,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12063;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12064;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12064,'CW 4.4','Intravenous (IV) Iron Dose is mandatory when Intravenous (IV) Iron Dose Unit of Measure is populated.',1,12064,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12064,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Dose is mandatory when Intravenous (IV) Iron Dose Unit of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12064,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12064;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12065;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12065,'CW 4.4','Intravenous (IV) Iron Dose is mandatory. Select N/A if Intravenous (IV) Iron Dose was not recorded for the patient for the clinical month.',1,12065,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12065,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Dose is mandatory. Select N/A if Intravenous (IV) Iron Dose was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 12065,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12065;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12066;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12066,'CW 4.4','Intravenous (IV) Iron Administered Date and Intravenous (IV) Iron Administered N/A value are both populated. Please submit only one value.',1,12066,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12066,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Administered Date and Intravenous (IV) Iron Administered N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12066,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12066;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12067;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12067,'CW 4.4','Intravenous (IV) Iron Administered value and Intravenous (IV) Iron Administered N/A value are both populated. Please submit only one value.',1,12067,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12067,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Administered value and Intravenous (IV) Iron Administered N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12067,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12067;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12068;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12068,'CW 4.4','Intravenous (IV) Iron Administered is mandatory when Intravenous Iron Administered Date is populated.',1,12068,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12068,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Administered is mandatory when Intravenous Iron Administered Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12068,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12068;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11408;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11408,'CW 4.4','End Date of Birth must be after {0}',1,11408,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11408,  
NAME = 'CW 4.4',  
LABEL = 'End Date of Birth must be after {0}',  
ACTIVE = 1,  
SORT_ORDER = 11408,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11408;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11409;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11409,'CW 4.4','End Date of Death must be after {0}',1,11409,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11409,  
NAME = 'CW 4.4',  
LABEL = 'End Date of Death must be after {0}',  
ACTIVE = 1,  
SORT_ORDER = 11409,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11409;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11410;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11410,'CW 4.4','Date of Birth Begin must be a valid date.',1,11410,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11410,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth Begin must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11410,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11410;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11411;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11411,'CW 4.4','Date of Birth End must be a valid date.',1,11411,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11411,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth End must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11411,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11411;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11412;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11412,'CW 4.4','Date of Death Begin must be a valid date.',1,11412,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11412,  
NAME = 'CW 4.4',  
LABEL = 'Date of Death Begin must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11412,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11412;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11413;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11413,'CW 4.4','Date of Death End must be a valid date.',1,11413,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11413,  
NAME = 'CW 4.4',  
LABEL = 'Date of Death End must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11413,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11413;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11414;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11414,'CW 4.4','No records match search terms entered. Please revise your search criteria and consider using wildcards.',1,11414,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11414,  
NAME = 'CW 4.4',  
LABEL = 'No records match search terms entered. Please revise your search criteria and consider using wildcards.',  
ACTIVE = 1,  
SORT_ORDER = 11414,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11414;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11415;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11415,'CW 4.4','Date range must be equal to or less than 2 years for this search, or additional search criteria must be entered.',1,11415,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11415,  
NAME = 'CW 4.4',  
LABEL = 'Date range must be equal to or less than 2 years for this search, or additional search criteria must be entered.',  
ACTIVE = 1,  
SORT_ORDER = 11415,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11415;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30008;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30008,'CW 4.0','NA reasons are not accepted for {0} and should only be provided while answering the CAHPS Attestation question.  Please remove the NA reasons from {0} and resubmit your file.',0,1221,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30008,  
NAME = 'CW 4.0',  
LABEL = 'NA reasons are not accepted for {0} and should only be provided while answering the CAHPS Attestation question.  Please remove the NA reasons from {0} and resubmit your file.',  
ACTIVE = 0,  
SORT_ORDER = 1221,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30008;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12146;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12146,'CW 4.4','Corrected Calcium is mandatory when Corrected Calcium Date is populated.',1,12146,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12146,  
NAME = 'CW 4.4',  
LABEL = 'Corrected Calcium is mandatory when Corrected Calcium Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12146,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12146;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12147;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12147,'CW 4.4','Corrected Calcium value and Corrected Calcium N/A value are both populated. Please submit only one value.',1,12147,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12147,  
NAME = 'CW 4.4',  
LABEL = 'Corrected Calcium value and Corrected Calcium N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12147,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12147;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12148;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12148,'CW 4.4','Corrected Calcium Date and Corrected Calcium N/A value are both populated. Please submit only one value.',1,12148,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12148,  
NAME = 'CW 4.4',  
LABEL = 'Corrected Calcium Date and Corrected Calcium N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12148,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12148;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12149;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12149,'CW 4.4','Uncorrected Calcium is mandatory when Uncorrected Calcium Date is populated.',1,12149,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12149,  
NAME = 'CW 4.4',  
LABEL = 'Uncorrected Calcium is mandatory when Uncorrected Calcium Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12149,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12149;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12150;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12150,'CW 4.4','Uncorrected Calcium value and Uncorrected Calcium N/A value are both populated. Please submit only one value.',1,12150,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12150,  
NAME = 'CW 4.4',  
LABEL = 'Uncorrected Calcium value and Uncorrected Calcium N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12150,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12150;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12151;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12151,'CW 4.4','Uncorrected Calcium Date and Uncorrected Calcium N/A value are both populated. Please submit only one value.',1,12151,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12151,  
NAME = 'CW 4.4',  
LABEL = 'Uncorrected Calcium Date and Uncorrected Calcium N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12151,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12151;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12152;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12152,'CW 4.4','Phosphorus is mandatory when Phosphorus Date is populated.',1,12152,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12152,  
NAME = 'CW 4.4',  
LABEL = 'Phosphorus is mandatory when Phosphorus Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12152,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12152;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12153;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12153,'CW 4.4','Phosphorus value and Phosphorus N/A value are both populated. Please submit only one value.',1,12153,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12153,  
NAME = 'CW 4.4',  
LABEL = 'Phosphorus value and Phosphorus N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12153,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12153;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12154;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12154,'CW 4.4','Phosphorus Date and Phosphorus N/A value are both populated. Please submit only one value.',1,12154,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12154,  
NAME = 'CW 4.4',  
LABEL = 'Phosphorus Date and Phosphorus N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12154,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12154;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12155;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12155,'CW 4.4','Serum Albumin is mandatory when Serum Albumin Date is populated.',1,12155,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12155,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin is mandatory when Serum Albumin Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12155,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12155;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12156;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12156,'CW 4.4','Serum Albumin value and Serum Albumin N/A value are both populated. Please submit only one value.',1,12156,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12156,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin value and Serum Albumin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12156,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12156;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12157;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12157,'CW 4.4','Serum Albumin Date and Serum Albumin N/A value are both populated. Please submit only one value.',1,12157,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12157,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Date and Serum Albumin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12157,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12157;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12158;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12158,'CW 4.4','Serum Albumin Lower Limit value and Serum Albumin Lower Limit N/A value are both populated. Please submit only one value.',1,12158,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12158,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lower Limit value and Serum Albumin Lower Limit N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12158,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12158;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12159;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12159,'CW 4.4','Serum Albumin Lab Method value and Serum Albumin Lab Method N/A value are both populated. Please submit only one value.',1,12159,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12159,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lab Method value and Serum Albumin Lab Method N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12159,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12159;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12160;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12160,'CW 4.4','Serum Albumin Lower Limit is not applicable when Serum Albumin is N/A.',1,12160,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12160,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lower Limit is not applicable when Serum Albumin is N/A.',  
ACTIVE = 1,  
SORT_ORDER = 12160,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12160;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12161;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12161,'CW 4.4','Serum Albumin Lab Method is not applicable when Serum Albumin is N/A.',1,12161,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12161,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lab Method is not applicable when Serum Albumin is N/A.',  
ACTIVE = 1,  
SORT_ORDER = 12161,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12161;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12162;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12162,'CW 4.4','Serum Albumin Lower Limit is mandatory. Select N/A if Serum Albumin Lower Limit was not recorded for the patient for the clinical month.',1,12162,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12162,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lower Limit is mandatory. Select N/A if Serum Albumin Lower Limit was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 12162,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12162;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12163;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12163,'CW 4.4','Serum Albumin Lab Method is mandatory. Select N/A if Serum Albumin Lab Method was not recorded for the patient for the clinical month.',1,12163,2,0,0,to_date('16-OCT-13','DD-MON-RR'),to_date('16-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12163,  
NAME = 'CW 4.4',  
LABEL = 'Serum Albumin Lab Method is mandatory. Select N/A if Serum Albumin Lab Method was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 12163,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('16-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('16-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12163;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12759;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12759,'CW 4.4','Kt/V Date is mandatory when BUN Pre-Dialysis is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12759,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V Date is mandatory when BUN Pre-Dialysis is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12759;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12760;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12760,'CW 4.4','Kt/V Date is mandatory when BUN Post-Dialysis is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12760,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V Date is mandatory when BUN Post-Dialysis is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12760;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12767;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12767,'CW 4.4','BUN Post-Dialysis value and BUN Post-Dialysis N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12767,  
NAME = 'CW 4.4',  
LABEL = 'BUN Post-Dialysis value and BUN Post-Dialysis N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12767;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12761;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12761,'CW 4.4','Kt/V Date is mandatory when Delivered Minutes of BUN Hemodialysis Session is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12761,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V Date is mandatory when Delivered Minutes of BUN Hemodialysis Session is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12761;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12763;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12763,'CW 4.4','Kt/V value and Kt/V N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12763,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V value and Kt/V N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12763;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12765;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12765,'CW 4.4','Kt/V Method and Kt/V N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12765,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V Method and Kt/V N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12765;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12766;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12766,'CW 4.4','BUN Pre-Dialysis value and BUN Pre-Dialysis N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12766,  
NAME = 'CW 4.4',  
LABEL = 'BUN Pre-Dialysis value and BUN Pre-Dialysis N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12766;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12769;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12769,'CW 4.4','Pre-Dialysis Weight is mandatory when Pre-Dialysis Weight Unit of Measure is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12769,  
NAME = 'CW 4.4',  
LABEL = 'Pre-Dialysis Weight is mandatory when Pre-Dialysis Weight Unit of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12769;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12770;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12770,'CW 4.4','Pre-Dialysis Weight value and Pre-Dialysis Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12770,  
NAME = 'CW 4.4',  
LABEL = 'Pre-Dialysis Weight value and Pre-Dialysis Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12770;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12771;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12771,'CW 4.4','Pre-Dialysis Weight Unit of Measure value and Pre-Dialysis Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12771,  
NAME = 'CW 4.4',  
LABEL = 'Pre-Dialysis Weight Unit of Measure value and Pre-Dialysis Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12771;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12772;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12772,'CW 4.4','Post-Dialysis Weight is mandatory when Post-Dialysis Weight Unit of Measure is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12772,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Weight is mandatory when Post-Dialysis Weight Unit of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12772;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12773;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12773,'CW 4.4','Post-Dialysis Weight value and Post-Dialysis Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12773,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Weight value and Post-Dialysis Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12773;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12774;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12774,'CW 4.4','Post-Dialysis Weight Units of Measure and Post-Dialysis Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12774,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Weight Units of Measure and Post-Dialysis Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12774;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12783;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12783,'CW 4.4','Delivered Minutes of BUN Hemodialysis Session value and Delivered Minutes of BUN Hemodialysis Session N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12783,  
NAME = 'CW 4.4',  
LABEL = 'Delivered Minutes of BUN Hemodialysis Session value and Delivered Minutes of BUN Hemodialysis Session N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12783;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12529;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12529,'CW 4.4','Delivered Minutes of BUN Hemodialysis Session is mandatory. Select N/A if Delivered Minutes of BUN HD Session was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12529,  
NAME = 'CW 4.4',  
LABEL = 'Delivered Minutes of BUN Hemodialysis Session is mandatory. Select N/A if Delivered Minutes of BUN HD Session was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12529;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12775;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12775,'CW 4.4','Serum Creatinine is mandatory when Serum Creatinine Date is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12775,  
NAME = 'CW 4.4',  
LABEL = 'Serum Creatinine is mandatory when Serum Creatinine Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12775;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12746;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12746,'CW 4.4','Serum Creatinine value and Serum Creatinine N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12746,  
NAME = 'CW 4.4',  
LABEL = 'Serum Creatinine value and Serum Creatinine N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12746;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12747;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12747,'CW 4.4','Serum Creatinine Date and Serum Creatinine N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12747,  
NAME = 'CW 4.4',  
LABEL = 'Serum Creatinine Date and Serum Creatinine N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12747;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12748;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12748,'CW 4.4','Height is mandatory. Select N/A if Height was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12748,  
NAME = 'CW 4.4',  
LABEL = 'Height is mandatory. Select N/A if Height was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12748;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12749;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12749,'CW 4.4','Height is mandatory when Height Unit of Measure is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12749,  
NAME = 'CW 4.4',  
LABEL = 'Height is mandatory when Height Unit of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12749;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12757;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12757,'CW 4.4','Height value and Height N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12757,  
NAME = 'CW 4.4',  
LABEL = 'Height value and Height N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12757;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12758;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12758,'CW 4.4','Height Units of Measure and Height N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12758,  
NAME = 'CW 4.4',  
LABEL = 'Height Units of Measure and Height N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12758;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12558;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12558,'CW 4.4','Normalized Protein Catabolic Rate (nPCR) is mandatory when Normalized Protein Catabolic Rate (nPCR) Date is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12558,  
NAME = 'CW 4.4',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) is mandatory when Normalized Protein Catabolic Rate (nPCR) Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12558;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12559;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12559,'CW 4.4','Normalized Protein Catabolic Rate (nPCR) value and Normalized Protein Catabolic Rate (nPCR) N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12559,  
NAME = 'CW 4.4',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) value and Normalized Protein Catabolic Rate (nPCR) N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12559;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11417;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11417,'CW 4.4','SSN entered contains less than 9 digits. Please use wildcard (%) if not searching for an exact 9 digit SSN match.',1,11417,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11417,  
NAME = 'CW 4.4',  
LABEL = 'SSN entered contains less than 9 digits. Please use wildcard (%) if not searching for an exact 9 digit SSN match.',  
ACTIVE = 1,  
SORT_ORDER = 11417,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11417;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13590;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13590,'CW 4.0','Organizational Facility Code is mandatory when Authorized Batch Submitting Organization is populated.',1,13590,1,1,0,to_date('18-SEP-13','DD-MON-RR'),to_date('18-SEP-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13590,  
NAME = 'CW 4.0',  
LABEL = 'Organizational Facility Code is mandatory when Authorized Batch Submitting Organization is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13590,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('18-SEP-13','DD-MON-RR'),  
UPDATE_TIME = to_date('18-SEP-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13590;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12058;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12058,'CW 4.4','Intravenous (IV) Iron Dose value and Intravenous (IV) Iron Dose N/A value are both populated. Please submit only one value.',1,12058,2,0,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12058,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Dose value and Intravenous (IV) Iron Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12058,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12058;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13591;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13591,'CW 4.0','Authorized Batch Submitting Organization is mandatory when Organizational Facility Code is populated.',1,13590,1,1,0,to_date('18-SEP-13','DD-MON-RR'),to_date('18-SEP-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13591,  
NAME = 'CW 4.0',  
LABEL = 'Authorized Batch Submitting Organization is mandatory when Organizational Facility Code is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13590,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('18-SEP-13','DD-MON-RR'),  
UPDATE_TIME = to_date('18-SEP-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13591;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30012;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30012,'CW 4.2','Urine Volume is mandatory. Select N/A if Urine Volume was not recorded for the patient for the clinical month.',1,13549,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30012,  
NAME = 'CW 4.2',  
LABEL = 'Urine Volume is mandatory. Select N/A if Urine Volume was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 13549,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30012;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11418;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11418,'CW 4.4','Please enter at least three digits in HICNUM search field (excluding wildcards) and try again.',1,11418,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11418,  
NAME = 'CW 4.4',  
LABEL = 'Please enter at least three digits in HICNUM search field (excluding wildcards) and try again.',  
ACTIVE = 1,  
SORT_ORDER = 11418,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11418;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11419;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11419,'CW 4.4','HICNUM entered contains less than 9 digits. Please use wildcard (%) if searching for less than 9 digits.',1,11419,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11419,  
NAME = 'CW 4.4',  
LABEL = 'HICNUM entered contains less than 9 digits. Please use wildcard (%) if searching for less than 9 digits.',  
ACTIVE = 1,  
SORT_ORDER = 11419,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11419;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11420;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11420,'CW 4.4','Cannot be longer than 11 characters.',1,11420,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11420,  
NAME = 'CW 4.4',  
LABEL = 'Cannot be longer than 11 characters.',  
ACTIVE = 1,  
SORT_ORDER = 11420,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11420;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11421;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11421,'CW 4.4','Please enter at least three characters in Patient''''s First Name search field (excluding wildcards) and try again.',1,11421,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11421,  
NAME = 'CW 4.4',  
LABEL = 'Please enter at least three characters in Patient''''s First Name search field (excluding wildcards) and try again.',  
ACTIVE = 1,  
SORT_ORDER = 11421,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11421;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12776;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12776,'CW 4.4','Kt/V value and Kt/V N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12776,  
NAME = 'CW 4.4',  
LABEL = 'Kt/V value and Kt/V N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12776;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12554;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12554,'CW 4.4','V Method and Kt/V N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12554,  
NAME = 'CW 4.4',  
LABEL = 'V Method and Kt/V N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12554;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12555;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12555,'CW 4.4','Body Surface Area (BSA) Method value and BSA Method N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12555,  
NAME = 'CW 4.4',  
LABEL = 'Body Surface Area (BSA) Method value and BSA Method N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12555;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12126;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12126,'CW 4.0','Iron Saturation (TSAT) Date cannot be after the patient''''s Date of Death ({0}).',1,634,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12126,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) Date cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 634,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12126;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12119;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12119,'CW 4.0','Iron Saturation (TSAT) is mandatory. Select N/A if Iron Saturation (TSAT) was not recorded for the patient for the clinical month.',1,627,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12119,  
NAME = 'CW 4.0',  
LABEL = 'Iron Saturation (TSAT) is mandatory. Select N/A if Iron Saturation (TSAT) was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 627,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12119;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12556;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12556,'CW 4.4','RRF Assessed in Kt/V value and RRF Assessed in Kt/V N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12556,  
NAME = 'CW 4.4',  
LABEL = 'RRF Assessed in Kt/V value and RRF Assessed in Kt/V N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12556;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12557;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12557,'CW 4.4','Urine Volume value and Urine Volume N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12557,  
NAME = 'CW 4.4',  
LABEL = 'Urine Volume value and Urine Volume N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12557;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12753;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12753,'CW 4.4','Clinic Weight value and Clinic Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12753,  
NAME = 'CW 4.4',  
LABEL = 'Clinic Weight value and Clinic Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12753;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12754;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12754,'CW 4.4','Clinic Weight Units of Measure and Clinic Weight N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12754,  
NAME = 'CW 4.4',  
LABEL = 'Clinic Weight Units of Measure and Clinic Weight N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12754;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12755;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12755,'CW 4.4','Creatinine Clearance is mandatory when Creatinine Clearance Unit of Measure is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12755,  
NAME = 'CW 4.4',  
LABEL = 'Creatinine Clearance is mandatory when Creatinine Clearance Unit of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12755;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12750;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12750,'CW 4.4','Body Surface Area (BSA) Corrected value and BSA Corrected N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12750,  
NAME = 'CW 4.4',  
LABEL = 'Body Surface Area (BSA) Corrected value and BSA Corrected N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12750;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12751;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12751,'CW 4.4','Creatinine Clearance value and Creatinine Clearance N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12751,  
NAME = 'CW 4.4',  
LABEL = 'Creatinine Clearance value and Creatinine Clearance N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12751;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12752;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12752,'CW 4.4','Creatinine Clearance Units of Measure and Creatinine Clearance N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12752,  
NAME = 'CW 4.4',  
LABEL = 'Creatinine Clearance Units of Measure and Creatinine Clearance N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12752;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13593;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13593,'CW 4.4','BSA Corrected is mandatory when Creatinine Clearance is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13593,  
NAME = 'CW 4.4',  
LABEL = 'BSA Corrected is mandatory when Creatinine Clearance is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13593;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13594;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13594,'CW 4.4','Creatinine Clearance and BSA Corrected N/A value are both populated. Please select Yes or No for BSA Corrected.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13594,  
NAME = 'CW 4.4',  
LABEL = 'Creatinine Clearance and BSA Corrected N/A value are both populated. Please select Yes or No for BSA Corrected.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13594;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12756;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12756,'CW 4.4','Clinic Weight is mandatory when Clinical Weight Units of Measure is populated.',1,1224,2,1,0,to_date('31-OCT-13','DD-MON-RR'),to_date('31-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12756,  
NAME = 'CW 4.4',  
LABEL = 'Clinic Weight is mandatory when Clinical Weight Units of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('31-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('31-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12756;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11422;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11422,'CW 4.4','Please enter at least one additional search parameter and try again.',1,11422,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11422,  
NAME = 'CW 4.4',  
LABEL = 'Please enter at least one additional search parameter and try again.',  
ACTIVE = 1,  
SORT_ORDER = 11422,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11422;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11424;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11424,'CW 4.4','Please enter at least one additional search parameter and try again.',1,11424,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11424,  
NAME = 'CW 4.4',  
LABEL = 'Please enter at least one additional search parameter and try again.',  
ACTIVE = 1,  
SORT_ORDER = 11424,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11424;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11426;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11426,'CW 4.4','HICNUM cannot be longer than 11 characters.',1,11426,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11426,  
NAME = 'CW 4.4',  
LABEL = 'HICNUM cannot be longer than 11 characters.',  
ACTIVE = 1,  
SORT_ORDER = 11426,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11426;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11429;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11429,'CW 4.4','Search Results exceed {0}, please narrow the search criteria.',1,11429,1,1,1,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11429,  
NAME = 'CW 4.4',  
LABEL = 'Search Results exceed {0}, please narrow the search criteria.',  
ACTIVE = 1,  
SORT_ORDER = 11429,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11429;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11430;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11430,'CW 4.4','View Patient Details - SUBMITTED',1,11430,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11430,  
NAME = 'CW 4.4',  
LABEL = 'View Patient Details - SUBMITTED',  
ACTIVE = 1,  
SORT_ORDER = 11430,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11430;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11439;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11439,'CW 4.4','Effective Date is a required field for Submission.',1,11439,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11439,  
NAME = 'CW 4.4',  
LABEL = 'Effective Date is a required field for Submission.',  
ACTIVE = 1,  
SORT_ORDER = 11439,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11439;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11440;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11440,'CW 4.4','Primary Cause of Death: description is not valid.',1,11440,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11440,  
NAME = 'CW 4.4',  
LABEL = 'Primary Cause of Death: description is not valid.',  
ACTIVE = 1,  
SORT_ORDER = 11440,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11440;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11443;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11443,'CW 4.4','Only alphas are allowed in MI.',1,11443,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11443,  
NAME = 'CW 4.4',  
LABEL = 'Only alphas are allowed in MI.',  
ACTIVE = 1,  
SORT_ORDER = 11443,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11443;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11444;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11444,'CW 4.4','Home phone area code must be three digits.',1,11444,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11444,  
NAME = 'CW 4.4',  
LABEL = 'Home phone area code must be three digits.',  
ACTIVE = 1,  
SORT_ORDER = 11444,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11444;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11445;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11445,'CW 4.4','Home phone number must be in the ###-#### format.',1,11445,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11445,  
NAME = 'CW 4.4',  
LABEL = 'Home phone number must be in the ###-#### format.',  
ACTIVE = 1,  
SORT_ORDER = 11445,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11445;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11446;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11446,'CW 4.4','Work phone area code must be three digits.',1,11446,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11446,  
NAME = 'CW 4.4',  
LABEL = 'Work phone area code must be three digits.',  
ACTIVE = 1,  
SORT_ORDER = 11446,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11446;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11447;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11447,'CW 4.4','Work phone number must be in the ###-#### format.',1,11447,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11447,  
NAME = 'CW 4.4',  
LABEL = 'Work phone number must be in the ###-#### format.',  
ACTIVE = 1,  
SORT_ORDER = 11447,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11447;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11448;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11448,'CW 4.4','Work phone number extension must be digits.',1,11448,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11448,  
NAME = 'CW 4.4',  
LABEL = 'Work phone number extension must be digits.',  
ACTIVE = 1,  
SORT_ORDER = 11448,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11448;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11449;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11449,'CW 4.4','Cell phone area code must be three digits.',1,11449,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11449,  
NAME = 'CW 4.4',  
LABEL = 'Cell phone area code must be three digits.',  
ACTIVE = 1,  
SORT_ORDER = 11449,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11449;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11450;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11450,'CW 4.4','Cell phone number must be in the ###-#### format.',1,11450,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11450,  
NAME = 'CW 4.4',  
LABEL = 'Cell phone number must be in the ###-#### format.',  
ACTIVE = 1,  
SORT_ORDER = 11450,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11450;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11451;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11451,'CW 4.4','Email Address must be in the valid format.',1,11451,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11451,  
NAME = 'CW 4.4',  
LABEL = 'Email Address must be in the valid format.',  
ACTIVE = 1,  
SORT_ORDER = 11451,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11451;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11452;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11452,'CW 4.4','Only digits and hyphens allowed in SSN.',1,11452,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11452,  
NAME = 'CW 4.4',  
LABEL = 'Only digits and hyphens allowed in SSN.',  
ACTIVE = 1,  
SORT_ORDER = 11452,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11452;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11453;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11453,'CW 4.4','SSN is not in correct format xxx-xx-xxxx.',1,11453,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11453,  
NAME = 'CW 4.4',  
LABEL = 'SSN is not in correct format xxx-xx-xxxx.',  
ACTIVE = 1,  
SORT_ORDER = 11453,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11453;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11454;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11454,'CW 4.4','9-digit SSN must be numeric.',1,11454,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11454,  
NAME = 'CW 4.4',  
LABEL = '9-digit SSN must be numeric.',  
ACTIVE = 1,  
SORT_ORDER = 11454,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11454;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11499;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11499,'CW 4.4','SSN must be 9 digits or 11 characters with digits and hyphens.',1,11499,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11499,  
NAME = 'CW 4.4',  
LABEL = 'SSN must be 9 digits or 11 characters with digits and hyphens.',  
ACTIVE = 1,  
SORT_ORDER = 11499,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11499;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11500;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11500,'CW 4.4','SSN cannot be {0}.',1,11500,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11500,  
NAME = 'CW 4.4',  
LABEL = 'SSN cannot be {0}.',  
ACTIVE = 1,  
SORT_ORDER = 11500,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11500;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11501;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11501,'CW 4.4','SSN cannot be all the same number.',1,11501,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11501,  
NAME = 'CW 4.4',  
LABEL = 'SSN cannot be all the same number.',  
ACTIVE = 1,  
SORT_ORDER = 11501,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11501;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11502;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11502,'CW 4.4','Mailing Zip Code must be 5 digits.',1,11502,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11502,  
NAME = 'CW 4.4',  
LABEL = 'Mailing Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 11502,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11502;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11503;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11503,'CW 4.4','Mailing Zip Code: invalid zip code {0}',1,11503,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11503,  
NAME = 'CW 4.4',  
LABEL = 'Mailing Zip Code: invalid zip code {0}',  
ACTIVE = 1,  
SORT_ORDER = 11503,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11503;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11504;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11504,'CW 4.4','Physical Zip Code must be 5 digits.',1,11504,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11504,  
NAME = 'CW 4.4',  
LABEL = 'Physical Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 11504,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11504;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11505;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11505,'CW 4.4','Physical Zip Code: invalid zip code {0}',1,11505,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11505,  
NAME = 'CW 4.4',  
LABEL = 'Physical Zip Code: invalid zip code {0}',  
ACTIVE = 1,  
SORT_ORDER = 11505,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11505;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11455;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11455,'CW 4.4','Home phone number is incomplete.',1,11455,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11455,  
NAME = 'CW 4.4',  
LABEL = 'Home phone number is incomplete.',  
ACTIVE = 1,  
SORT_ORDER = 11455,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11455;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11456;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11456,'CW 4.4','Work phone number is incomplete.',1,11456,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11456,  
NAME = 'CW 4.4',  
LABEL = 'Work phone number is incomplete.',  
ACTIVE = 1,  
SORT_ORDER = 11456,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11456;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11457;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11457,'CW 4.4','Cell phone number is incomplete.',1,11457,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11457,  
NAME = 'CW 4.4',  
LABEL = 'Cell phone number is incomplete.',  
ACTIVE = 1,  
SORT_ORDER = 11457,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11457;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11459;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11459,'CW 4.4','Citizenship Effective Date must be after 01/01/1850',1,11459,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11459,  
NAME = 'CW 4.4',  
LABEL = 'Citizenship Effective Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11459,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11459;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11460;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11460,'CW 4.4','Date of Medicare Enrollment must be a valid date',1,11460,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11460,  
NAME = 'CW 4.4',  
LABEL = 'Date of Medicare Enrollment must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11460,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11460;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11461;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11461,'CW 4.4','Date of Medicare Enrollment must be after 01/01/1850',1,11461,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11461,  
NAME = 'CW 4.4',  
LABEL = 'Date of Medicare Enrollment must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11461,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11461;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11462;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11462,'CW 4.4','Date of Employment must be a valid date',1,11462,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11462,  
NAME = 'CW 4.4',  
LABEL = 'Date of Employment must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11462,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11462;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11463;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11463,'CW 4.4','Date of Employment must be after 01/01/1850',1,11463,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11463,  
NAME = 'CW 4.4',  
LABEL = 'Date of Employment must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11463,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11463;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11464;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11464,'CW 4.4','Date of School must be a valid date',1,11464,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11464,  
NAME = 'CW 4.4',  
LABEL = 'Date of School must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11464,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11464;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11465;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11465,'CW 4.4','Date of School  must be after 01/01/1850',1,11465,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11465,  
NAME = 'CW 4.4',  
LABEL = 'Date of School  must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11465,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11465;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11466;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11466,'CW 4.4','Date of Vocational Rehabilitation must be a valid date',1,11466,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11466,  
NAME = 'CW 4.4',  
LABEL = 'Date of Vocational Rehabilitation must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11466,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11466;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11467;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11467,'CW 4.4','Date of Vocational Rehabilitation  must be after 01/01/1850',1,11467,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11467,  
NAME = 'CW 4.4',  
LABEL = 'Date of Vocational Rehabilitation  must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11467,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11467;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20060;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20060,'CW 4.3.1','Name of Enrolled/Principal Tribe was not updated because the Race value did not correspond to the Name of Enrolled/Principal Tribe.',1,1228,1,1,0,to_date('26-SEP-13','DD-MON-RR'),to_date('26-SEP-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20060,  
NAME = 'CW 4.3.1',  
LABEL = 'Name of Enrolled/Principal Tribe was not updated because the Race value did not correspond to the Name of Enrolled/Principal Tribe.',  
ACTIVE = 1,  
SORT_ORDER = 1228,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-SEP-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-SEP-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20060;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20061;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20061,'CW 4.3.1','Country/Area of Origin was not updated because the Race or Ethnicity value did not correspond to the Country/Area of Origin.',1,1228,1,1,0,to_date('26-SEP-13','DD-MON-RR'),to_date('26-SEP-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20061,  
NAME = 'CW 4.3.1',  
LABEL = 'Country/Area of Origin was not updated because the Race or Ethnicity value did not correspond to the Country/Area of Origin.',  
ACTIVE = 1,  
SORT_ORDER = 1228,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-SEP-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-SEP-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20061;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11468;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11468,'CW 4.4','Effective Date must be a valid date',1,11468,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11468,  
NAME = 'CW 4.4',  
LABEL = 'Effective Date must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11468,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11468;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20112;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20112,'CW4.4','{0} was not updated because a submitted 2728 exists for this patient.',1,20112,1,1,1,to_date('29-JAN-14','DD-MON-RR'),to_date('29-JAN-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20112,  
NAME = 'CW4.4',  
LABEL = '{0} was not updated because a submitted 2728 exists for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 20112,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('29-JAN-14','DD-MON-RR'),  
UPDATE_TIME = to_date('29-JAN-14','DD-MON-RR') 
	WHERE ERROR_CODE = 20112;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11238;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11238,'CW 4.4','A Treatment already exists for the Treatment Start Date ({0}).',1,11238,1,17,0,to_date('30-OCT-13','DD-MON-RR'),to_date('30-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11238,  
NAME = 'CW 4.4',  
LABEL = 'A Treatment already exists for the Treatment Start Date ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 11238,  
CATEGORY = 1,  
SUB_CATEGORY = 17,  
IS_WARNING = 0,  
CREATE_TIME = to_date('30-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11238;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11471;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11471,'CW 4.4','Date Regular Chronic Dialysis Began must be a valid date',1,11471,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11471,  
NAME = 'CW 4.4',  
LABEL = 'Date Regular Chronic Dialysis Began must be a valid date',  
ACTIVE = 1,  
SORT_ORDER = 11471,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11471;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11472;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11472,'CW 4.4','Date of Regular Chronic Dialysis Began must be after 01/01/1850',1,11472,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11472,  
NAME = 'CW 4.4',  
LABEL = 'Date of Regular Chronic Dialysis Began must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11472,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11472;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11474;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11474,'CW 4.4','Medicare Enrollment Effective Date must be after 01/01/1850',1,11474,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11474,  
NAME = 'CW 4.4',  
LABEL = 'Medicare Enrollment Effective Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11474,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11474;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12952;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12952,'CW 4.0','Oral (PO) Iron Dose is mandatory. Select N/A if Oral (PO) Iron Dose was not recorded for the patient for the clinical month.',1,942,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12952,  
NAME = 'CW 4.0',  
LABEL = 'Oral (PO) Iron Dose is mandatory. Select N/A if Oral (PO) Iron Dose was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 942,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12952;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11475;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11475,'CW 4.4','Employment Effective Date must be after 01/01/1850',1,11475,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11475,  
NAME = 'CW 4.4',  
LABEL = 'Employment Effective Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11475,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11475;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11476;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11476,'CW 4.4','School Status Effective Date must be after 01/01/1850',1,11476,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11476,  
NAME = 'CW 4.4',  
LABEL = 'School Status Effective Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11476,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11476;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12745;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12745,'CW 4.4','Normalized Protein Catabolic Rate (nPCR) Date and Normalized Protein Catabolic Rate (nPCR) N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('01-NOV-13','DD-MON-RR'),to_date('01-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12745,  
NAME = 'CW 4.4',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) Date and Normalized Protein Catabolic Rate (nPCR) N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12745;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11477;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11477,'CW 4.4','Vocational Rehabilitation Effective Date must be after 01/01/1850',1,11477,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11477,  
NAME = 'CW 4.4',  
LABEL = 'Vocational Rehabilitation Effective Date must be after 01/01/1850',  
ACTIVE = 1,  
SORT_ORDER = 11477,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11477;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11478;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11478,'CW 4.4','Illegal system state reached, please restart admission process.',1,11478,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11478,  
NAME = 'CW 4.4',  
LABEL = 'Illegal system state reached, please restart admission process.',  
ACTIVE = 1,  
SORT_ORDER = 11478,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11478;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11479;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11479,'CW 4.4','This Accretion was an exact match for the New Patient Info you entered.',1,11479,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11479,  
NAME = 'CW 4.4',  
LABEL = 'This Accretion was an exact match for the New Patient Info you entered.',  
ACTIVE = 1,  
SORT_ORDER = 11479,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11479;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11480;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11480,'CW 4.4','This Patient was an exact match for the New Patient Info you entered.',1,11480,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11480,  
NAME = 'CW 4.4',  
LABEL = 'This Patient was an exact match for the New Patient Info you entered.',  
ACTIVE = 1,  
SORT_ORDER = 11480,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11480;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11481;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11481,'CW 4.4','Treatment Start Date is required.',1,11481,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11481,  
NAME = 'CW 4.4',  
LABEL = 'Treatment Start Date is required.',  
ACTIVE = 1,  
SORT_ORDER = 11481,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11481;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11482;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11482,'CW 4.4','Treatment Start Date must be a valid date',0,11482,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11482,  
NAME = 'CW 4.4',  
LABEL = 'Treatment Start Date must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11482,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11482;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40062;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40062,'CW 4.5','HbA1c Date (19 d) cannot be after the Physician Signature Date (50).',1,40062,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40062,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40062,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40062;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11484;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11484,'CW 4.4','Dialysis Training Begin Date must be a valid date',0,11484,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11484,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training Begin Date must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11484,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11484;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11485;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11485,'CW 4.4','Dialysis Training Begin Date must be after 01/01/1850',0,11485,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11485,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training Begin Date must be after 01/01/1850',  
ACTIVE = 0,  
SORT_ORDER = 11485,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11485;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11486;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11486,'CW 4.4','Dialysis Training End Date must be a valid date.',1,11486,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11486,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training End Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 11486,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11486;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11487;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11487,'CW 4.4','Dialysis Training End Date must be after 01/01/1850',0,11487,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11487,  
NAME = 'CW 4.4',  
LABEL = 'Dialysis Training End Date must be after 01/01/1850',  
ACTIVE = 0,  
SORT_ORDER = 11487,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11487;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11488;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11488,'CW 4.4','Preparation hospital DBA Name is required.',1,11488,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11488,  
NAME = 'CW 4.4',  
LABEL = 'Preparation hospital DBA Name is required.',  
ACTIVE = 1,  
SORT_ORDER = 11488,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11488;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11489;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11489,'CW 4.4','Transplant Date is required.',1,11489,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11489,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date is required.',  
ACTIVE = 1,  
SORT_ORDER = 11489,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11489;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11490;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11490,'CW 4.4','Transplant Date must be on or after 1/1/1973.',1,11490,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11490,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date must be on or after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 11490,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11490;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11491;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11491,'CW 4.4','Date Patient Admitted for Transplant must be after 1/1/1973.',1,11491,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11491,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be after 1/1/1973.',  
ACTIVE = 1,  
SORT_ORDER = 11491,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11491;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11492;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11492,'CW 4.4','Date Patient Admitted for Transplant must be on or prior to the Transplant Date.',1,11492,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11492,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be on or prior to the Transplant Date.',  
ACTIVE = 1,  
SORT_ORDER = 11492,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11492;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11493;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11493,'CW 4.4','Transplant Date must be a valid date',0,11493,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11493,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11493,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11493;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11494;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11494,'CW 4.4','Transplant Date must be after 01/01/1850',0,11494,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11494,  
NAME = 'CW 4.4',  
LABEL = 'Transplant Date must be after 01/01/1850',  
ACTIVE = 0,  
SORT_ORDER = 11494,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11494;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11495;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11495,'CW 4.4','Date Patient Admitted for Transplant must be a valid date',0,11495,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11495,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be a valid date',  
ACTIVE = 0,  
SORT_ORDER = 11495,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11495;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11496;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11496,'CW 4.4','Date Patient Admitted for Transplant must be after 01/01/1850',0,11496,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11496,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant must be after 01/01/1850',  
ACTIVE = 0,  
SORT_ORDER = 11496,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11496;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11497;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11497,'CW 4.4','Treatment Submitted',1,11497,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11497,  
NAME = 'CW 4.4',  
LABEL = 'Treatment Submitted',  
ACTIVE = 1,  
SORT_ORDER = 11497,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11497;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11498;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11498,'CW 4.4','TreatmentMgr could not submit form',1,11498,1,1,0,to_date('19-NOV-13','DD-MON-RR'),to_date('19-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11498,  
NAME = 'CW 4.4',  
LABEL = 'TreatmentMgr could not submit form',  
ACTIVE = 1,  
SORT_ORDER = 11498,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('19-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('19-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11498;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11359;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11359,'CW 4.4','Date Of Birth is a required field.',1,11359,1,1,0,to_date('21-NOV-13','DD-MON-RR'),to_date('21-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11359,  
NAME = 'CW 4.4',  
LABEL = 'Date Of Birth is a required field.',  
ACTIVE = 1,  
SORT_ORDER = 11359,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('21-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('21-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11359;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11357;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11357,'CW 4.4','Patient''''s Last Name is required.',1,11357,1,1,0,to_date('21-NOV-13','DD-MON-RR'),to_date('21-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11357,  
NAME = 'CW 4.4',  
LABEL = 'Patient''''s Last Name is required.',  
ACTIVE = 1,  
SORT_ORDER = 11357,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('21-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('21-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11357;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12709;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12709,'CW 4.0','AV Fistula Usable Date is mandatory based on the Current Access Type populated. Select N/A if date was not recorded.',1,782,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12709,  
NAME = 'CW 4.0',  
LABEL = 'AV Fistula Usable Date is mandatory based on the Current Access Type populated. Select N/A if date was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 782,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12709;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12726;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12726,'CW 4.0','AVF Creation Date is mandatory when AV Fistula Maturing = Yes. Select N/A if AVF Creation Date was not recorded for the patient for the clinical month.',1,797,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12726,  
NAME = 'CW 4.0',  
LABEL = 'AVF Creation Date is mandatory when AV Fistula Maturing = Yes. Select N/A if AVF Creation Date was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 797,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12726;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12670;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12670,'CW 4.4','Date of Reported Dialysis Session value and Date of Reported Dialysis Session N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12670,  
NAME = 'CW 4.4',  
LABEL = 'Date of Reported Dialysis Session value and Date of Reported Dialysis Session N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12670;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12671;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12671,'CW 4.4','AV Fistula Usable Date value and AV Fistula Usable Date N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12671,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula Usable Date value and AV Fistula Usable Date N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12671;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12673;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12673,'CW 4.4','AV Fistula Maturing value and AV Fistula Maturing N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12673,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula Maturing value and AV Fistula Maturing N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12673;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12674;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12674,'CW 4.4','AV Fistula State is mandatory. Select N/A if AV Fistula State was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12674,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula State is mandatory. Select N/A if AV Fistula State was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12674;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12675;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12675,'CW 4.4','AV Fistula State value and AV Fistula State N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12675,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula State value and AV Fistula State N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12675;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12676;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12676,'CW 4.4','AV Fistula Creation Date value and AV Fistula Creation Date N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12676,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula Creation Date value and AV Fistula Creation Date N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12676;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12679;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12679,'CW 4.4','AV Graft Maturing value and AV Graft Maturing N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12679,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft Maturing value and AV Graft Maturing N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12679;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12680;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12680,'CW 4.4','AV Graft State is mandatory. Select N/A if AV Graft State was not recorded for the patient for the clinical month.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12680,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft State is mandatory. Select N/A if AV Graft State was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12680;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12681;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12681,'CW 4.4','AV Graft State value and AV Graft State N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('26-NOV-13','DD-MON-RR'),to_date('26-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12681,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft State value and AV Graft State N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12681;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40063;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40063,'CW 4.5','HbA1c Date (19 d) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40063,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40063,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40063,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40063;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40064;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40064,'CW 4.5','HbA1c Date (19 d) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',1,40064,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40064,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40064,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40064;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40065;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40065,'CW 4.5','HbA1c Date (19 d) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40065,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40065,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40065,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40065;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40066;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40066,'CW 4.5','HbA1c (19 d) is not in the valid range (4.0 - 14.0).',1,40066,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40066,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c (19 d) is not in the valid range (4.0 - 14.0).',  
ACTIVE = 1,  
SORT_ORDER = 40066,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40066;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40067;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40067,'CW 4.5','Total Cholesterol Date (19 e) is mandatory.',1,40067,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40067,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40067,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40067;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40068;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40068,'CW 4.5','Total Cholesterol Date (19 e) cannot be a future date.',1,40068,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40068,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40068,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40068;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40069;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40069,'CW 4.5','Total Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40069,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40069,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40069,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40069;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40070;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40070,'CW 4.5','Total Cholesterol Date (19 e) must be on or after 01/01/1973.',1,40070,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40070,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40070,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40070;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40071;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40071,'CW 4.5','Total Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',1,40071,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40071,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40071,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40071;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40072;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40072,'CW 4.5','Total Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40072,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40072,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40072,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40072;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40073;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40073,'CW 4.5','Total Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',1,40073,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40073,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40073,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40073;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40074;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40074,'CW 4.5','Total Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40074,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40074,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40074,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40074;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40075;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40075,'CW 4.5','Total Cholesterol (19 e) is not in the valid range (100 - 240).',1,40075,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40075,  
NAME = 'CW 4.5',  
LABEL = 'Total Cholesterol (19 e) is not in the valid range (100 - 240).',  
ACTIVE = 1,  
SORT_ORDER = 40075,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40075;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40076;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40076,'CW 4.5','LDL Cholesterol Date (19 e) is mandatory.',1,40076,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40076,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40076,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40076;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11328;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11328,'CW 4.0','First character of the Medicare Claim Number must be letters A-H, numbers 0-8, or ''{''.',1,201,1,1,0,to_date('22-MAR-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11328,  
NAME = 'CW 4.0',  
LABEL = 'First character of the Medicare Claim Number must be letters A-H, numbers 0-8, or ''{''.',  
ACTIVE = 1,  
SORT_ORDER = 201,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('22-MAR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11328;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11329;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11329,'CW 4.0','Characters 2 - 9 of the Medicare Claim Number must be numeric.',1,201,1,1,0,to_date('22-MAR-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11329,  
NAME = 'CW 4.0',  
LABEL = 'Characters 2 - 9 of the Medicare Claim Number must be numeric.',  
ACTIVE = 1,  
SORT_ORDER = 201,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('22-MAR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11329;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11330;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11330,'CW 4.0','Medicare Claim Number must be 10 or 11 characters.',1,201,1,1,0,to_date('22-MAR-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11330,  
NAME = 'CW 4.0',  
LABEL = 'Medicare Claim Number must be 10 or 11 characters.',  
ACTIVE = 1,  
SORT_ORDER = 201,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('22-MAR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11330;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11332;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11332,'CW 4.0','The Railroad Retirement Board (RRB) value you entered has been converted to a valid Medicare Claim Number.',1,201,1,1,1,to_date('22-MAR-13','DD-MON-RR'),to_date('22-MAR-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11332,  
NAME = 'CW 4.0',  
LABEL = 'The Railroad Retirement Board (RRB) value you entered has been converted to a valid Medicare Claim Number.',  
ACTIVE = 1,  
SORT_ORDER = 201,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('22-MAR-13','DD-MON-RR'),  
UPDATE_TIME = to_date('22-MAR-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11332;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13550;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13550,'CW4.1','Mailing Address Line One exceeds allowable length of {0}.',1,13550,1,5,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13550,  
NAME = 'CW4.1',  
LABEL = 'Mailing Address Line One exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13550,  
CATEGORY = 1,  
SUB_CATEGORY = 5,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13550;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13551;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13551,'CW4.1','Mailing Address Line Two exceeds allowable length of {0}.',1,13551,1,5,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13551,  
NAME = 'CW4.1',  
LABEL = 'Mailing Address Line Two exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13551,  
CATEGORY = 1,  
SUB_CATEGORY = 5,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13551;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13552;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13552,'CW4.1','Mailing Address City exceeds allowable length of {0}.',1,13552,1,5,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13552,  
NAME = 'CW4.1',  
LABEL = 'Mailing Address City exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13552,  
CATEGORY = 1,  
SUB_CATEGORY = 5,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13552;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13553;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13553,'CW4.1','Physical Address Line One exceeds allowable length of {0}.',1,13553,1,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13553,  
NAME = 'CW4.1',  
LABEL = 'Physical Address Line One exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13553,  
CATEGORY = 1,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13553;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13554;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13554,'CW4.1','Physical Address Line Two exceeds allowable length of {0}.',1,13554,1,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13554,  
NAME = 'CW4.1',  
LABEL = 'Physical Address Line Two exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13554,  
CATEGORY = 1,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13554;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13555;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13555,'CW4.1','Physical Address City exceeds allowable length of {0}.',1,13555,1,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13555,  
NAME = 'CW4.1',  
LABEL = 'Physical Address City exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13555,  
CATEGORY = 1,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13555;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13556;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13556,'CW4.1','Transient Address Line One exceeds allowable length of {0}.',1,13556,1,6,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13556,  
NAME = 'CW4.1',  
LABEL = 'Transient Address Line One exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13556,  
CATEGORY = 1,  
SUB_CATEGORY = 6,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13556;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13557;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13557,'CW4.1','Transient Address Line Two exceeds allowable length of {0}.',1,13557,1,6,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13557,  
NAME = 'CW4.1',  
LABEL = 'Transient Address Line Two exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13557,  
CATEGORY = 1,  
SUB_CATEGORY = 6,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13557;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13558;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13558,'CW4.1','Transient Address City exceeds allowable length of {0}.',1,13558,1,6,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13558,  
NAME = 'CW4.1',  
LABEL = 'Transient Address City exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13558,  
CATEGORY = 1,  
SUB_CATEGORY = 6,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13558;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13559;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13559,'CW4.1','Admission Records created prior to {0} cannot be modified via Batch. Changes to the Admission Data were not processed. Please use the SUI to make any necessary updates.',1,13559,1,9,1,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13559,  
NAME = 'CW4.1',  
LABEL = 'Admission Records created prior to {0} cannot be modified via Batch. Changes to the Admission Data were not processed. Please use the SUI to make any necessary updates.',  
ACTIVE = 1,  
SORT_ORDER = 13559,  
CATEGORY = 1,  
SUB_CATEGORY = 9,  
IS_WARNING = 1,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13559;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13560;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13560,'CW4.1','Discharge Information on records created prior to {0} cannot be modified via Batch. Changes to the Discharge Information were not processed. Please use the SUI to make any necessary updates.',1,13560,1,9,1,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13560,  
NAME = 'CW4.1',  
LABEL = 'Discharge Information on records created prior to {0} cannot be modified via Batch. Changes to the Discharge Information were not processed. Please use the SUI to make any necessary updates.',  
ACTIVE = 1,  
SORT_ORDER = 13560,  
CATEGORY = 1,  
SUB_CATEGORY = 9,  
IS_WARNING = 1,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13560;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13561;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13561,'CW4.1','Treatment Information on records created prior to {0} cannot be modified via Batch. Changes to the Treatment Information were not processed. Please use the SUI to make any necessary updates.',1,13561,1,10,1,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13561,  
NAME = 'CW4.1',  
LABEL = 'Treatment Information on records created prior to {0} cannot be modified via Batch. Changes to the Treatment Information were not processed. Please use the SUI to make any necessary updates.',  
ACTIVE = 1,  
SORT_ORDER = 13561,  
CATEGORY = 1,  
SUB_CATEGORY = 10,  
IS_WARNING = 1,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13561;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13562;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13562,'CW4.1','Personnel Address is incomplete - missing Line One.',1,13562,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13562,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address is incomplete - missing Line One.',  
ACTIVE = 1,  
SORT_ORDER = 13562,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13562;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13563;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13563,'CW4.1','Personnel Address is incomplete - missing State.',1,13563,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13563,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address is incomplete - missing State.',  
ACTIVE = 1,  
SORT_ORDER = 13563,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13563;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13564;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13564,'CW4.1','Personnel Address is incomplete - missing City.',1,13564,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13564,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address is incomplete - missing City.',  
ACTIVE = 1,  
SORT_ORDER = 13564,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13564;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13565;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13565,'CW4.1','Personnel Address is incomplete - missing Zip Code.',1,13565,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13565,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address is incomplete - missing Zip Code.',  
ACTIVE = 1,  
SORT_ORDER = 13565,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13565;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13566;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13566,'CW4.1','Personnel Address is incomplete - missing County.',1,13566,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13566,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address is incomplete - missing County.',  
ACTIVE = 1,  
SORT_ORDER = 13566,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13566;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13567;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13567,'CW4.1','Personnel Address Zip Code must be 5 digits.',1,13567,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13567,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address Zip Code must be 5 digits.',  
ACTIVE = 1,  
SORT_ORDER = 13567,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13567;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13568;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13568,'CW4.1','Personnel Address Zip Code Extension must be 4 digits.',1,13568,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13568,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address Zip Code Extension must be 4 digits.',  
ACTIVE = 1,  
SORT_ORDER = 13568,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13568;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13569;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13569,'CW4.1','Personnel Address Line One exceeds allowable length of {0}.',1,13569,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13569,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address Line One exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13569,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13569;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13570;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13570,'CW4.1','Personnel Address Line Two exceeds allowable length of {0}.',1,13570,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13570,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address Line Two exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13570,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13570;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13571;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13571,'CW4.1','Personnel Address City exceeds allowable length of {0}.',1,13571,19,4,0,to_date('27-JUN-13','DD-MON-RR'),to_date('27-JUN-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13571,  
NAME = 'CW4.1',  
LABEL = 'Personnel Address City exceeds allowable length of {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13571,  
CATEGORY = 19,  
SUB_CATEGORY = 4,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-JUN-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-JUN-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13571;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20019;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20019,'CW4.1','Discharge Reason is required.',1,20019,1,1,0,to_date('25-JUL-13','DD-MON-RR'),to_date('25-JUL-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20019,  
NAME = 'CW4.1',  
LABEL = 'Discharge Reason is required.',  
ACTIVE = 1,  
SORT_ORDER = 20019,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('25-JUL-13','DD-MON-RR'),  
UPDATE_TIME = to_date('25-JUL-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20019;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 607;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (607,'CW 4.4','Clinical Period cannot be a future date.',1,607,2,0,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 607,  
NAME = 'CW 4.4',  
LABEL = 'Clinical Period cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 607,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 607;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11236;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11236,'CW 4.4','Patient Admit Date must be after the patient''''s previous admission record''''s Discharge Date ({0}) at the current Facility ({1}).',1,11236,1,16,0,to_date('04-NOV-13','DD-MON-RR'),to_date('05-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11236,  
NAME = 'CW 4.4',  
LABEL = 'Patient Admit Date must be after the patient''''s previous admission record''''s Discharge Date ({0}) at the current Facility ({1}).',  
ACTIVE = 1,  
SORT_ORDER = 11236,  
CATEGORY = 1,  
SUB_CATEGORY = 16,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11236;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20017;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20017,'CW4.3','Ethnicity has been entered. Race is Required.',1,20017,1,1,0,to_date('05-NOV-13','DD-MON-RR'),to_date('05-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20017,  
NAME = 'CW4.3',  
LABEL = 'Ethnicity has been entered. Race is Required.',  
ACTIVE = 1,  
SORT_ORDER = 20017,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('05-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20017;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20018;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20018,'CW4.3','Type of Dialysis Training is required.',1,20018,1,1,0,to_date('05-NOV-13','DD-MON-RR'),to_date('05-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20018,  
NAME = 'CW4.3',  
LABEL = 'Type of Dialysis Training is required.',  
ACTIVE = 1,  
SORT_ORDER = 20018,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('05-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20018;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11237;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11237,'CW 4.4','Patient Discharge Date must be before the patient''''s next admission record''''s Admit Date ({0}) at the current Facility ({1}).',1,11237,1,16,0,to_date('04-NOV-13','DD-MON-RR'),to_date('05-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11237,  
NAME = 'CW 4.4',  
LABEL = 'Patient Discharge Date must be before the patient''''s next admission record''''s Admit Date ({0}) at the current Facility ({1}).',  
ACTIVE = 1,  
SORT_ORDER = 11237,  
CATEGORY = 1,  
SUB_CATEGORY = 16,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11237;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12825;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12825,'CW 4.0','Post-Dialysis Target Weight for Session is mandatory. Select N/A if Post-Dialysis Target Weight for Session was not recorded for the patient for the clinical month.',1,828,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12825,  
NAME = 'CW 4.0',  
LABEL = 'Post-Dialysis Target Weight for Session is mandatory. Select N/A if Post-Dialysis Target Weight for Session was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 828,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12825;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12801;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12801,'CW 4.0','ESA Administered is mandatory. Select N/A if ESA Administered was not recorded for the patient for the clinical month.',1,816,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12801,  
NAME = 'CW 4.0',  
LABEL = 'ESA Administered is mandatory. Select N/A if ESA Administered was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 816,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12801;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12047;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12047,'CW 4.4','Infection data and Infection Section N/A are both populated for this patient. Please submit either the data or Infection Section N/A.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12047,  
NAME = 'CW 4.4',  
LABEL = 'Infection data and Infection Section N/A are both populated for this patient. Please submit either the data or Infection Section N/A.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12047;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12095;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12095,'CW 4.4','Infection Requires Hospitalization is mandatory when Infection Hospitalization Date is populated.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12095,  
NAME = 'CW 4.4',  
LABEL = 'Infection Requires Hospitalization is mandatory when Infection Hospitalization Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12095;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12093;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12093,'CW 4.4','Infection Requires Hospitalization value and Infection Requires Hospitalization N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12093,  
NAME = 'CW 4.4',  
LABEL = 'Infection Requires Hospitalization value and Infection Requires Hospitalization N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12093;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12092;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12092,'CW 4.4','Infection Hospitalization Date and Infection Requires Hospitalization N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12092,  
NAME = 'CW 4.4',  
LABEL = 'Infection Hospitalization Date and Infection Requires Hospitalization N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12092;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12033;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12033,'CW 4.4','Infection Section N/A is mandatory when an Infection event is not recorded for the patient.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12033,  
NAME = 'CW 4.4',  
LABEL = 'Infection Section N/A is mandatory when an Infection event is not recorded for the patient.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12033;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12034;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12034,'CW 4.4','Date Oral Iron Prescribed cannot be provided when Date Oral Iron Prescribed is No.',1,12034,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12034,  
NAME = 'CW 4.4',  
LABEL = 'Date Oral Iron Prescribed cannot be provided when Date Oral Iron Prescribed is No.',  
ACTIVE = 1,  
SORT_ORDER = 12034,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12034;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12035;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12035,'CW 4.4','Intravenous (IV) Iron Administered Date cannot be provided when Intravenous (IV) Iron Administered is No.',1,12035,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12035,  
NAME = 'CW 4.4',  
LABEL = 'Intravenous (IV) Iron Administered Date cannot be provided when Intravenous (IV) Iron Administered is No.',  
ACTIVE = 1,  
SORT_ORDER = 12035,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12035;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12083;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12083,'CW 4.4','Post-Dialysis Target Weight for Session cannot be submitted when the patient is not receiving Hemodialysis at the selected facility.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12083,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Target Weight for Session cannot be submitted when the patient is not receiving Hemodialysis at the selected facility.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12083;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12081;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12081,'CW 4.4','Post-Dialysis Target Weight for Session cannot be submitted for Peritoneal Dialysis collection type.',1,1224,2,1,0,to_date('13-NOV-13','DD-MON-RR'),to_date('13-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12081,  
NAME = 'CW 4.4',  
LABEL = 'Post-Dialysis Target Weight for Session cannot be submitted for Peritoneal Dialysis collection type.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('13-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('13-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12081;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12036;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12036,'CW 4.4','Other Oral (PO) Iron Dose Measure cannot be provided when Oral (PO) Iron Dose N/A is populated.',1,12036,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12036,  
NAME = 'CW 4.4',  
LABEL = 'Other Oral (PO) Iron Dose Measure cannot be provided when Oral (PO) Iron Dose N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12036,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12036;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12037;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12037,'CW 4.4','Other Oral (PO) Iron Dose Measure cannot be provided when Oral (PO) Iron Dose Measure does not equal Other.',1,12037,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12037,  
NAME = 'CW 4.4',  
LABEL = 'Other Oral (PO) Iron Dose Measure cannot be provided when Oral (PO) Iron Dose Measure does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12037,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12037;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12038;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12038,'CW 4.4','Other Oral (PO) Iron cannot be provided when Oral (PO) Iron N/A is populated.',1,12038,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12038,  
NAME = 'CW 4.4',  
LABEL = 'Other Oral (PO) Iron cannot be provided when Oral (PO) Iron N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12038,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12038;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12039;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12039,'CW 4.4','Other Oral (PO) Iron cannot be provided when Oral (PO) Iron does not equal Other.',1,12039,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12039,  
NAME = 'CW 4.4',  
LABEL = 'Other Oral (PO) Iron cannot be provided when Oral (PO) Iron does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12039,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12039;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12040;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12040,'CW 4.4','Other Intravenous (IV) Iron cannot be provided when Intravenous (IV) Iron N/A is populated.',1,12040,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12040,  
NAME = 'CW 4.4',  
LABEL = 'Other Intravenous (IV) Iron cannot be provided when Intravenous (IV) Iron N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12040,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12040;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12041;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12041,'CW 4.4','Other Intravenous (IV) Iron cannot be provided when Intravenous (IV) Iron does not equal Other.',1,12041,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12041,  
NAME = 'CW 4.4',  
LABEL = 'Other Intravenous (IV) Iron cannot be provided when Intravenous (IV) Iron does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12041,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12041;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12042;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12042,'CW 4.4','Other Intravenous (IV) Iron Dose Measure cannot be provided when Intravenous (IV) Iron Dose N/A is populated.',1,12042,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12042,  
NAME = 'CW 4.4',  
LABEL = 'Other Intravenous (IV) Iron Dose Measure cannot be provided when Intravenous (IV) Iron Dose N/A is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12042,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12042;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12043;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12043,'CW 4.4','Other Intravenous (IV) Iron Dose Measure cannot be provided when Intravenous (IV) Iron Dose Measure does not equal Other.',1,12043,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12043,  
NAME = 'CW 4.4',  
LABEL = 'Other Intravenous (IV) Iron Dose Measure cannot be provided when Intravenous (IV) Iron Dose Measure does not equal Other.',  
ACTIVE = 1,  
SORT_ORDER = 12043,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12043;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12044;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12044,'CW 4.4','Oral (PO) Iron Dose Units of Measure and Oral (PO) Iron Dose N/A value are both populated. Please submit only one value.',1,12044,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12044,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Dose Units of Measure and Oral (PO) Iron Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12044,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12044;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12045;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12045,'CW 4.4','Oral (PO) Iron Dose value and Oral (PO) Iron Dose N/A value are both populated. Please submit only one value.',1,12045,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12045,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Dose value and Oral (PO) Iron Dose N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12045,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12045;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12049;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12049,'CW 4.4','Oral (PO) Iron Dose is mandatory when Oral (PO) Iron Dose Units of Measure is populated.',1,12049,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12049,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron Dose is mandatory when Oral (PO) Iron Dose Units of Measure is populated.',  
ACTIVE = 1,  
SORT_ORDER = 12049,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12049;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12050;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12050,'CW 4.4','Oral (PO) Iron value and Oral (PO) Iron N/A value are both populated. Please submit only one value.',1,12050,2,0,0,to_date('14-NOV-13','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12050,  
NAME = 'CW 4.4',  
LABEL = 'Oral (PO) Iron value and Oral (PO) Iron N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12050,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('14-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12050;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13524;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13524,'CW4.1','Employment Effective Date cannot be a future date.',1,13524,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13524,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13524,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13524;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13525;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13525,'CW4.1','Employment Effective Date must be a valid date.',1,13525,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13525,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13525,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13525;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13526;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13526,'CW4.1','Employment Effective Date is mandatory when Employment Status is populated.',1,13526,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13526,  
NAME = 'CW4.1',  
LABEL = 'Employment Effective Date is mandatory when Employment Status is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13526,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13526;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13542;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13542,'CW4.1','More than one Employment Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',1,13542,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13542,  
NAME = 'CW4.1',  
LABEL = 'More than one Employment Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13542,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13542;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13527;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13527,'CW4.1','School Status is mandatory when School Effective Date is populated.',1,13527,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13527,  
NAME = 'CW4.1',  
LABEL = 'School Status is mandatory when School Effective Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13527,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13527;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13528;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13528,'CW4.1','The selected School status is the same as the previous School Status, please select a different School Status or modify the Effective Date.',1,13528,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13528,  
NAME = 'CW4.1',  
LABEL = 'The selected School status is the same as the previous School Status, please select a different School Status or modify the Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13528,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13528;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13529;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13529,'CW4.1','Patient must be between the ages of 18 and 54 as of the School Status Effective Date.',1,13529,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13529,  
NAME = 'CW4.1',  
LABEL = 'Patient must be between the ages of 18 and 54 as of the School Status Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13529,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13529;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13530;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13530,'CW4.1','School Status Effective Date cannot be after the patient''''s Date of Death {0}.',0,13530,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13530,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 0,  
SORT_ORDER = 13530,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13530;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13531;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13531,'CW4.1','School Status Effective Date must be a valid date.',1,13531,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13531,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13531,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13531;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13532;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13532,'CW4.1','School Status Effective Date is mandatory when School Status is populated.',1,13532,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13532,  
NAME = 'CW4.1',  
LABEL = 'School Status Effective Date is mandatory when School Status is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13532,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13532;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13543;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13543,'CW4.1','More than one School Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',1,13543,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13543,  
NAME = 'CW4.1',  
LABEL = 'More than one School Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13543,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13543;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13533;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13533,'CW4.1','Vocational Rehabilitation Status is mandatory when Vocational Rehabilitation Effective Date is populated.',1,13533,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13533,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Status is mandatory when Vocational Rehabilitation Effective Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13533,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13533;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13534;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13534,'CW4.1','The selected Vocational Rehabilitation Status is the same as the previous Vocational Rehabilitation Status, please select a different Vocational Rehabilitation Status or modify the Effective Date.',1,13534,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13534,  
NAME = 'CW4.1',  
LABEL = 'The selected Vocational Rehabilitation Status is the same as the previous Vocational Rehabilitation Status, please select a different Vocational Rehabilitation Status or modify the Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13534,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13534;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13535;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13535,'CW4.1','Patient must be between the ages of 18 and 54 as of the Vocational Rehabilitation Effective Date.',1,13535,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13535,  
NAME = 'CW4.1',  
LABEL = 'Patient must be between the ages of 18 and 54 as of the Vocational Rehabilitation Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13535,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13535;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13536;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13536,'CW4.1','Vocational Rehabilitation  Effective Date cannot be after the patient''''s Date of Death {0}.',1,13536,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13536,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation  Effective Date cannot be after the patient''''s Date of Death {0}.',  
ACTIVE = 1,  
SORT_ORDER = 13536,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13536;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13537;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13537,'CW4.1','Vocational Rehabilitation Effective Date must be a valid date.',1,13537,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13537,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Effective Date must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13537,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13537;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13538;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13538,'CW4.1','Vocational Rehabilitation Effective Date is mandatory when Vocational Rehabilitation Status is populated.',1,13538,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13538,  
NAME = 'CW4.1',  
LABEL = 'Vocational Rehabilitation Effective Date is mandatory when Vocational Rehabilitation Status is populated.',  
ACTIVE = 1,  
SORT_ORDER = 13538,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13538;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13544;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13544,'CW4.1','More than one Vocational Rehabilitation Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',1,13544,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13544,  
NAME = 'CW4.1',  
LABEL = 'More than one Vocational Rehabilitation Status has been selected with an Effective Date of {0}. Please select a different Effective Date.',  
ACTIVE = 1,  
SORT_ORDER = 13544,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13544;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13545;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13545,'CW4.1','Medicare Claim Number is required if Current Medicare Enrollement Status is Medicare. Edit and submit changes on the patient edit page.',1,13545,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13545,  
NAME = 'CW4.1',  
LABEL = 'Medicare Claim Number is required if Current Medicare Enrollement Status is Medicare. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 13545,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 13545;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 204;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (204,'CW4.1','Admission process cancelled, Patient already admitted to the current facility.',1,204,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 204,  
NAME = 'CW4.1',  
LABEL = 'Admission process cancelled, Patient already admitted to the current facility.',  
ACTIVE = 1,  
SORT_ORDER = 204,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 204;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 99998;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (99998,'CW 4.0','Error parsing XML file: {0}',1,1225,1,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 99998,  
NAME = 'CW 4.0',  
LABEL = 'Error parsing XML file: {0}',  
ACTIVE = 1,  
SORT_ORDER = 1225,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 99998;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30011;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30011,'CW 4.2','Normalized Protein Catabolic Rate (nPCR) is mandatory. Select N/A if Normalized Protein Catabolic Rate (nPCR) was not recorded for the patient for the clinical month.',1,13548,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30011,  
NAME = 'CW 4.2',  
LABEL = 'Normalized Protein Catabolic Rate (nPCR) is mandatory. Select N/A if Normalized Protein Catabolic Rate (nPCR) was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 13548,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30011;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20115;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20115,'CW 4.2','The treatment information that was entered matches an existing treatment record with the Treatment Start Date of {0} and Treatment Type of {1}.',0,13550,2,0,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20115,  
NAME = 'CW 4.2',  
LABEL = 'The treatment information that was entered matches an existing treatment record with the Treatment Start Date of {0} and Treatment Type of {1}.',  
ACTIVE = 0,  
SORT_ORDER = 13550,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20115;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20120;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20120,'CW 4.2','A duplicate treatment was found to exist in the system with a ModalityID of {0}.',0,13555,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20120,  
NAME = 'CW 4.2',  
LABEL = 'A duplicate treatment was found to exist in the system with a ModalityID of {0}.',  
ACTIVE = 0,  
SORT_ORDER = 13555,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20120;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30019;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30019,'CW 4.2','Post Dialysis Weight Assessment Date is mandatory when Prescribed Post-Dialysis Target Weight for Session is Prescribed Post-Dialysis Target Weight.',1,13551,2,1,0,to_date('01-FEB-13','DD-MON-RR'),to_date('01-FEB-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30019,  
NAME = 'CW 4.2',  
LABEL = 'Post Dialysis Weight Assessment Date is mandatory when Prescribed Post-Dialysis Target Weight for Session is Prescribed Post-Dialysis Target Weight.',  
ACTIVE = 1,  
SORT_ORDER = 13551,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = to_date('01-FEB-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30019;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30013;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30013,'CW 4.2','Date Oral Iron Prescribed cannot be a future date.',1,13556,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30013,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 13556,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30013;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30014;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30014,'CW 4.2','Date Oral Iron Prescribed cannot be prior to the patient''''s Date of Birth ({0}).',1,13557,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30014,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 13557,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30014;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30015;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30015,'CW 4.2','Date Oral Iron Prescribed is mandatory when the value in Oral (PO) Iron Prescribed is Oral Iron Prescribed.',1,13558,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30015,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed is mandatory when the value in Oral (PO) Iron Prescribed is Oral Iron Prescribed.',  
ACTIVE = 1,  
SORT_ORDER = 13558,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30015;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30016;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30016,'CW 4.2','Date Oral Iron Prescribed must be a valid date.',1,13559,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30016,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed must be a valid date.',  
ACTIVE = 1,  
SORT_ORDER = 13559,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30016;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30017;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30017,'CW 4.2','Date Oral Iron Prescribed must be on or after 01/01/1973.',1,13560,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30017,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 13560,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30017;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30018;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30018,'CW 4.2','Date Oral Iron Prescribed cannot be after the patient''''s Date of Death ({0}).',1,13561,2,1,0,to_date('01-FEB-13','DD-MON-RR'),null);
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30018,  
NAME = 'CW 4.2',  
LABEL = 'Date Oral Iron Prescribed cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 13561,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('01-FEB-13','DD-MON-RR'),  
UPDATE_TIME = null 
	WHERE ERROR_CODE = 30018;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12100;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12100,'CW 4.4','Hemoglobin is mandatory when Hemoglobin Date is populated.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12100,  
NAME = 'CW 4.4',  
LABEL = 'Hemoglobin is mandatory when Hemoglobin Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12100;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12099;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12099,'CW 4.4','Hemoglobin lab value and Hemoglobin N/A value are both populated. Please submit only one value.',1,1224,2,20,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12099,  
NAME = 'CW 4.4',  
LABEL = 'Hemoglobin lab value and Hemoglobin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 20,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12099;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12098;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12098,'CW 4.4','Hemoglobin Date and Hemoglobin N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12098,  
NAME = 'CW 4.4',  
LABEL = 'Hemoglobin Date and Hemoglobin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12098;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12137;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12137,'CW 4.4','Iron Saturation (TSAT) is mandatory when TSAT Date is populated.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12137,  
NAME = 'CW 4.4',  
LABEL = 'Iron Saturation (TSAT) is mandatory when TSAT Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12137;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12138;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12138,'CW 4.4','Iron Saturation (TSAT) lab value and TSAT N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12138,  
NAME = 'CW 4.4',  
LABEL = 'Iron Saturation (TSAT) lab value and TSAT N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12138;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12139;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12139,'CW 4.4','Iron Saturation (TSAT) Date and TSAT N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12139,  
NAME = 'CW 4.4',  
LABEL = 'Iron Saturation (TSAT) Date and TSAT N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12139;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12140;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12140,'CW 4.4','Ferritin is mandatory when Ferritin Date is populated.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12140,  
NAME = 'CW 4.4',  
LABEL = 'Ferritin is mandatory when Ferritin Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12140;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12141;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12141,'CW 4.4','Ferritin lab value and Ferritin N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12141,  
NAME = 'CW 4.4',  
LABEL = 'Ferritin lab value and Ferritin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12141;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12142;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12142,'CW 4.4','Ferritin Date and Ferritin N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12142,  
NAME = 'CW 4.4',  
LABEL = 'Ferritin Date and Ferritin N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12142;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12143;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12143,'CW 4.4','Reticulocyte Hemoglobin (CHr) is mandatory when Reticulocyte Hemoglobin (CHr) Date is populated.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12143,  
NAME = 'CW 4.4',  
LABEL = 'Reticulocyte Hemoglobin (CHr) is mandatory when Reticulocyte Hemoglobin (CHr) Date is populated.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12143;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12144;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12144,'CW 4.4','Reticulocyte Hemoglobin (CHr) lab value and Reticulocyte Hemoglobin (CHr) N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12144,  
NAME = 'CW 4.4',  
LABEL = 'Reticulocyte Hemoglobin (CHr) lab value and Reticulocyte Hemoglobin (CHr) N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12144;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12145;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12145,'CW 4.4','Reticulocyte Hemoglobin (CHr) Date and Reticulocyte Hemoglobin (CHr) N/A value are both populated. Please submit only one value.',1,1224,2,1,0,to_date('11-OCT-13','DD-MON-RR'),to_date('11-OCT-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12145,  
NAME = 'CW 4.4',  
LABEL = 'Reticulocyte Hemoglobin (CHr) Date and Reticulocyte Hemoglobin (CHr) N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('11-OCT-13','DD-MON-RR'),  
UPDATE_TIME = to_date('11-OCT-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12145;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40000;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40000,'CW 4.5','Form Type is mandatory.',1,40000,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40000,  
NAME = 'CW 4.5',  
LABEL = 'Form Type is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40000,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40000;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40183;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40183,'CW 4.5','Facility is not eligible to complete an Initial CMS-2728 Form (Dialysis) for this patient.',1,40183,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40183,  
NAME = 'CW 4.5',  
LABEL = 'Facility is not eligible to complete an Initial CMS-2728 Form (Dialysis) for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40183,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40183;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40128;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40128,'CW4.5','Type of Donor (35) is mandatory. Edit and submit changes to the Primary Type of Treatment on the treatment page.',1,40128,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40128,  
NAME = 'CW4.5',  
LABEL = 'Type of Donor (35) is mandatory. Edit and submit changes to the Primary Type of Treatment on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40128,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40128;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40077;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40077,'CW 4.5','LDL Cholesterol Date (19 e) cannot be a future date.',1,40077,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40077,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40077,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40077;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40129;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40129,'CW4.5','Date of Return to Regular Dialysis (36) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page.',1,40129,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40129,  
NAME = 'CW4.5',  
LABEL = 'Date of Return to Regular Dialysis (36) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40129,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40129;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40130;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40130,'CW4.5','Date of Return to Regular Dialysis (36) must be the same as Date Regular Chronic Dialysis Began (24). Edit and submit changes to the Admit Date on the admit/discharge page.',1,40130,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40130,  
NAME = 'CW4.5',  
LABEL = 'Date of Return to Regular Dialysis (36) must be the same as Date Regular Chronic Dialysis Began (24). Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40130,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40130;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40131;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40131,'CW4.5','Current Dialysis Treatment Site (37) is mandatory. Edit and submit changes to the Primary Dialysis Setting on the treatment page.',1,40131,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40131,  
NAME = 'CW4.5',  
LABEL = 'Current Dialysis Treatment Site (37) is mandatory. Edit and submit changes to the Primary Dialysis Setting on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40131,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40131;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40001;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40001,'CW4.5','Remarks (53) cannot be greater than 255 characters long. Remarks is currently {0} characters long.',1,40001,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40001,  
NAME = 'CW4.5',  
LABEL = 'Remarks (53) cannot be greater than 255 characters long. Remarks is currently {0} characters long.',  
ACTIVE = 1,  
SORT_ORDER = 40001,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40001;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40112;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40112,'CW 4.5','Primary Dialysis Setting (22) is mandatory. Edit and submit changes on the treatment page.',1,40112,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40112,  
NAME = 'CW 4.5',  
LABEL = 'Primary Dialysis Setting (22) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40112,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40112;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40113;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40113,'CW 4.5','Primary Type of Dialysis (23) is mandatory. Edit and submit changes on the treatment page.',1,40113,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40113,  
NAME = 'CW 4.5',  
LABEL = 'Primary Type of Dialysis (23) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40113,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40113;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40114;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40114,'CW 4.5','Number of Sessions Per Week (23) is mandatory. Edit and submit changes on the treatment page.',1,40114,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40114,  
NAME = 'CW 4.5',  
LABEL = 'Number of Sessions Per Week (23) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40114,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40114;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40115;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40115,'CW 4.5','Number of Hours Per Session (23) is mandatory. Edit and submit changes on the treatment page.',1,40115,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40115,  
NAME = 'CW 4.5',  
LABEL = 'Number of Hours Per Session (23) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40115,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40115;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40116;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40116,'CW 4.5','Date Regular Chronic Dialysis Began (24) is mandatory.',1,40116,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40116,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40116,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40116;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40117;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40117,'CW 4.5','Date Regular Chronic Dialysis Began (24) cannot be after the Physician Signature Date (50).',1,40117,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40117,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40117,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40117;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40118;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40118,'CW 4.5','Date Regular Chronic Dialysis Began (24) cannot be a future date.',1,40118,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40118,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40118,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40118;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40119;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40119,'CW 4.5','Date Regular Chronic Dialysis Began (24) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40119,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40119,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40119,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40119;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40120;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40120,'CW 4.5','Date Regular Chronic Dialysis Began (24) must be on or after 01/01/1973.',1,40120,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40120,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40120,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40120;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40121;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40121,'CW 4.5','Date Regular Chronic Dialysis Began (24) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40121,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40121,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40121,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40121;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40122;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40122,'CW 4.5','Date Regular Chronic Dialysis Began (24) cannot be after the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',1,40122,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40122,  
NAME = 'CW 4.5',  
LABEL = 'Date Regular Chronic Dialysis Began (24) cannot be after the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40122,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40122;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40123;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40123,'CW 4.5','Date Patient Started Chronic Dialysis at Current Facility (25) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page.',1,40123,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40123,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Started Chronic Dialysis at Current Facility (25) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40123,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40123;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40124;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40124,'CW 4.5','Date Patient Started Chronic Dialysis at Current Facility (25) cannot be after the Physician Signature Date (50). Edit and submit changes to the Admit Date on the admit/discharge page.',1,40124,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40124,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Started Chronic Dialysis at Current Facility (25) cannot be after the Physician Signature Date (50). Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40124,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40124;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40125;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40125,'CW 4.5','Has Patient Been Informed of Kidney Transplant Options (26) is mandatory.',1,40125,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40125,  
NAME = 'CW 4.5',  
LABEL = 'Has Patient Been Informed of Kidney Transplant Options (26) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40125,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40125;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40126;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40126,'CW 4.5','Reasons Why Patient Has Not Been Informed of Kidney Transplant Options (27) are mandatory.',1,40126,1,1,0,to_date('28-FEB-14','DD-MON-RR'),to_date('28-FEB-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40126,  
NAME = 'CW 4.5',  
LABEL = 'Reasons Why Patient Has Not Been Informed of Kidney Transplant Options (27) are mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40126,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('28-FEB-14','DD-MON-RR'),  
UPDATE_TIME = to_date('28-FEB-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40126;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40184;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40184,'CW 4.5','Facility is not eligible to complete a Supplemental CMS-2728 (Training) form for this patient.',1,40184,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40184,  
NAME = 'CW 4.5',  
LABEL = 'Facility is not eligible to complete a Supplemental CMS-2728 (Training) form for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40184,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40184;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40185;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40185,'CW 4.5','Facility is not eligible to complete a Re-entitlement CMS-2728 form (Restart Dialysis) for this patient.',1,40185,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40185,  
NAME = 'CW 4.5',  
LABEL = 'Facility is not eligible to complete a Re-entitlement CMS-2728 form (Restart Dialysis) for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40185,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40185;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40186;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40186,'CW 4.5','Facility is not eligible to complete a Re-entitlement CMS-2728 form (Dialysis after Transplant Failed) for this patient.',1,40186,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40186,  
NAME = 'CW 4.5',  
LABEL = 'Facility is not eligible to complete a Re-entitlement CMS-2728 form (Dialysis after Transplant Failed) for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40186,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40186;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40187;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40187,'CW 4.5','Receive exogenous erythropoetin timeframe (18a) should not be populated when Did patient receive exogenous erythropoetin or equivalent (18a) is No or Unknown.',1,40187,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40187,  
NAME = 'CW 4.5',  
LABEL = 'Receive exogenous erythropoetin timeframe (18a) should not be populated when Did patient receive exogenous erythropoetin or equivalent (18a) is No or Unknown.',  
ACTIVE = 1,  
SORT_ORDER = 40187,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40187;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40188;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40188,'CW 4.5','Timeframe for Nephrologist Care (18b) should not be populated when Was patient under care of nephrologist (18b) is No or Unknown.',1,40188,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40188,  
NAME = 'CW 4.5',  
LABEL = 'Timeframe for Nephrologist Care (18b) should not be populated when Was patient under care of nephrologist (18b) is No or Unknown.',  
ACTIVE = 1,  
SORT_ORDER = 40188,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40188;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40189;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40189,'CW 4.5','Timeframe for Kidney Dietitian (18c) should not be populated when Was patient under care of kidney dietitian (18c) is No or Unknown.',1,40189,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40189,  
NAME = 'CW 4.5',  
LABEL = 'Timeframe for Kidney Dietitian (18c) should not be populated when Was patient under care of kidney dietitian (18c) is No or Unknown.',  
ACTIVE = 1,  
SORT_ORDER = 40189,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40189;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40190;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40190,'CW 4.5','Reasons Patient not Informed of Transplant Options (27) should not be populated when Has Patient Been Informed of Kidney Transplant Options (26) is True.',1,40190,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40190,  
NAME = 'CW 4.5',  
LABEL = 'Reasons Patient not Informed of Transplant Options (27) should not be populated when Has Patient Been Informed of Kidney Transplant Options (26) is True.',  
ACTIVE = 1,  
SORT_ORDER = 40190,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40190;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40191;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40191,'CW 4.5','Training Completion Date (43) should not be populated when Training Completion Indicator (42) is False.',1,40191,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40191,  
NAME = 'CW 4.5',  
LABEL = 'Training Completion Date (43) should not be populated when Training Completion Indicator (42) is False.',  
ACTIVE = 1,  
SORT_ORDER = 40191,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40191;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40192;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40192,'CW 4.5','Is maturing AVF Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is AVF.',1,40192,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40192,  
NAME = 'CW 4.5',  
LABEL = 'Is maturing AVF Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is AVF.',  
ACTIVE = 1,  
SORT_ORDER = 40192,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40192;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40193;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40193,'CW 4.5','Is maturing Graft Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is Graft.',1,40193,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40193,  
NAME = 'CW 4.5',  
LABEL = 'Is maturing Graft Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is Graft.',  
ACTIVE = 1,  
SORT_ORDER = 40193,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40193;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40195;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40195,'CW 4.5','The org Form2728Id identifier exceeds the allowed length of 30 characters.',1,40195,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40195,  
NAME = 'CW 4.5',  
LABEL = 'The org Form2728Id identifier exceeds the allowed length of 30 characters.',  
ACTIVE = 1,  
SORT_ORDER = 40195,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40195;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40196;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40196,'CW 4.5','An Initial CMS-2728 Form (Dialysis) already exists for this patient.',1,40196,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40196,  
NAME = 'CW 4.5',  
LABEL = 'An Initial CMS-2728 Form (Dialysis) already exists for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40196,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40196;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40197;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40197,'CW 4.5','A Supplemental CMS-2728 Form (Dialysis) already exists for this patient.',1,40197,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40197,  
NAME = 'CW 4.5',  
LABEL = 'A Supplemental CMS-2728 Form (Dialysis) already exists for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40197,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40197;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40198;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40198,'CW 4.5','Invalid ICD-9 code. Please enter a valid ICD-9 code.',1,40198,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40198,  
NAME = 'CW 4.5',  
LABEL = 'Invalid ICD-9 code. Please enter a valid ICD-9 code.',  
ACTIVE = 1,  
SORT_ORDER = 40198,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40198;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40199;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40199,'CW 4.5','Invalid ICD-10 code. Please enter a valid ICD-10 code.',1,40199,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40199,  
NAME = 'CW 4.5',  
LABEL = 'Invalid ICD-10 code. Please enter a valid ICD-10 code.',  
ACTIVE = 1,  
SORT_ORDER = 40199,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40199;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40200;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40200,'CW 4.5','Sessions Per Week (23) is mandatory when Primary Type of Dialysis (23) is Hemodialysis.',1,40200,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40200,  
NAME = 'CW 4.5',  
LABEL = 'Sessions Per Week (23) is mandatory when Primary Type of Dialysis (23) is Hemodialysis.',  
ACTIVE = 1,  
SORT_ORDER = 40200,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40200;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40201;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40201,'CW 4.5','Hours Per Session (23) is mandatory when Primary Type of Dialysis (23) is Hemodialysis.',1,40201,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40201,  
NAME = 'CW 4.5',  
LABEL = 'Hours Per Session (23) is mandatory when Primary Type of Dialysis (23) is Hemodialysis.',  
ACTIVE = 1,  
SORT_ORDER = 40201,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40201;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40202;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40202,'CW 4.5','Is maturing Graft Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is AVF.',1,40202,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40202,  
NAME = 'CW 4.5',  
LABEL = 'Is maturing Graft Present (18d) should not be populated when What Access was Used on First Outpatient Dialysis (18d) is AVF.',  
ACTIVE = 1,  
SORT_ORDER = 40202,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40202;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40127;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40127,'CW4.5','Date of Transplant (28) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40127,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40127,  
NAME = 'CW4.5',  
LABEL = 'Date of Transplant (28) is mandatory. Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40127,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40127;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40098;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40098,'CW 4.5','Triglycerides Date (19 e) cannot be after the Physician Signature Date (50).',1,40098,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40098,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40098,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40098;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40099;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40099,'CW 4.5','Triglycerides Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40099,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40099,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40099,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40099;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40078;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40078,'CW 4.5','LDL Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40078,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40078,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40078,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40078;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40079;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40079,'CW 4.5','LDL Cholesterol Date (19 e) must be on or after 01/01/1973.',1,40079,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40079,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40079,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40079;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40100;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40100,'CW 4.5','Triglycerides Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',1,40100,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40100,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40100;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40101;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40101,'CW 4.5','Triglycerides Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40101,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40101,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40101,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40101;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40102;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40102,'CW 4.5','Triglycerides (19 e) is not in the valid range (100 - 1000).',1,40102,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40102,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides (19 e) is not in the valid range (100 - 1000).',  
ACTIVE = 1,  
SORT_ORDER = 40102,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40102;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40132;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40132,'CW4.5','Current Status of Transplant (34) is mandatory. Edit and submit changes on the treatment page.',1,40132,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40132,  
NAME = 'CW4.5',  
LABEL = 'Current Status of Transplant (34) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40132,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40132;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40133;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40133,'CW4.5','Primary Type of Treatment on the Transplant Treatment record cannot be Unknown. Edit and submit changes to the Primary Type of Treatment on the treatment page.',1,40133,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40133,  
NAME = 'CW4.5',  
LABEL = 'Primary Type of Treatment on the Transplant Treatment record cannot be Unknown. Edit and submit changes to the Primary Type of Treatment on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40133,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40133;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40215;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40215,'CW 4.5','Date Patient Started Chronic Dialysis at Current Facility (25) is mandatory.',1,40215,1,1,0,to_date('26-MAR-14','DD-MON-RR'),to_date('26-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40215,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Started Chronic Dialysis at Current Facility (25) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40215,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('26-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40215;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40216;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40216,'CW 4.5','A Re-entitlement CMS-2728 Form (Restart Dialysis) already exists for this patient.',1,40216,1,1,0,to_date('26-MAR-14','DD-MON-RR'),to_date('26-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40216,  
NAME = 'CW 4.5',  
LABEL = 'A Re-entitlement CMS-2728 Form (Restart Dialysis) already exists for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40216,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('26-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40216;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40217;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40217,'CW 4.5','A Re-entitlement CMS-2728 Form (Dialysis After Transplant Failed) already exists for this patient.',1,40217,1,1,0,to_date('26-MAR-14','DD-MON-RR'),to_date('26-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40217,  
NAME = 'CW 4.5',  
LABEL = 'A Re-entitlement CMS-2728 Form (Dialysis After Transplant Failed) already exists for this patient.',  
ACTIVE = 1,  
SORT_ORDER = 40217,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('26-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40217;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11520;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11520,'CW 4.5','The Admit Reason of {0} was replaced by the system with {1} for the submitted Admit/Discharge.',1,11520,1,1,1,to_date('04-APR-14','DD-MON-RR'),to_date('04-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11520,  
NAME = 'CW 4.5',  
LABEL = 'The Admit Reason of {0} was replaced by the system with {1} for the submitted Admit/Discharge.',  
ACTIVE = 1,  
SORT_ORDER = 11520,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('04-APR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 11520;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11521;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11521,'CW 4.5','Admit Reason cannot be updated to {0} because the current Admit Reason is {1}.',1,11521,1,1,1,to_date('04-APR-14','DD-MON-RR'),to_date('04-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11521,  
NAME = 'CW 4.5',  
LABEL = 'Admit Reason cannot be updated to {0} because the current Admit Reason is {1}.',  
ACTIVE = 1,  
SORT_ORDER = 11521,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('04-APR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 11521;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40219;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40219,'CW 4.5','The form2728Type provided does not match the form2728Type on the existing 2728 form. Edit the form2728Type and then submit.',1,40219,1,1,0,to_date('08-APR-14','DD-MON-RR'),to_date('08-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40219,  
NAME = 'CW 4.5',  
LABEL = 'The form2728Type provided does not match the form2728Type on the existing 2728 form. Edit the form2728Type and then submit.',  
ACTIVE = 1,  
SORT_ORDER = 40219,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('08-APR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('08-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40219;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40080;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40080,'CW 4.5','LDL Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',1,40080,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40080,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40080,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40080;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40081;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40081,'CW 4.5','LDL Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40081,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40081,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40081,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40081;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12998;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12998,'CW 4.0','Influenza Vaccination Not Received and Influenza Vaccination Date or Site Received are populated. Please submit the data or not received data.',1,988,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12998,  
NAME = 'CW 4.0',  
LABEL = 'Influenza Vaccination Not Received and Influenza Vaccination Date or Site Received are populated. Please submit the data or not received data.',  
ACTIVE = 1,  
SORT_ORDER = 988,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 12998;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13004;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13004,'CW 4.0','Site Received Influenza Vaccination is mandatory when Influenza Vaccination Not Received is not checked and Site Received Influenza Vaccination N/A value is not populated.',1,994,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13004,  
NAME = 'CW 4.0',  
LABEL = 'Site Received Influenza Vaccination is mandatory when Influenza Vaccination Not Received is not checked and Site Received Influenza Vaccination N/A value is not populated.',  
ACTIVE = 1,  
SORT_ORDER = 994,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13004;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13023;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13023,'CW 4.0','Hepatitis B Vaccination Not Received and either Hepatitis B Initial 1 through Hepatitis B Initial 4 are populated. Please submit the data or not received data.',1,1013,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13023,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Not Received and either Hepatitis B Initial 1 through Hepatitis B Initial 4 are populated. Please submit the data or not received data.',  
ACTIVE = 1,  
SORT_ORDER = 1013,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13023;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13057;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13057,'CW 4.0','Hepatitis B Vaccination Initial 1 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 1 was not recorded.',1,1047,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13057,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B Vaccination Initial 1 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 1 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 1047,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13057;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 13090;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (13090,'CW 4.0','Hepatitis B surface antibody (anti-HBs) Performed must be on or after 01/01/1973.',1,1080,2,1,0,to_date('14-MAY-12','DD-MON-RR'),to_date('14-MAY-12','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 13090,  
NAME = 'CW 4.0',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) Performed must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 1080,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('14-MAY-12','DD-MON-RR'),  
UPDATE_TIME = to_date('14-MAY-12','DD-MON-RR') 
	WHERE ERROR_CODE = 13090;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40082;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40082,'CW 4.5','LDL Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',1,40082,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40082,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40082,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40082;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40083;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40083,'CW 4.5','LDL Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40083,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40083,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40083,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40083;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40084;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40084,'CW 4.5','LDL Cholesterol (19 e) is not in the valid range (100 - 190).',1,40084,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40084,  
NAME = 'CW 4.5',  
LABEL = 'LDL Cholesterol (19 e) is not in the valid range (100 - 190).',  
ACTIVE = 1,  
SORT_ORDER = 40084,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40084;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40085;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40085,'CW 4.5','HDL Cholesterol Date (19 e) is mandatory.',1,40085,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40085,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40085,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40085;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40086;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40086,'CW 4.5','HDL Cholesterol Date (19 e) cannot be a future date.',1,40086,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40086,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40086,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40086;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40087;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40087,'CW 4.5','HDL Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40087,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40087,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40087,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40087;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40088;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40088,'CW 4.5','HDL Cholesterol Date (19 e) must be on or after 01/01/1973.',1,40088,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40088,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40088,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40088;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40089;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40089,'CW 4.5','HDL Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',1,40089,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40089,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40089,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40089;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40090;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40090,'CW 4.5','HDL Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40090,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40090,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40090,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40090;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40091;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40091,'CW 4.5','HDL Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',1,40091,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40091,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) must be within one year prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40091,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40091;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40092;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40092,'CW 4.5','HDL Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40092,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40092,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol Date (19 e) must be within one year prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40092,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40092;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40093;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40093,'CW 4.5','HDL Cholesterol (19 e) is not in the valid range (35 - 60).',1,40093,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40093,  
NAME = 'CW 4.5',  
LABEL = 'HDL Cholesterol (19 e) is not in the valid range (35 - 60).',  
ACTIVE = 1,  
SORT_ORDER = 40093,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40093;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40094;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40094,'CW 4.5','Triglycerides Date (19 e) is mandatory.',1,40094,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40094,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40094,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40094;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40095;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40095,'CW 4.5','Triglycerides Date (19 e) cannot be a future date.',1,40095,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40095,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40095,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40095;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40096;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40096,'CW 4.5','Triglycerides Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40096,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40096,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40096,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40096;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40097;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40097,'CW 4.5','Triglycerides Date (19 e) must be on or after 01/01/1973.',1,40097,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40097,  
NAME = 'CW 4.5',  
LABEL = 'Triglycerides Date (19 e) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40097,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40097;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40208;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40208,'CW 4.5','Serum Albumin Lower Limit (19 a.2.) and/or Lab Method (19 a.3.) cannot be provided when Serum Albumin (19.a.1) has no value.',1,40208,1,1,0,to_date('07-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40208,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Lower Limit (19 a.2.) and/or Lab Method (19 a.3.) cannot be provided when Serum Albumin (19.a.1) has no value.',  
ACTIVE = 1,  
SORT_ORDER = 40208,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40208;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40214;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40214,'CW 4.5','Valid range for Sessions Per Week (23) is 1-7.',1,40214,1,1,0,to_date('21-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40214,  
NAME = 'CW 4.5',  
LABEL = 'Valid range for Sessions Per Week (23) is 1-7.',  
ACTIVE = 1,  
SORT_ORDER = 40214,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('21-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40214;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12682;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12682,'CW 4.4','AV Fistula Usable Date N/A should not be provided based on the Current Access Type populated.',1,816,2,17,1,to_date('26-DEC-13','DD-MON-RR'),to_date('26-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12682,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula Usable Date N/A should not be provided based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 816,  
CATEGORY = 2,  
SUB_CATEGORY = 17,  
IS_WARNING = 1,  
CREATE_TIME = to_date('26-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12682;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12683;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12683,'CW 4.4','Maturing AVF Present N/A should not be provided based on the Current Access Type populated.',1,817,2,17,1,to_date('26-DEC-13','DD-MON-RR'),to_date('26-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12683,  
NAME = 'CW 4.4',  
LABEL = 'Maturing AVF Present N/A should not be provided based on the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 817,  
CATEGORY = 2,  
SUB_CATEGORY = 17,  
IS_WARNING = 1,  
CREATE_TIME = to_date('26-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12683;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12684;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12684,'CW 4.4','AV Graft Maturing should not be submitted based upon the Current Access Type populated.',1,817,2,17,0,to_date('26-DEC-13','DD-MON-RR'),to_date('26-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12684,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft Maturing should not be submitted based upon the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 817,  
CATEGORY = 2,  
SUB_CATEGORY = 17,  
IS_WARNING = 0,  
CREATE_TIME = to_date('26-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12684;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12685;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12685,'CW 4.4','AV Graft Maturing N/A should not be submitted based upon the Current Access Type populated.',1,817,2,17,1,to_date('26-DEC-13','DD-MON-RR'),to_date('26-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12685,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft Maturing N/A should not be submitted based upon the Current Access Type populated.',  
ACTIVE = 1,  
SORT_ORDER = 817,  
CATEGORY = 2,  
SUB_CATEGORY = 17,  
IS_WARNING = 1,  
CREATE_TIME = to_date('26-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('26-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12685;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40134;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40134,'CW 4.5','Training Dialysis Facility (38) is mandatory.',1,40134,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40134,  
NAME = 'CW 4.5',  
LABEL = 'Training Dialysis Facility (38) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40134,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40134;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40135;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40135,'CW 4.5','Training Dialysis Facility (38) is mandatory if Section D is populated.',1,40135,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40135,  
NAME = 'CW 4.5',  
LABEL = 'Training Dialysis Facility (38) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40135,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40135;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40136;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40136,'CW 4.5','Date Training Began (40) cannot be a future date.',1,40136,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40136,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40136,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40136;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40137;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40137,'CW 4.5','Date Training Began (40) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40137,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40137,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40137,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40137;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40138;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40138,'CW 4.5','Date Training Began (40) must be on or after 01/01/1973.',1,40138,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40138,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40138,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40138;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40139;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40139,'CW 4.5','Date Training Began (40) cannot be after the Training Physician Signature Date (44).',1,40139,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40139,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) cannot be after the Training Physician Signature Date (44).',  
ACTIVE = 1,  
SORT_ORDER = 40139,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40139;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40140;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40140,'CW 4.5','Name of Training Dialysis Facility (38) selected is not an open facility as of the Date Training Began (40).',1,40140,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40140,  
NAME = 'CW 4.5',  
LABEL = 'Name of Training Dialysis Facility (38) selected is not an open facility as of the Date Training Began (40).',  
ACTIVE = 1,  
SORT_ORDER = 40140,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40140;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40141;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40141,'CW 4.5','Date Training Began (40) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40141,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40141,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40141,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40141;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40142;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40142,'CW 4.5','Date Training Began (40) must be prior to the end of the 3rd month after the patient''''s Date Regular Chronic Dialysis Began (24).',1,40142,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40142,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) must be prior to the end of the 3rd month after the patient''''s Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40142,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40142;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40143;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40143,'CW 4.5','Date Training Began (40) cannot be more than 30 days prior to the patient''''s Date Regular Chronic Dialysis Began (24).',1,40143,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40143,  
NAME = 'CW 4.5',  
LABEL = 'Date Training Began (40) cannot be more than 30 days prior to the patient''''s Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40143,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40143;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40144;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40144,'CW 4.5','Type of Training (41) is mandatory.',1,40144,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40144,  
NAME = 'CW 4.5',  
LABEL = 'Type of Training (41) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40144,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40144;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40145;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40145,'CW 4.5','Type of Training (41) is mandatory if Section D is populated.',1,40145,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40145,  
NAME = 'CW 4.5',  
LABEL = 'Type of Training (41) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40145,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40145;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40146;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40146,'CW 4.5','Type of Training (41) and Primary Type of Dialysis (23) must match. Edit and submit changes to the Primary Type of Treatment on the treatment page.',1,40146,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40146,  
NAME = 'CW 4.5',  
LABEL = 'Type of Training (41) and Primary Type of Dialysis (23) must match. Edit and submit changes to the Primary Type of Treatment on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40146,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40146;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40147;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40147,'CW 4.5','Hemodialysis Training Setting (41) is mandatory.',1,40147,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40147,  
NAME = 'CW 4.5',  
LABEL = 'Hemodialysis Training Setting (41) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40147,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40147;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40148;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40148,'CW 4.5','Hemodialysis Training Setting (41) and Primary Dialysis Setting (22) must match. Edit and submit changes to the Primary Dialysis Setting on the treatment page.',1,40148,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40148,  
NAME = 'CW 4.5',  
LABEL = 'Hemodialysis Training Setting (41) and Primary Dialysis Setting (22) must match. Edit and submit changes to the Primary Dialysis Setting on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40148,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40148;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40149;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40149,'CW 4.5','Training Completion Indicator (42) is mandatory.',1,40149,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40149,  
NAME = 'CW 4.5',  
LABEL = 'Training Completion Indicator (42) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40149,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40149;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40150;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40150,'CW 4.5','Training Completion Indicator (42) is mandatory if Section D is populated.',1,40150,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40150,  
NAME = 'CW 4.5',  
LABEL = 'Training Completion Indicator (42) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40150,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40150;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40151;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40151,'CW 4.5','Date Patient Completed or is Expected to Complete Training (43) is mandatory.',1,40151,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40151,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Completed or is Expected to Complete Training (43) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40151,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40151;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40152;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40152,'CW 4.5','Date Patient Completed or is Expected to Complete Training (43) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40152,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40152,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Completed or is Expected to Complete Training (43) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40152,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40152;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40153;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40153,'CW 4.5','Date Patient Completed or is Expected to Complete Training (43) must be on or after 01/01/1973.',1,40153,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40153,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Completed or is Expected to Complete Training (43) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40153,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40153;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40154;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40154,'CW 4.5','Date Patient Completed or is Expected to Complete Training (43) cannot be prior to the Date Training Began [{0}] (40).',1,40154,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40154,  
NAME = 'CW 4.5',  
LABEL = 'Date Patient Completed or is Expected to Complete Training (43) cannot be prior to the Date Training Began [{0}] (40).',  
ACTIVE = 1,  
SORT_ORDER = 40154,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40154;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40155;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40155,'CW 4.5','Training Completion Indicator (42) indicates that the patient is not expected to complete training.',1,40155,1,1,1,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40155,  
NAME = 'CW 4.5',  
LABEL = 'Training Completion Indicator (42) indicates that the patient is not expected to complete training.',  
ACTIVE = 1,  
SORT_ORDER = 40155,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40155;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40156;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40156,'CW 4.5','Training Physician Name (44) is mandatory.',1,40156,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40156,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Name (44) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40156,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40156;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40157;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40157,'CW 4.5','Training Physician Name (44) is mandatory if Section D is populated.',1,40157,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40157,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Name (44) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40157,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40157;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40158;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40158,'CW 4.5','Training Physician Signature Date (44) is mandatory.',1,40158,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40158,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40158,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40158;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40159;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40159,'CW 4.5','Training Physician Signature Date (44) is mandatory if Section D is populated.',1,40159,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40159,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40159,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40159;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40160;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40160,'CW 4.5','Training Physician Signature Date (44) cannot be a future date.',1,40160,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40160,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40160,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40160;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40161;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40161,'CW 4.5','Training Physician Signature Date (44) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40161,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40161,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40161,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40161;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40162;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40162,'CW 4.5','Training Physician Signature Date (44) must be on or after 01/01/1973.',1,40162,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40162,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40162,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40162;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40163;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40163,'CW 4.5','Training Physician Signature Date (44) cannot be prior to the Date Training Began [{0}] (40).',1,40163,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40163,  
NAME = 'CW 4.5',  
LABEL = 'Training Physician Signature Date (44) cannot be prior to the Date Training Began [{0}] (40).',  
ACTIVE = 1,  
SORT_ORDER = 40163,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40163;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40002;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40002,'CW4.5','Date Training Began (40) is mandatory.',1,40002,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('21-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40002,  
NAME = 'CW4.5',  
LABEL = 'Date Training Began (40) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40002,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('21-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40002;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40003;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40003,'CW4.5','Date Training Began (40) is mandatory if Section D is populated.',1,40003,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('21-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40003,  
NAME = 'CW4.5',  
LABEL = 'Date Training Began (40) is mandatory if Section D is populated.',  
ACTIVE = 1,  
SORT_ORDER = 40003,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('21-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40003;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40203;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40203,'CW 4.5','GFR Calculation Method is mandatory.',1,40203,1,1,0,to_date('17-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40203,  
NAME = 'CW 4.5',  
LABEL = 'GFR Calculation Method is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40203,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40203;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40204;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40204,'CW 4.5','GFR cannot be calculated. Please enter missing data for (13) Height.',1,40204,1,1,0,to_date('17-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40204,  
NAME = 'CW 4.5',  
LABEL = 'GFR cannot be calculated. Please enter missing data for (13) Height.',  
ACTIVE = 1,  
SORT_ORDER = 40204,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40204;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40205;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40205,'CW 4.5','GFR cannot be calculated. Please enter missing data for (19 b) Serum Creatinine.',1,40205,1,1,0,to_date('17-MAR-14','DD-MON-RR'),to_date('17-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40205,  
NAME = 'CW 4.5',  
LABEL = 'GFR cannot be calculated. Please enter missing data for (19 b) Serum Creatinine.',  
ACTIVE = 1,  
SORT_ORDER = 40205,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('17-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40205;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40209;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40209,'CW 4.5','Valid range for Hours Per Session (23) is 1.0 - 10.0.',1,40209,1,1,0,to_date('17-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40209,  
NAME = 'CW 4.5',  
LABEL = 'Valid range for Hours Per Session (23) is 1.0 - 10.0.',  
ACTIVE = 1,  
SORT_ORDER = 40209,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40209;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40210;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40210,'CW 4.5','Glomerular Filtration Rate (GFR) value is 15 or greater. Please add a justification in the Remarks field.',1,40210,1,1,0,to_date('17-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40210,  
NAME = 'CW 4.5',  
LABEL = 'Glomerular Filtration Rate (GFR) value is 15 or greater. Please add a justification in the Remarks field.',  
ACTIVE = 1,  
SORT_ORDER = 40210,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40210;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40211;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40211,'CW 4.5','Glomerular Filtration Rate (GFR) value is 15 or greater.',1,40211,1,1,1,to_date('17-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40211,  
NAME = 'CW 4.5',  
LABEL = 'Glomerular Filtration Rate (GFR) value is 15 or greater.',  
ACTIVE = 1,  
SORT_ORDER = 40211,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('17-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40211;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40164;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40164,'CW 4.5','Attending Physician Name (46) is mandatory. Edit and submit changes on the treatment page.',1,40164,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40164,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Name (46) is mandatory. Edit and submit changes on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40164,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40164;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40165;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40165,'CW 4.5','Attending Physician Signature Date (50) is mandatory.',1,40165,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40165,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40165,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40165;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40166;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40166,'CW 4.5','Attending Physician Signature Date (50) cannot be a future date.',1,40166,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40166,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40166,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40166;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40167;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40167,'CW 4.5','Attending Physician Signature Date (50) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40167,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40167,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40167,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40167;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40168;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40168,'CW 4.5','Attending Physician Signature Date (50) must be on or after 01/01/1973.',1,40168,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40168,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40168,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40168;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40169;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40169,'CW 4.5','Attending Physician Signature Date (50) cannot be prior to the Date Regular Chronic Dialysis Began [{0}] (24).',1,40169,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40169,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be prior to the Date Regular Chronic Dialysis Began [{0}] (24).',  
ACTIVE = 1,  
SORT_ORDER = 40169,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40169;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40170;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40170,'CW 4.5','Attending Physician Signature Date (50) cannot be prior to the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',1,40170,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40170,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be prior to the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40170,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40170;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40171;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40171,'CW 4.5','Attending Physician Signature Date (50) cannot be prior to the Date of Transplant [{0}] (28). Edit and submit changes to the Admit Date on the admit/discharge page or Transplant Date on the treatment page.',1,40171,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40171,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be prior to the Date of Transplant [{0}] (28). Edit and submit changes to the Admit Date on the admit/discharge page or Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40171,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40171;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40172;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40172,'CW 4.5','Attending Physician Signature Date (50) cannot be prior to the Transplant Preparation Admission Date [{0}] (31). Edit and submit changes to the Date Patient Admitted for Transplant on the treatment page.',1,40172,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40172,  
NAME = 'CW 4.5',  
LABEL = 'Attending Physician Signature Date (50) cannot be prior to the Transplant Preparation Admission Date [{0}] (31). Edit and submit changes to the Date Patient Admitted for Transplant on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40172,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40172;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40173;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40173,'CW 4.5','Patient Signature Date (55) is mandatory - If the patient is deceased, save this form and enter the patient''''s Date of Death on the Patient Attributes page, then return to this form and submit this 2728.',1,40173,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40173,  
NAME = 'CW 4.5',  
LABEL =  save this form and enter the patient''''s Date of Death on the Patient Attributes page,  
ACTIVE = 'Patient Signature Date (55) is mandatory - If the patient is deceased, then return to this form and submit this 2728.',  
SORT_ORDER = 1,  
CATEGORY = 40173,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = 0,  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40173;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40174;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40174,'CW 4.5','Patient Signature Date (55) cannot be a future date.',1,40174,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40174,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40174,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40174;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40175;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40175,'CW 4.5','Patient Signature Date (55) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40175,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40175,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40175,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40175;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40176;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40176,'CW 4.5','Patient Signature Date (55) must be on or after 01/01/1973.',1,40176,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40176,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40176,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40176;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40177;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40177,'CW 4.5','Patient Signature Date (55) cannot be prior to the Date of Transplant [{0}] (28). Edit the Admit Date on the Admit/Discharge page and then submit, or edit the Transplant Date on the Treatment Summary page and then submit.',1,40177,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40177,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to the Date of Transplant [{0}] (28). Edit the Admit Date on the Admit/Discharge page and then submit, or edit the Transplant Date on the Treatment Summary page and then submit.',  
ACTIVE = 1,  
SORT_ORDER = 40177,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40177;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40178;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40178,'CW 4.5','Patient Signature Date (55) cannot be prior to the Transplant Preparation Admission Date [{0}] (31). Edit the Date Patient Admitted for Transplant on the Treatment Summary page and then submit.',1,40178,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40178,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to the Transplant Preparation Admission Date [{0}] (31). Edit the Date Patient Admitted for Transplant on the Treatment Summary page and then submit.',  
ACTIVE = 1,  
SORT_ORDER = 40178,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40178;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40179;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40179,'CW 4.5','Patient Signature Date (55) cannot be prior to the Date Regular Chronic Dialysis Began [{0}] (24).',1,40179,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40179,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to the Date Regular Chronic Dialysis Began [{0}] (24).',  
ACTIVE = 1,  
SORT_ORDER = 40179,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40179;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40180;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40180,'CW 4.5','Patient Signature Date (55) cannot be prior to the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',1,40180,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40180,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to the Date Patient Started Chronic Dialysis at Current Facility [{0}] (25). Edit and submit changes to the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40180,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40180;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40181;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40181,'CW 4.5','GFR value is 15 or greater. Please add justification in the Remarks field.',1,40181,1,1,1,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40181,  
NAME = 'CW 4.5',  
LABEL = 'GFR value is 15 or greater. Please add justification in the Remarks field.',  
ACTIVE = 1,  
SORT_ORDER = 40181,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40181;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40182;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40182,'CW 4.5','Patient Signature Date (55) cannot be prior to Initial 2728 Signature Date [{0}].',1,40182,1,1,0,to_date('04-MAR-14','DD-MON-RR'),to_date('04-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40182,  
NAME = 'CW 4.5',  
LABEL = 'Patient Signature Date (55) cannot be prior to Initial 2728 Signature Date [{0}].',  
ACTIVE = 1,  
SORT_ORDER = 40182,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('04-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40182;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20200;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20200,'CW4.1','NPI is not in the correct format.',1,100,1,1,1,to_date('20-DEC-13','DD-MON-RR'),to_date('20-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20200,  
NAME = 'CW4.1',  
LABEL = 'NPI is not in the correct format.',  
ACTIVE = 1,  
SORT_ORDER = 100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('20-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('20-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20200;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20201;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20201,'CW4.1','NPI is not a valid field length.',1,100,1,1,1,to_date('20-DEC-13','DD-MON-RR'),to_date('20-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20201,  
NAME = 'CW4.1',  
LABEL = 'NPI is not a valid field length.',  
ACTIVE = 1,  
SORT_ORDER = 100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('20-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('20-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20201;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20202;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20202,'CW4.1','NPI is not a valid value.',1,100,1,1,1,to_date('20-DEC-13','DD-MON-RR'),to_date('20-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20202,  
NAME = 'CW4.1',  
LABEL = 'NPI is not a valid value.',  
ACTIVE = 1,  
SORT_ORDER = 100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('20-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('20-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20202;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 20203;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (20203,'CW4.1','UPIN or NPI is mandatory for personnel with a {0} position.',1,100,1,1,1,to_date('20-DEC-13','DD-MON-RR'),to_date('20-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 20203,  
NAME = 'CW4.1',  
LABEL = 'UPIN or NPI is mandatory for personnel with a {0} position.',  
ACTIVE = 1,  
SORT_ORDER = 100,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('20-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('20-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 20203;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40206;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40206,'CW 4.5','Cannot select Modification of Diet in Renal Disease (MDRD) or Isotope Dilution Mass Spectrometry (IDMS) Glomerular Filtration Rate (GFR) calculation method for a patient under the age of 18.',1,40206,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40206,  
NAME = 'CW 4.5',  
LABEL = 'Cannot select Modification of Diet in Renal Disease (MDRD) or Isotope Dilution Mass Spectrometry (IDMS) Glomerular Filtration Rate (GFR) calculation method for a patient under the age of 18.',  
ACTIVE = 1,  
SORT_ORDER = 40206,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40206;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40207;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40207,'CW 4.5','Cannot select OMDRD (Schwartz Equation) or Bedside Isotope Dilution Mass Spectrometry (BIDMS) Glomerular Filtration Rate (GFR) calculation method for a patient 18 years of age or older.',1,40207,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40207,  
NAME = 'CW 4.5',  
LABEL = 'Cannot select OMDRD (Schwartz Equation) or Bedside Isotope Dilution Mass Spectrometry (BIDMS) Glomerular Filtration Rate (GFR) calculation method for a patient 18 years of age or older.',  
ACTIVE = 1,  
SORT_ORDER = 40207,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40207;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12001;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12001,'CW 4.4','Reason No Influenza Vaccination and Influenza Exclusion Reason cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',1,12001,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12001,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Influenza Vaccination and Influenza Exclusion Reason cannot be populated when Influenza Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 12001,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12001;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12002;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12002,'CW 4.4','Reason No Hepatitis B Vaccination and Hepatitis B Exclusion Reason cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',1,12002,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12002,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Hepatitis B Vaccination and Hepatitis B Exclusion Reason cannot be populated when Hepatitis B Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 12002,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12002;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12003;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12003,'CW 4.4','Reason No Pneumococcal Vaccination and Pneumococcal Exclusion Reason cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''.',1,12003,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12003,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Pneumococcal Vaccination and Pneumococcal Exclusion Reason cannot be populated when Pneumococcal Vaccination Not Received is set to ''''False''''.',  
ACTIVE = 1,  
SORT_ORDER = 12003,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12003;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12004;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12004,'CW 4.4','Hepatitis B Exclusion Reason value and Hepatitis B Exclusion Reason N/A value are both populated. Please submit only one value.',1,12004,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12004,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Exclusion Reason value and Hepatitis B Exclusion Reason N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12004,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12004;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12053;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12053,'CW 4.4','Reason No Influenza Vaccination value and Reason No Influenza Vaccination N/A value are both populated. Please submit only one value.',1,12053,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12053,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Influenza Vaccination value and Reason No Influenza Vaccination N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12053,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12053;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12054;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12054,'CW 4.4','Influenza Exclusion Reason value and Influenza Exclusion Reason N/A value are both populated. Please submit only one value.',1,12054,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12054,  
NAME = 'CW 4.4',  
LABEL = 'Influenza Exclusion Reason value and Influenza Exclusion Reason N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12054,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12054;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12055;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12055,'CW 4.4','Influenza Vaccination Date and Influenza Vaccination Date N/A value are both populated. Please submit only one value.',1,12055,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12055,  
NAME = 'CW 4.4',  
LABEL = 'Influenza Vaccination Date and Influenza Vaccination Date N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12055,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12055;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12056;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12056,'CW 4.4','Hepatitis B surface antibody (anti-HBs) is mandatory. Select N/A if Hepatitis B surface antibody (anti-HBs) was not recorded for the patient for the clinical month.',1,12056,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('30-JAN-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12056,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) is mandatory. Select N/A if Hepatitis B surface antibody (anti-HBs) was not recorded for the patient for the clinical month.',  
ACTIVE = 1,  
SORT_ORDER = 12056,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('30-JAN-14','DD-MON-RR') 
	WHERE ERROR_CODE = 12056;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12057;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12057,'CW 4.4','Hepatitis B surface antibody (anti-HBs) N/A and Hepatitis B surface antibody (anti-HBs) value and/or date are both populated. Please submit only one value.',1,12057,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12057,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B surface antibody (anti-HBs) N/A and Hepatitis B surface antibody (anti-HBs) value and/or date are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12057,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12057;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11512;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11512,'CW 4.4','Pneumococcal Vaccination Year value and Pneumococcal Vaccination Year N/A value are both populated. Please submit only one value.',1,11512,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11512,  
NAME = 'CW 4.4',  
LABEL = 'Pneumococcal Vaccination Year value and Pneumococcal Vaccination Year N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 11512,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11512;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11513;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11513,'CW 4.4','Hepatitis B Booster Date 1 value and Hepatitis B Booster Date 1 N/A value are both populated. Please submit only one value.',1,11513,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11513,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 1 value and Hepatitis B Booster Date 1 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 11513,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11513;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12094;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12094,'CW 4.4','Reason No Pneumococcal Vaccination value and Reason No Pneumococcal Vaccination N/A value are both populated. Please submit only one value.',1,12094,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12094,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Pneumococcal Vaccination value and Reason No Pneumococcal Vaccination N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12094,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12094;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12096;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12096,'CW 4.4','Pneumococcal Exclusion Reason value and Pneumococcal Exclusion Reason N/A value are both populated. Please submit only one value.',1,12096,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12096,  
NAME = 'CW 4.4',  
LABEL = 'Pneumococcal Exclusion Reason value and Pneumococcal Exclusion Reason N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12096,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12096;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12654;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12654,'CW 4.4','Hepatitis B Vaccination Initial 1 value and Hepatitis B Vaccination Initial 1 N/A value are both populated. Please submit only one value.',1,12654,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12654,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 1 value and Hepatitis B Vaccination Initial 1 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12654,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12654;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12655;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12655,'CW 4.4','Hepatitis B Vaccination Initial 2 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 2 was not recorded.',1,12655,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12655,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 2 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 2 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12655,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12655;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12656;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12656,'CW 4.4','Hepatitis B Vaccination Initial 2 value and Hepatitis B Vaccination Initial 2 N/A value are both populated. Please submit only one value.',1,12656,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12656,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 2 value and Hepatitis B Vaccination Initial 2 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12656,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12656;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12657;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12657,'CW 4.4','Hepatitis B Vaccination Initial 3 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 3 was not recorded.',1,12657,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12657,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 3 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 3 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12657,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12657;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12658;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12658,'CW 4.4','Hepatitis B Vaccination Initial 3 value and Hepatitis B Vaccination Initial 3 N/A value are both populated. Please submit only one value.',1,12658,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12658,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 3 value and Hepatitis B Vaccination Initial 3 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12658,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12658;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12659;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12659,'CW 4.4','Hepatitis B Vaccination Initial 4 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 4 was not recorded.',1,12659,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12659,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 4 is mandatory when no Hepatitis B Booster Date is populated and Hepatitis B Vaccination Not Received is not checked. Select N/A if the Vaccination Initial 4 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12659,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12659;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12660;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12660,'CW 4.4','Hepatitis B Vaccination Initial 4 value and Hepatitis B Vaccination Initial 4 N/A value are both populated. Please submit only one value.',1,12660,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12660,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Vaccination Initial 4 value and Hepatitis B Vaccination Initial 4 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12660,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12660;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12661;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12661,'CW 4.4','Reason No Hepatitis B Vaccination value and Reason No Hepatitis B Vaccination N/A value are both populated. Please submit only one value.',1,12661,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12661,  
NAME = 'CW 4.4',  
LABEL = 'Reason No Hepatitis B Vaccination value and Reason No Hepatitis B Vaccination N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12661,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12661;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12879;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12879,'CW 4.4','Hepatitis B Booster Date 1 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 1 was not recorded.',1,12879,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12879,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 1 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 1 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12879,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12879;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12880;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12880,'CW 4.4','Hepatitis B Booster Date 2 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 2 was not recorded.',1,12880,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12880,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 2 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 2 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12880,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12880;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12881;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12881,'CW 4.4','Hepatitis B Booster Date 2 value and Hepatitis B Booster Date 2 N/A value are both populated. Please submit only one value.',1,12881,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12881,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 2 value and Hepatitis B Booster Date 2 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12881,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12881;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12882;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12882,'CW 4.4','Hepatitis B Booster Date 3 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 3 was not recorded.',1,12882,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12882,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 3 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 3 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12882,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12882;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12883;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12883,'CW 4.4','Hepatitis B Booster Date 3 value and Hepatitis B Booster Date 3 N/A value are both populated. Please submit only one value.',1,12883,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12883,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 3 value and Hepatitis B Booster Date 3 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12883,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12883;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12884;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12884,'CW 4.4','Hepatitis B Booster Date 4 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 4 was not recorded.',1,12884,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12884,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 4 is mandatory when Hepatitis B Not Received is not checked. Select N/A if Booster Date 4 was not recorded.',  
ACTIVE = 1,  
SORT_ORDER = 12884,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12884;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 12837;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (12837,'CW 4.4','Hepatitis B Booster Date 4 value and Hepatitis B Booster Date 4 N/A value are both populated. Please submit only one value.',1,12837,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 12837,  
NAME = 'CW 4.4',  
LABEL = 'Hepatitis B Booster Date 4 value and Hepatitis B Booster Date 4 N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 12837,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 12837;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11507;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11507,'CW 4.4','Site Received Influenza Vaccination value and Site Received Influenza Vaccination N/A value are both populated. Please submit only one value.',1,11507,2,0,0,to_date('02-DEC-13','DD-MON-RR'),to_date('02-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11507,  
NAME = 'CW 4.4',  
LABEL = 'Site Received Influenza Vaccination value and Site Received Influenza Vaccination N/A value are both populated. Please submit only one value.',  
ACTIVE = 1,  
SORT_ORDER = 11507,  
CATEGORY = 2,  
SUB_CATEGORY = 0,  
IS_WARNING = 0,  
CREATE_TIME = to_date('02-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('02-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11507;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11508;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11508,'CW 4.4','Date Patient Admitted for Transplant cannot be prior to the patient''''s Date of Birth ({0}).',1,11508,1,1,0,to_date('27-NOV-13','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11508,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant cannot be prior to the patient''''s Date of Birth ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 11508,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11508;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11509;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11509,'CW 4.4','Date Patient Admitted for Transplant cannot be a future date.',1,11509,1,1,0,to_date('27-NOV-13','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11509,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 11509,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11509;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11510;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11510,'CW 4.4','Date Patient Admitted for Transplant cannot be after the patient''''s Date of Death ({0}).',1,11510,1,1,0,to_date('27-NOV-13','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11510,  
NAME = 'CW 4.4',  
LABEL = 'Date Patient Admitted for Transplant cannot be after the patient''''s Date of Death ({0}).',  
ACTIVE = 1,  
SORT_ORDER = 11510,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11510;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11511;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11511,'CW 4.4','The admission facility is not an open facility as of the entered Transplant Date.',1,11511,1,1,0,to_date('27-NOV-13','DD-MON-RR'),to_date('27-NOV-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11511,  
NAME = 'CW 4.4',  
LABEL = 'The admission facility is not an open facility as of the entered Transplant Date.',  
ACTIVE = 1,  
SORT_ORDER = 11511,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('27-NOV-13','DD-MON-RR'),  
UPDATE_TIME = to_date('27-NOV-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11511;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40103;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40103,'CW4.5','Mailing Address (5) is mandatory - missing Line 1. Edit and submit changes on the patient edit page.',1,40103,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40103,  
NAME = 'CW4.5',  
LABEL = 'Mailing Address (5) is mandatory - missing Line 1. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40103,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40103;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40104;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40104,'CW4.5','Mailing Address (5) is mandatory - missing Zip Code. Edit and submit changes on the patient edit page.',1,40104,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40104,  
NAME = 'CW4.5',  
LABEL = 'Mailing Address (5) is mandatory - missing Zip Code. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40104,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40104;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30020;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30020,'CW 4.4','AV Fistula State may not be set to Not yet present.',1,1224,2,1,0,to_date('05-DEC-13','DD-MON-RR'),to_date('05-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30020,  
NAME = 'CW 4.4',  
LABEL = 'AV Fistula State may not be set to Not yet present.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('05-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30020;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30021;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30021,'CW 4.4','AV Graft State may not be set to Not yet present.',1,1224,2,1,0,to_date('05-DEC-13','DD-MON-RR'),to_date('05-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30021,  
NAME = 'CW 4.4',  
LABEL = 'AV Graft State may not be set to Not yet present.',  
ACTIVE = 1,  
SORT_ORDER = 1224,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('05-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('05-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 30021;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40105;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40105,'CW4.5','Mailing Address (5) is mandatory - missing City. Edit and submit changes on the patient edit page.',1,40105,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40105,  
NAME = 'CW4.5',  
LABEL = 'Mailing Address (5) is mandatory - missing City. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40105,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40105;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40106;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40106,'CW4.5','Mailing Address (5) is mandatory - missing State. Edit and submit changes on the patient edit page.',1,40106,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40106,  
NAME = 'CW4.5',  
LABEL = 'Mailing Address (5) is mandatory - missing State. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40106,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40106;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40107;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40107,'CW4.5','Ethnicity (8) is mandatory. Edit and submit changes on the patient edit page.',1,40107,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40107,  
NAME = 'CW4.5',  
LABEL = 'Ethnicity (8) is mandatory. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40107,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40107;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40108;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40108,'CW4.4','Race (10) is mandatory. Edit and submit changes on the patient edit page.',1,40108,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40108,  
NAME = 'CW4.4',  
LABEL = 'Race (10) is mandatory. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40108,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40108;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40109;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40109,'CW4.5','Country/Area of Origin or Ancestry (9) is mandatory. Edit and submit changes on the patient edit page.',1,40109,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40109,  
NAME = 'CW4.5',  
LABEL = 'Country/Area of Origin or Ancestry (9) is mandatory. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40109,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40109;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40110;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40110,'CW4.5','Name of Enrolled/Principal Tribe (10) is mandatory. Edit and submit changes on the patient edit page.',1,40110,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40110,  
NAME = 'CW4.5',  
LABEL = 'Name of Enrolled/Principal Tribe (10) is mandatory. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40110,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40110;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40111;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40111,'CW4.5','Current Employment Status (16) is required. Edit and submit changes on the patient edit page.',1,40111,1,1,0,to_date('06-MAR-14','DD-MON-RR'),to_date('06-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40111,  
NAME = 'CW4.5',  
LABEL = 'Current Employment Status (16) is required. Edit and submit changes on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40111,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('06-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('06-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40111;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40218;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40218,'CW 4.5','The Admit Date and Date Patient Started Chronic Dialysis at Current Facility (Field 25) must match. Edit and submit changes to the Date Patient Started Chronic Dialysis at Current Facility (Field 25) or the Admit Date on the admit/discharge page.',1,40218,1,1,0,to_date('07-APR-14','DD-MON-RR'),to_date('16-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40218,  
NAME = 'CW 4.5',  
LABEL = 'The Admit Date and Date Patient Started Chronic Dialysis at Current Facility (Field 25) must match. Edit and submit changes to the Date Patient Started Chronic Dialysis at Current Facility (Field 25) or the Admit Date on the admit/discharge page.',  
ACTIVE = 1,  
SORT_ORDER = 40218,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('07-APR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('16-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40218;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 30022;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (30022,'CW 4.5','Invalid Performance Year in attestation file. Valid Performance Year for current attestations is {0}.',1,30022,2,1,0,to_date('20-MAR-14','DD-MON-RR'),to_date('20-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 30022,  
NAME = 'CW 4.5',  
LABEL = 'Invalid Performance Year in attestation file. Valid Performance Year for current attestations is {0}.',  
ACTIVE = 1,  
SORT_ORDER = 30022,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('20-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('20-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 30022;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11514;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11514,'CW 4.4','End Date of Birth cannot be a future date.',1,11514,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11514,  
NAME = 'CW 4.4',  
LABEL = 'End Date of Birth cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 11514,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11514;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11515;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11515,'CW 4.4','End Date of Death cannot be a future date.',1,11515,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11515,  
NAME = 'CW 4.4',  
LABEL = 'End Date of Death cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 11515,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11515;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11516;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11516,'CW 4.4','Date of Birth Begin must be after 01/01/1850.',1,11516,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11516,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth Begin must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11516,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11516;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11517;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11517,'CW 4.4','Date of Birth End must be after 01/01/1850.',1,11517,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11517,  
NAME = 'CW 4.4',  
LABEL = 'Date of Birth End must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11517,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11517;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11518;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11518,'CW 4.4','Date of Death Begin must be after 01/01/1850.',1,11518,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11518,  
NAME = 'CW 4.4',  
LABEL = 'Date of Death Begin must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11518,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11518;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 11519;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (11519,'CW 4.4','Date of Death End must be after 01/01/1850.',1,11519,2,1,0,to_date('04-DEC-13','DD-MON-RR'),to_date('04-DEC-13','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 11519,  
NAME = 'CW 4.4',  
LABEL = 'Date of Death End must be after 01/01/1850.',  
ACTIVE = 1,  
SORT_ORDER = 11519,  
CATEGORY = 2,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('04-DEC-13','DD-MON-RR'),  
UPDATE_TIME = to_date('04-DEC-13','DD-MON-RR') 
	WHERE ERROR_CODE = 11519;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40005;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40005,'CW 4.5','Current Medical Coverage (12) is mandatory.',1,40005,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40005,  
NAME = 'CW 4.5',  
LABEL = 'Current Medical Coverage (12) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40005,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40005;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40006;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40006,'CW 4.5','Current Medical Coverage (12) is invalid - None and other values cannot be checked.',1,40006,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40006,  
NAME = 'CW 4.5',  
LABEL = 'Current Medical Coverage (12) is invalid - None and other values cannot be checked.',  
ACTIVE = 1,  
SORT_ORDER = 40006,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40006;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40007;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40007,'CW 4.5','Current Medical Coverage (12) is invalid - Missing Medicare value.',1,40007,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40007,  
NAME = 'CW 4.5',  
LABEL = 'Current Medical Coverage (12) is invalid - Missing Medicare value.',  
ACTIVE = 1,  
SORT_ORDER = 40007,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40007;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40008;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40008,'CW 4.5','Height (13) is mandatory.',1,40008,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40008,  
NAME = 'CW 4.5',  
LABEL = 'Height (13) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40008,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40008;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40009;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40009,'CW 4.5','Height Unit of Measurement (13) is mandatory.',1,40009,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40009,  
NAME = 'CW 4.5',  
LABEL = 'Height Unit of Measurement (13) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40009,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40009;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40010;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40010,'CW 4.5','Height (13) is not a valid value (48 - 82 in. or 122 - 208 cm).',1,40010,1,1,1,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40010,  
NAME = 'CW 4.5',  
LABEL = 'Height (13) is not a valid value (48 - 82 in. or 122 - 208 cm).',  
ACTIVE = 1,  
SORT_ORDER = 40010,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40010;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40011;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40011,'CW 4.5','Height (13) is not a valid value (10 - 82 in or 25 - 208 cm).',1,40011,1,1,1,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40011,  
NAME = 'CW 4.5',  
LABEL = 'Height (13) is not a valid value (10 - 82 in or 25 - 208 cm).',  
ACTIVE = 1,  
SORT_ORDER = 40011,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40011;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40012;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40012,'CW 4.5','Dry Weight (14) is mandatory.',1,40012,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40012,  
NAME = 'CW 4.5',  
LABEL = 'Dry Weight (14) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40012,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40012;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40013;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40013,'CW 4.5','Dry Weight Unit of Measurement (14) is mandatory.',1,40013,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40013,  
NAME = 'CW 4.5',  
LABEL = 'Dry Weight Unit of Measurement (14) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40013,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40013;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40014;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40014,'CW 4.5','Dry Weight (14) is not a valid value (70 - 500 lbs or 32 - 227 kg).',1,40014,1,1,1,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40014,  
NAME = 'CW 4.5',  
LABEL = 'Dry Weight (14) is not a valid value (70 - 500 lbs or 32 - 227 kg).',  
ACTIVE = 1,  
SORT_ORDER = 40014,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 1,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40014;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40015;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40015,'CW 4.5','Primary Cause of Renal Failure (15) is mandatory.',1,40015,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40015,  
NAME = 'CW 4.5',  
LABEL = 'Primary Cause of Renal Failure (15) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40015,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40015;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40016;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40016,'CW 4.5','Prior Employment Status (16) is mandatory.',1,40016,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40016,  
NAME = 'CW 4.5',  
LABEL = 'Prior Employment Status (16) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40016,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40016;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40017;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40017,'CW 4.5','Co-Morbid Conditions (17) are mandatory.',1,40017,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40017,  
NAME = 'CW 4.5',  
LABEL = 'Co-Morbid Conditions (17) are mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40017,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40017;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40018;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40018,'CW 4.5','Co-Morbid Conditions (17) are invalid - None and other values cannot be checked.',1,40018,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40018,  
NAME = 'CW 4.5',  
LABEL = 'Co-Morbid Conditions (17) are invalid - None and other values cannot be checked.',  
ACTIVE = 1,  
SORT_ORDER = 40018,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40018;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40019;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40019,'CW 4.5','Co-Morbid Conditions (17) are invalid - Missing Institutionalized category value.',1,40019,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40019,  
NAME = 'CW 4.5',  
LABEL = 'Co-Morbid Conditions (17) are invalid - Missing Institutionalized category value.',  
ACTIVE = 1,  
SORT_ORDER = 40019,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40019;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40020;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40020,'CW 4.5','Did Patient Receive EPO or Equivalent (18 a) is mandatory.',1,40020,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40020,  
NAME = 'CW 4.5',  
LABEL = 'Did Patient Receive EPO or Equivalent (18 a) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40020,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40020;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40021;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40021,'CW 4.5','Timeframe when the Patient Received EPO or Equivalent (18 a) is mandatory.',1,40021,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40021,  
NAME = 'CW 4.5',  
LABEL = 'Timeframe when the Patient Received EPO or Equivalent (18 a) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40021,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40021;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40022;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40022,'CW 4.5','Was Patient Under Care of Nephrologist (18 b) is mandatory.',1,40022,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40022,  
NAME = 'CW 4.5',  
LABEL = 'Was Patient Under Care of Nephrologist (18 b) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40022,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40022;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40023;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40023,'CW 4.5','Timeframe when the Patient was Under the Care of a Nephrologist (18 b) is mandatory.',1,40023,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40023,  
NAME = 'CW 4.5',  
LABEL = 'Timeframe when the Patient was Under the Care of a Nephrologist (18 b) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40023,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40023;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40024;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40024,'CW 4.5','Was Patient Under Care of Kidney Dietician (18 c) is mandatory.',1,40024,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40024,  
NAME = 'CW 4.5',  
LABEL = 'Was Patient Under Care of Kidney Dietician (18 c) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40024,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40024;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40025;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40025,'CW 4.5','Timeframe when the Patient was Under the Care of a Kidney Dietitian (18 c) is mandatory.',1,40025,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-APR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40025,  
NAME = 'CW 4.5',  
LABEL = 'Timeframe when the Patient was Under the Care of a Kidney Dietitian (18 c) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40025,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-APR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40025;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40026;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40026,'CW 4.5','Access Used on First Outpatient Dialysis (18 d) is mandatory.',1,40026,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40026,  
NAME = 'CW 4.5',  
LABEL = 'Access Used on First Outpatient Dialysis (18 d) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40026,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40026;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40027;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40027,'CW 4.5','Is Maturing AVF Present (18 d) is mandatory.',1,40027,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40027,  
NAME = 'CW 4.5',  
LABEL = 'Is Maturing AVF Present (18 d) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40027,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40027;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40028;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40028,'CW 4.5','Is Maturing Graft Present (18 d) is mandatory.',1,40028,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40028,  
NAME = 'CW 4.5',  
LABEL = 'Is Maturing Graft Present (18 d) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40028,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40028;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40029;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40029,'CW 4.5','Serum Creatinine (19 b) is mandatory.',1,40029,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40029,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine (19 b) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40029,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40029;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40030;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40030,'CW 4.5','Serum Albumin Date (19 a.1) is mandatory.',1,40030,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40030,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40030,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40030;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40031;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40031,'CW 4.5','Serum Albumin Date (19 a.1) cannot be a future date.',1,40031,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40031,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40031,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40031;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40032;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40032,'CW 4.5','Serum Albumin Date (19 a.1) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40032,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40032,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40032,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40032;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40033;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40033,'CW 4.5','Serum Albumin Date (19 a.1) must be on or after 01/01/1973.',1,40033,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40033,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40033,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40033;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40034;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40034,'CW 4.5','Serum Albumin Date (19 a.1) cannot be after the Physician Signature Date (50).',1,40034,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40034,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40034,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40034;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40035;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40035,'CW 4.5','Serum Albumin Date (19 a.1) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40035,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40035,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40035,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40035;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40036;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40036,'CW 4.5','Serum Albumin Date (19 a.1) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',1,40036,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40036,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40036,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40036;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40037;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40037,'CW 4.5','Serum Albumin Date (19 a.1) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40037,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40037,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Date (19 a.1) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40037,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40037;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40038;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40038,'CW 4.5','Serum Albumin (19 a.1) is not in the valid range (1.00 - 5.50).',1,40038,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40038,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin (19 a.1) is not in the valid range (1.00 - 5.50).',  
ACTIVE = 1,  
SORT_ORDER = 40038,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40038;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40039;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40039,'CW 4.5','Serum Albumin Lower Limit (19 a.2) is not in the valid range (0.50 - 5.50).',1,40039,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40039,  
NAME = 'CW 4.5',  
LABEL = 'Serum Albumin Lower Limit (19 a.2) is not in the valid range (0.50 - 5.50).',  
ACTIVE = 1,  
SORT_ORDER = 40039,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40039;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40040;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40040,'CW 4.5','Serum Creatinine (19 b) Date is mandatory.',1,40040,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40040,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine (19 b) Date is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40040,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40040;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40041;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40041,'CW 4.5','Serum Creatinine Date (19 b) cannot be a future date.',1,40041,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40041,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40041,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40041;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40042;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40042,'CW 4.5','Serum Creatinine Date (19 b) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40042,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40042,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40042,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40042;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40043;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40043,'CW 4.5','Serum Creatinine Date (19 b) must be on or after 01/01/1973.',1,40043,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40043,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40043,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40043;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40044;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40044,'CW 4.5','Serum Creatinine Date (19 b) cannot be after the Physician Signature Date (50).',1,40044,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40044,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40044,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40044;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40045;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40045,'CW 4.5','Serum Creatinine Date (19 b) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40045,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40045,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40045,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40045;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40046;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40046,'CW 4.5','Serum Creatinine Date (19 b) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',1,40046,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40046,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40046,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40046;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40047;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40047,'CW 4.5','Serum Creatinine Date (19 b) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40047,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40047,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine Date (19 b) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40047,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40047;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40048;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40048,'CW 4.5','Serum Creatinine (19 b) is not in the valid range (2.0 - 25.0).',1,40048,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40048,  
NAME = 'CW 4.5',  
LABEL = 'Serum Creatinine (19 b) is not in the valid range (2.0 - 25.0).',  
ACTIVE = 1,  
SORT_ORDER = 40048,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40048;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40049;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40049,'CW 4.5','Hemoglobin Date (19 c) is mandatory.',1,40049,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40049,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40049,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40049;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40050;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40050,'CW 4.5','Hemoglobin Date (19 c) cannot be a future date.',1,40050,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40050,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40050,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40050;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40051;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40051,'CW 4.5','Hemoglobin Date (19 c) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40051,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40051,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40051,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40051;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40052;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40052,'CW 4.5','Hemoglobin Date (19 c) must be on or after 01/01/1973.',1,40052,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40052,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40052,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40052;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40053;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40053,'CW 4.5','Hemoglobin Date (19 c) cannot be after the Physician Signature Date (50).',1,40053,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40053,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) cannot be after the Physician Signature Date (50).',  
ACTIVE = 1,  
SORT_ORDER = 40053,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40053;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40054;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40054,'CW 4.5','Hemoglobin Date (19 c) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',1,40054,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40054,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) cannot be after the patient''''s Date of Death [{0}]. Edit and submit changes to the Date of Death on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40054,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40054;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40055;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40055,'CW 4.5','Hemoglobin Date (19 c) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',1,40055,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40055,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) must be within 45 days prior to the Date Regular Chronic Dialysis Began (24).',  
ACTIVE = 1,  
SORT_ORDER = 40055,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40055;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40056;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40056,'CW 4.5','Hemoglobin Date (19 c) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',1,40056,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40056,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin Date (19 c) must be within 45 days prior to the Date of Transplant (28). Edit and submit changes to the Admit Date on the admit/discharge page or the Transplant Date on the treatment page.',  
ACTIVE = 1,  
SORT_ORDER = 40056,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40056;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40057;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40057,'CW 4.5','Hemoglobin (19 c) is not in the valid range (5.0 - 20.0).',1,40057,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40057,  
NAME = 'CW 4.5',  
LABEL = 'Hemoglobin (19 c) is not in the valid range (5.0 - 20.0).',  
ACTIVE = 1,  
SORT_ORDER = 40057,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40057;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40058;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40058,'CW 4.5','HbA1c Date (19 d) is mandatory.',1,40058,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40058,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40058,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40058;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40059;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40059,'CW 4.5','HbA1c Date (19 d) cannot be a future date.',1,40059,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40059,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) cannot be a future date.',  
ACTIVE = 1,  
SORT_ORDER = 40059,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40059;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40060;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40060,'CW 4.5','HbA1c Date (19 d) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',1,40060,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('10-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40060,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) cannot be prior to the patient''''s Date of Birth [{0}] (4). Edit and submit changes to the Date of Birth on the patient edit page.',  
ACTIVE = 1,  
SORT_ORDER = 40060,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('10-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40060;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40061;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40061,'CW 4.5','HbA1c Date (19 d) must be on or after 01/01/1973.',1,40061,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('07-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40061,  
NAME = 'CW 4.5',  
LABEL = 'HbA1c Date (19 d) must be on or after 01/01/1973.',  
ACTIVE = 1,  
SORT_ORDER = 40061,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('07-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40061;
END IF;

-- reset the counter
CNT_V := 0;

SELECT COUNT(*)
INTO CNT_V
FROM CROWN.VALIDATION_ERROR_MESSAGE
WHERE ERROR_CODE = 40004;

IF CNT_V = 0 THEN
	INSERT INTO CROWN.VALIDATION_ERROR_MESSAGE (ERROR_CODE,NAME,LABEL,ACTIVE,SORT_ORDER,CATEGORY,SUB_CATEGORY,IS_WARNING,CREATE_TIME,UPDATE_TIME) values (40004,'CW 4.5','Applying for ESRD Medicare Coverage (11) is mandatory.',1,40004,1,1,0,to_date('03-MAR-14','DD-MON-RR'),to_date('03-MAR-14','DD-MON-RR'));
ELSE
	UPDATE CROWN.VALIDATION_ERROR_MESSAGE
		SET ERROR_CODE = 40004,  
NAME = 'CW 4.5',  
LABEL = 'Applying for ESRD Medicare Coverage (11) is mandatory.',  
ACTIVE = 1,  
SORT_ORDER = 40004,  
CATEGORY = 1,  
SUB_CATEGORY = 1,  
IS_WARNING = 0,  
CREATE_TIME = to_date('03-MAR-14','DD-MON-RR'),  
UPDATE_TIME = to_date('03-MAR-14','DD-MON-RR') 
	WHERE ERROR_CODE = 40004;
END IF;

-- reset the counter
CNT_V := 0;

/
;
